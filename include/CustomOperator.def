// CustomOperator.def
/*
The CUSTOM_OP_TYPE(OP_TYPE, OP_ID, SEW, TYPE_CLASS, OP_ATTR, OUTPUT_TYPE,
NUM_OF_INPUTS, INPUT_TYPE(S)...) macro is unrolled in Basic.hpp, Operator.hpp,
Graph.hpp

Assumes NUM_OF_OUTPUTS = 1
*/
CUSTOM_OP_TYPE(AddVV8VInt8, add_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8, add_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16, add_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16, add_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32, add_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32, add_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64, add_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64, add_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AddVV8VUInt8, add_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8, add_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16, add_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16, add_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32, add_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32, add_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64, add_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64, add_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SubVV8VInt8, sub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SubVX8VInt8, sub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SubVV16VInt16, sub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SubVX16VInt16, sub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SubVV32VInt32, sub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SubVX32VInt32, sub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SubVV64VInt64, sub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SubVX64VInt64, sub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SubVV8VUInt8, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SubVX8VUInt8, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SubVV16VUInt16, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SubVX16VUInt16, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SubVV32VUInt32, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SubVX32VUInt32, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SubVV64VUInt64, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SubVX64VUInt64, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(RsubVX8VInt8, rsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(RsubVX16VInt16, rsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(RsubVX32VInt32, rsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(RsubVX64VInt64, rsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(RsubVX8VUInt8, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(RsubVX16VUInt16, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(RsubVX32VUInt32, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(RsubVX64VUInt64, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AddVV8VInt8_m, add_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8_m, add_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16_m, add_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16_m, add_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32_m, add_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32_m, add_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64_m, add_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64_m, add_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AddVV8VUInt8_m, add_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8_m, add_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16_m, add_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16_m, add_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32_m, add_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32_m, add_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64_m, add_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64_m, add_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SubVV8VInt8_m, sub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SubVX8VInt8_m, sub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SubVV16VInt16_m, sub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SubVX16VInt16_m, sub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SubVV32VInt32_m, sub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SubVX32VInt32_m, sub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SubVV64VInt64_m, sub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SubVX64VInt64_m, sub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SubVV8VUInt8_m, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SubVX8VUInt8_m, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SubVV16VUInt16_m, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SubVX16VUInt16_m, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SubVV32VUInt32_m, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SubVX32VUInt32_m, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SubVV64VUInt64_m, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SubVX64VUInt64_m, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(RsubVX8VInt8_m, rsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(RsubVX16VInt16_m, rsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(RsubVX32VInt32_m, rsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(RsubVX64VInt64_m, rsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(RsubVX8VUInt8_m, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(RsubVX16VUInt16_m, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(RsubVX32VUInt32_m, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(RsubVX64VUInt64_m, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AndVV8VInt8, and_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AndVX8VInt8, and_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AndVV16VInt16, and_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AndVX16VInt16, and_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AndVV32VInt32, and_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AndVX32VInt32, and_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AndVV64VInt64, and_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AndVX64VInt64, and_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AndVV8VUInt8, and_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AndVX8VUInt8, and_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AndVV16VUInt16, and_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AndVX16VUInt16, and_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AndVV32VUInt32, and_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AndVX32VUInt32, and_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AndVV64VUInt64, and_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AndVX64VUInt64, and_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(OrVV8VInt8, or_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(OrVX8VInt8, or_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(OrVV16VInt16, or_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(OrVX16VInt16, or_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(OrVV32VInt32, or_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(OrVX32VInt32, or_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(OrVV64VInt64, or_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(OrVX64VInt64, or_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(OrVV8VUInt8, or_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(OrVX8VUInt8, or_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(OrVV16VUInt16, or_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(OrVX16VUInt16, or_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(OrVV32VUInt32, or_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(OrVX32VUInt32, or_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(OrVV64VUInt64, or_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(OrVX64VUInt64, or_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(XorVV8VInt8, xor_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(XorVX8VInt8, xor_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(XorVV16VInt16, xor_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(XorVX16VInt16, xor_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(XorVV32VInt32, xor_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(XorVX32VInt32, xor_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(XorVV64VInt64, xor_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(XorVX64VInt64, xor_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(XorVV8VUInt8, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(XorVX8VUInt8, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(XorVV16VUInt16, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(XorVX16VUInt16, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(XorVV32VUInt32, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(XorVX32VUInt32, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(XorVV64VUInt64, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(XorVX64VUInt64, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AndVV8VInt8_m, and_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AndVX8VInt8_m, and_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AndVV16VInt16_m, and_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AndVX16VInt16_m, and_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AndVV32VInt32_m, and_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AndVX32VInt32_m, and_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AndVV64VInt64_m, and_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AndVX64VInt64_m, and_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AndVV8VUInt8_m, and_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AndVX8VUInt8_m, and_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AndVV16VUInt16_m, and_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AndVX16VUInt16_m, and_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AndVV32VUInt32_m, and_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AndVX32VUInt32_m, and_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AndVV64VUInt64_m, and_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AndVX64VUInt64_m, and_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(OrVV8VInt8_m, or_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(OrVX8VInt8_m, or_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(OrVV16VInt16_m, or_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(OrVX16VInt16_m, or_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(OrVV32VInt32_m, or_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(OrVX32VInt32_m, or_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(OrVV64VInt64_m, or_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(OrVX64VInt64_m, or_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(OrVV8VUInt8_m, or_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(OrVX8VUInt8_m, or_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(OrVV16VUInt16_m, or_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(OrVX16VUInt16_m, or_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(OrVV32VUInt32_m, or_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(OrVX32VUInt32_m, or_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(OrVV64VUInt64_m, or_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(OrVX64VUInt64_m, or_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(XorVV8VInt8_m, xor_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(XorVX8VInt8_m, xor_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(XorVV16VInt16_m, xor_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(XorVX16VInt16_m, xor_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(XorVV32VInt32_m, xor_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(XorVX32VInt32_m, xor_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(XorVV64VInt64_m, xor_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(XorVX64VInt64_m, xor_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(XorVV8VUInt8_m, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(XorVX8VUInt8_m, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(XorVV16VUInt16_m, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(XorVX16VUInt16_m, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(XorVV32VUInt32_m, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(XorVX32VUInt32_m, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(XorVV64VUInt64_m, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(XorVX64VUInt64_m, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SllVV8VInt8, sll_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SllVX8VInt8, sll_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV16VInt16, sll_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SllVX16VInt16, sll_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV32VInt32, sll_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SllVX32VInt32, sll_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV64VInt64, sll_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SllVX64VInt64, sll_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV8VUInt8, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SllVX8VUInt8, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV16VUInt16, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SllVX16VUInt16, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV32VUInt32, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SllVX32VUInt32, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV64VUInt64, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SllVX64VUInt64, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV8VInt8, sra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SraVX8VInt8, sra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV16VInt16, sra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SraVX16VInt16, sra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV32VInt32, sra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SraVX32VInt32, sra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV64VInt64, sra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SraVX64VInt64, sra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV8VInt8_m, sll_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SllVX8VInt8_m, sll_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV16VInt16_m, sll_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SllVX16VInt16_m, sll_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV32VInt32_m, sll_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SllVX32VInt32_m, sll_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV64VInt64_m, sll_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SllVX64VInt64_m, sll_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV8VUInt8_m, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SllVX8VUInt8_m, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV16VUInt16_m, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SllVX16VUInt16_m, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV32VUInt32_m, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SllVX32VUInt32_m, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SllVV64VUInt64_m, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SllVX64VUInt64_m, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV8VInt8_m, sra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SraVX8VInt8_m, sra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV16VInt16_m, sra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SraVX16VInt16_m, sra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV32VInt32_m, sra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SraVX32VInt32_m, sra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SraVV64VInt64_m, sra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SraVX64VInt64_m, sra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt32)

CUSTOM_OP_TYPE(WaddWVV8VInt16, wadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WaddWVX8VInt16, wadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WaddWWV8VInt16, wadd_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(WaddWWX8VInt16, wadd_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt16, ScalarInt8)
CUSTOM_OP_TYPE(WaddWVV16VInt32, wadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WaddWVX16VInt32, wadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WaddWWV16VInt32, wadd_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(WaddWWX16VInt32, wadd_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt32, ScalarInt16)
CUSTOM_OP_TYPE(WaddWVV32VInt64, wadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WaddWVX32VInt64, wadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WaddWWV32VInt64, wadd_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt64, OneDInt32)
CUSTOM_OP_TYPE(WaddWWX32VInt64, wadd_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt64, ScalarInt32)
CUSTOM_OP_TYPE(WadduWVV8VUInt16, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WadduWVX8VUInt16, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WadduWWV8VUInt16, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(WadduWWX8VUInt16, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt8)
CUSTOM_OP_TYPE(WadduWVV16VUInt32, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WadduWVX16VUInt32, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WadduWWV16VUInt32, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(WadduWWX16VUInt32, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt16)
CUSTOM_OP_TYPE(WadduWVV32VUInt64, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WadduWVX32VUInt64, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WadduWWV32VUInt64, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(WadduWWX32VUInt64, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(WsubWVV8VInt16, wsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WsubWVX8VInt16, wsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WsubWWV8VInt16, wsub_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(WsubWWX8VInt16, wsub_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt16, ScalarInt8)
CUSTOM_OP_TYPE(WsubWVV16VInt32, wsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WsubWVX16VInt32, wsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WsubWWV16VInt32, wsub_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(WsubWWX16VInt32, wsub_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt32, ScalarInt16)
CUSTOM_OP_TYPE(WsubWVV32VInt64, wsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WsubWVX32VInt64, wsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WsubWWV32VInt64, wsub_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt64, OneDInt32)
CUSTOM_OP_TYPE(WsubWWX32VInt64, wsub_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt64, ScalarInt32)
CUSTOM_OP_TYPE(WsubuWVV8VUInt16, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WsubuWVX8VUInt16, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WsubuWWV8VUInt16, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(WsubuWWX8VUInt16, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt8)
CUSTOM_OP_TYPE(WsubuWVV16VUInt32, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WsubuWVX16VUInt32, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WsubuWWV16VUInt32, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(WsubuWWX16VUInt32, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt16)
CUSTOM_OP_TYPE(WsubuWVV32VUInt64, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WsubuWVX32VUInt64, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WsubuWWV32VUInt64, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(WsubuWWX32VUInt64, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(WaddWVV8VInt16_m, wadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WaddWVX8VInt16_m, wadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WaddWWV8VInt16_m, wadd_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(WaddWWX8VInt16_m, wadd_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
CUSTOM_OP_TYPE(WaddWVV16VInt32_m, wadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WaddWVX16VInt32_m, wadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WaddWWV16VInt32_m, wadd_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(WaddWWX16VInt32_m, wadd_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
CUSTOM_OP_TYPE(WaddWVV32VInt64_m, wadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WaddWVX32VInt64_m, wadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WaddWWV32VInt64_m, wadd_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
CUSTOM_OP_TYPE(WaddWWX32VInt64_m, wadd_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
CUSTOM_OP_TYPE(WadduWVV8VUInt16_m, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WadduWVX8VUInt16_m, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WadduWWV8VUInt16_m, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(WadduWWX8VUInt16_m, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
CUSTOM_OP_TYPE(WadduWVV16VUInt32_m, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WadduWVX16VUInt32_m, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WadduWWV16VUInt32_m, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(WadduWWX16VUInt32_m, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
CUSTOM_OP_TYPE(WadduWVV32VUInt64_m, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WadduWVX32VUInt64_m, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WadduWWV32VUInt64_m, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(WadduWWX32VUInt64_m, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(WsubWVV8VInt16_m, wsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WsubWVX8VInt16_m, wsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WsubWWV8VInt16_m, wsub_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(WsubWWX8VInt16_m, wsub_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
CUSTOM_OP_TYPE(WsubWVV16VInt32_m, wsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WsubWVX16VInt32_m, wsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WsubWWV16VInt32_m, wsub_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(WsubWWX16VInt32_m, wsub_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
CUSTOM_OP_TYPE(WsubWVV32VInt64_m, wsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WsubWVX32VInt64_m, wsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WsubWWV32VInt64_m, wsub_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
CUSTOM_OP_TYPE(WsubWWX32VInt64_m, wsub_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
CUSTOM_OP_TYPE(WsubuWVV8VUInt16_m, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WsubuWVX8VUInt16_m, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WsubuWWV8VUInt16_m, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(WsubuWWX8VUInt16_m, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
CUSTOM_OP_TYPE(WsubuWVV16VUInt32_m, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WsubuWVX16VUInt32_m, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WsubuWWV16VUInt32_m, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(WsubuWWX16VUInt32_m, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
CUSTOM_OP_TYPE(WsubuWVV32VUInt64_m, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WsubuWVX32VUInt64_m, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WsubuWWV32VUInt64_m, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(WsubuWWX32VUInt64_m, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

CUSTOM_OP_TYPE(MaccVV8VInt8, macc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaccVX8VInt8, macc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(MaccVV16VInt16, macc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaccVX16VInt16, macc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(MaccVV32VInt32, macc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaccVX32VInt32, macc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(MaccVV64VInt64, macc_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaccVX64VInt64, macc_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(MaccVV8VUInt8, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaccVX8VUInt8, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaccVV16VUInt16, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaccVX16VUInt16, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaccVV32VUInt32, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaccVX32VUInt32, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaccVV64VUInt64, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MaccVX64VUInt64, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(NmsacVV8VInt8, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsacVX8VInt8, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsacVV16VInt16, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsacVX16VInt16, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsacVV32VInt32, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsacVX32VInt32, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsacVV64VInt64, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(NmsacVX64VInt64, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(NmsacVV8VUInt8, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsacVX8VUInt8, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsacVV16VUInt16, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsacVX16VUInt16, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsacVV32VUInt32, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsacVX32VUInt32, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsacVV64VUInt64, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(NmsacVX64VUInt64, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MaddVV8VInt8, madd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaddVX8VInt8, madd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(MaddVV16VInt16, madd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaddVX16VInt16, madd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(MaddVV32VInt32, madd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaddVX32VInt32, madd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(MaddVV64VInt64, madd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaddVX64VInt64, madd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(MaddVV8VUInt8, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaddVX8VUInt8, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaddVV16VUInt16, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaddVX16VUInt16, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaddVV32VUInt32, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaddVX32VUInt32, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaddVV64VUInt64, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MaddVX64VUInt64, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(NmsubVV8VInt8, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsubVX8VInt8, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsubVV16VInt16, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsubVX16VInt16, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsubVV32VInt32, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsubVX32VInt32, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsubVV64VInt64, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(NmsubVX64VInt64, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(NmsubVV8VUInt8, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsubVX8VUInt8, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsubVV16VUInt16, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsubVX16VUInt16, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsubVV32VUInt32, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsubVX32VUInt32, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsubVV64VUInt64, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(NmsubVX64VUInt64, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MaccVV8VInt8_m, macc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaccVX8VInt8_m, macc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(MaccVV16VInt16_m, macc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaccVX16VInt16_m, macc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(MaccVV32VInt32_m, macc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaccVX32VInt32_m, macc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(MaccVV64VInt64_m, macc_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaccVX64VInt64_m, macc_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(MaccVV8VUInt8_m, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaccVX8VUInt8_m, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaccVV16VUInt16_m, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaccVX16VUInt16_m, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaccVV32VUInt32_m, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaccVX32VUInt32_m, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaccVV64VUInt64_m, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MaccVX64VUInt64_m, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(NmsacVV8VInt8_m, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsacVX8VInt8_m, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsacVV16VInt16_m, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsacVX16VInt16_m, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsacVV32VInt32_m, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsacVX32VInt32_m, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsacVV64VInt64_m, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(NmsacVX64VInt64_m, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(NmsacVV8VUInt8_m, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsacVX8VUInt8_m, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsacVV16VUInt16_m, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsacVX16VUInt16_m, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsacVV32VUInt32_m, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsacVX32VUInt32_m, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsacVV64VUInt64_m, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(NmsacVX64VUInt64_m, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MaddVV8VInt8_m, madd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaddVX8VInt8_m, madd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(MaddVV16VInt16_m, madd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaddVX16VInt16_m, madd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(MaddVV32VInt32_m, madd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaddVX32VInt32_m, madd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(MaddVV64VInt64_m, madd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaddVX64VInt64_m, madd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(MaddVV8VUInt8_m, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaddVX8VUInt8_m, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MaddVV16VUInt16_m, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaddVX16VUInt16_m, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MaddVV32VUInt32_m, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaddVX32VUInt32_m, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MaddVV64VUInt64_m, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MaddVX64VUInt64_m, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(NmsubVV8VInt8_m, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsubVX8VInt8_m, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(NmsubVV16VInt16_m, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsubVX16VInt16_m, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(NmsubVV32VInt32_m, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsubVX32VInt32_m, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
CUSTOM_OP_TYPE(NmsubVV64VInt64_m, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(NmsubVX64VInt64_m, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// CUSTOM_OP_TYPE(NmsubVV8VUInt8_m, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsubVX8VUInt8_m, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(NmsubVV16VUInt16_m, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsubVX16VUInt16_m, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(NmsubVV32VUInt32_m, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsubVX32VUInt32_m, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(NmsubVV64VUInt64_m, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(NmsubVX64VUInt64_m, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
CUSTOM_OP_TYPE(WmaccVV8VInt16, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccVX8VInt16, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 3, OneDInt16, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccVV16VInt32, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccVX16VInt32, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 3, OneDInt32, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccVV32VInt64, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WmaccVX32VInt64, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 3, OneDInt64, ScalarInt32, OneDInt32)
// CUSTOM_OP_TYPE(WmaccVV8VUInt16, wmacc_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(WmaccVX8VUInt16, wmacc_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(WmaccVV16VUInt32, wmacc_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(WmaccVX16VUInt32, wmacc_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(WmaccVV32VUInt64, wmacc_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(WmaccVX32VUInt64, wmacc_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccsuVV8VInt16, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 3, OneDInt16, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmaccsuVX8VInt16, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 3, OneDInt16, ScalarInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmaccsuVV16VInt32, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 3, OneDInt32, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmaccsuVX16VInt32, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 3, OneDInt32, ScalarInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmaccsuVV32VInt64, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 3, OneDInt64, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccsuVX32VInt64, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 3, OneDInt64, ScalarInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccusVX8VInt16, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 3, OneDInt16, ScalarUInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccusVX16VInt32, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 3, OneDInt32, ScalarUInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccusVX32VInt64, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 3, OneDInt64, ScalarUInt32, OneDInt32)
CUSTOM_OP_TYPE(WmaccVV8VInt16_m, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccVX8VInt16_m, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccVV16VInt32_m, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccVX16VInt32_m, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccVV32VInt64_m, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WmaccVX32VInt64_m, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDInt32)
// CUSTOM_OP_TYPE(WmaccVV8VUInt16_m, wmacc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(WmaccVX8VUInt16_m, wmacc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(WmaccVV16VUInt32_m, wmacc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(WmaccVX16VUInt32_m, wmacc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(WmaccVV32VUInt64_m, wmacc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(WmaccVX32VUInt64_m, wmacc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccsuVV8VInt16_m, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmaccsuVX8VInt16_m, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmaccsuVV16VInt32_m, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmaccsuVX16VInt32_m, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmaccsuVV32VInt64_m, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccsuVX32VInt64_m, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmaccusVX8VInt16_m, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, ScalarUInt8, OneDInt8)
CUSTOM_OP_TYPE(WmaccusVX16VInt32_m, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, ScalarUInt16, OneDInt16)
CUSTOM_OP_TYPE(WmaccusVX32VInt64_m, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, ScalarUInt32, OneDInt32)

CUSTOM_OP_TYPE(MseqVV8VBool, mseq_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MseqVX8VBool, mseq_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MseqVV16VBool, mseq_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MseqVX16VBool, mseq_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MseqVV32VBool, mseq_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MseqVX32VBool, mseq_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MseqVV64VBool, mseq_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MseqVX64VBool, mseq_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
// CUSTOM_OP_TYPE(MseqVV8VBool, mseq_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MseqVX8VBool, mseq_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
// CUSTOM_OP_TYPE(MseqVV16VBool, mseq_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MseqVX16VBool, mseq_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
// CUSTOM_OP_TYPE(MseqVV32VBool, mseq_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MseqVX32VBool, mseq_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
// CUSTOM_OP_TYPE(MseqVV64VBool, mseq_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MseqVX64VBool, mseq_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsneVV8VBool, msne_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsneVX8VBool, msne_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsneVV16VBool, msne_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsneVX16VBool, msne_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsneVV32VBool, msne_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsneVX32VBool, msne_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsneVV64VBool, msne_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsneVX64VBool, msne_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
// CUSTOM_OP_TYPE(MsneVV8VBool, msne_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MsneVX8VBool, msne_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
// CUSTOM_OP_TYPE(MsneVV16VBool, msne_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MsneVX16VBool, msne_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
// CUSTOM_OP_TYPE(MsneVV32VBool, msne_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MsneVX32VBool, msne_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
// CUSTOM_OP_TYPE(MsneVV64VBool, msne_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MsneVX64VBool, msne_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsltVV8VBool, mslt_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsltVX8VBool, mslt_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsltVV16VBool, mslt_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsltVX16VBool, mslt_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsltVV32VBool, mslt_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsltVX32VBool, mslt_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsltVV64VBool, mslt_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsltVX64VBool, mslt_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MsltuVV8VBool, msltu_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MsltuVX8VBool, msltu_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MsltuVV16VBool, msltu_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MsltuVX16VBool, msltu_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MsltuVV32VBool, msltu_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MsltuVX32VBool, msltu_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MsltuVV64VBool, msltu_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MsltuVX64VBool, msltu_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsleVV8VBool, msle_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsleVX8VBool, msle_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsleVV16VBool, msle_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsleVX16VBool, msle_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsleVV32VBool, msle_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsleVX32VBool, msle_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsleVV64VBool, msle_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsleVX64VBool, msle_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MsleuVV8VBool, msleu_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MsleuVX8VBool, msleu_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MsleuVV16VBool, msleu_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MsleuVX16VBool, msleu_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MsleuVV32VBool, msleu_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MsleuVX32VBool, msleu_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MsleuVV64VBool, msleu_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MsleuVX64VBool, msleu_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsgtVV8VBool, msgt_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsgtVX8VBool, msgt_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsgtVV16VBool, msgt_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsgtVX16VBool, msgt_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsgtVV32VBool, msgt_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsgtVX32VBool, msgt_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsgtVV64VBool, msgt_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsgtVX64VBool, msgt_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MsgtuVV8VBool, msgtu_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MsgtuVX8VBool, msgtu_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MsgtuVV16VBool, msgtu_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MsgtuVX16VBool, msgtu_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MsgtuVV32VBool, msgtu_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MsgtuVX32VBool, msgtu_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MsgtuVV64VBool, msgtu_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MsgtuVX64VBool, msgtu_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsgeVV8VBool, msge_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsgeVX8VBool, msge_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsgeVV16VBool, msge_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsgeVX16VBool, msge_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsgeVV32VBool, msge_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsgeVX32VBool, msge_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsgeVV64VBool, msge_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsgeVX64VBool, msge_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MsgeuVV8VBool, msgeu_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MsgeuVX8VBool, msgeu_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MsgeuVV16VBool, msgeu_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MsgeuVX16VBool, msgeu_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MsgeuVV32VBool, msgeu_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MsgeuVX32VBool, msgeu_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MsgeuVV64VBool, msgeu_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MsgeuVX64VBool, msgeu_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(MinVV8VInt8, min_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MinVX8VInt8, min_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MinVV16VInt16, min_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MinVX16VInt16, min_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MinVV32VInt32, min_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MinVX32VInt32, min_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MinVV64VInt64, min_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MinVX64VInt64, min_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MinuVV8VUInt8, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MinuVX8VUInt8, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MinuVV16VUInt16, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MinuVX16VUInt16, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MinuVV32VUInt32, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MinuVX32VUInt32, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MinuVV64VUInt64, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MinuVX64VUInt64, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MaxVV8VInt8, max_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaxVX8VInt8, max_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MaxVV16VInt16, max_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaxVX16VInt16, max_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MaxVV32VInt32, max_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaxVX32VInt32, max_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MaxVV64VInt64, max_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaxVX64VInt64, max_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MaxuVV8VUInt8, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MaxuVX8VUInt8, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MaxuVV16VUInt16, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MaxuVX16VUInt16, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MaxuVV32VUInt32, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MaxuVX32VUInt32, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MaxuVV64VUInt64, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MaxuVX64VUInt64, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MinVV8VInt8_m, min_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MinVX8VInt8_m, min_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MinVV16VInt16_m, min_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MinVX16VInt16_m, min_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MinVV32VInt32_m, min_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MinVX32VInt32_m, min_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MinVV64VInt64_m, min_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MinVX64VInt64_m, min_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MinuVV8VUInt8_m, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MinuVX8VUInt8_m, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MinuVV16VUInt16_m, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MinuVX16VUInt16_m, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MinuVV32VUInt32_m, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MinuVX32VUInt32_m, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MinuVV64VUInt64_m, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MinuVX64VUInt64_m, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MaxVV8VInt8_m, max_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MaxVX8VInt8_m, max_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MaxVV16VInt16_m, max_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MaxVX16VInt16_m, max_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MaxVV32VInt32_m, max_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MaxVX32VInt32_m, max_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MaxVV64VInt64_m, max_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MaxVX64VInt64_m, max_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MaxuVV8VUInt8_m, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MaxuVX8VUInt8_m, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MaxuVV16VUInt16_m, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MaxuVX16VUInt16_m, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MaxuVV32VUInt32_m, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MaxuVX32VUInt32_m, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MaxuVV64VUInt64_m, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MaxuVX64VUInt64_m, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(SrlVV8VUInt8, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SrlVX8VUInt8, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV16VUInt16, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SrlVX16VUInt16, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV32VUInt32, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SrlVX32VUInt32, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV64VUInt64, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SrlVX64VUInt64, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV8VUInt8_m, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SrlVX8VUInt8_m, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV16VUInt16_m, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SrlVX16VUInt16_m, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV32VUInt32_m, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SrlVX32VUInt32_m, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SrlVV64VUInt64_m, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SrlVX64VUInt64_m, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

CUSTOM_OP_TYPE(NsrlWV8VUInt8, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(NsrlWX8VUInt8, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 2, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NsrlWV16VUInt16, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(NsrlWX16VUInt16, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NsrlWV32VUInt32, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(NsrlWX32VUInt32, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV8VInt8, nsra_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(NsraWX8VInt8, nsra_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 2, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV16VInt16, nsra_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(NsraWX16VInt16, nsra_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV32VInt32, nsra_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(NsraWX32VInt32, nsra_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 2, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NsrlWV8VUInt8_m, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(NsrlWX8VUInt8_m, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NsrlWV16VUInt16_m, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(NsrlWX16VUInt16_m, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NsrlWV32VUInt32_m, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(NsrlWX32VUInt32_m, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV8VInt8_m, nsra_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(NsraWX8VInt8_m, nsra_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV16VInt16_m, nsra_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(NsraWX16VInt16_m, nsra_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NsraWV32VInt32_m, nsra_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(NsraWX32VInt32_m, nsra_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUInt32)

CUSTOM_OP_TYPE(MulVV8VInt8, mul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MulVX8VInt8, mul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MulVV16VInt16, mul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MulVX16VInt16, mul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MulVV32VInt32, mul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MulVX32VInt32, mul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MulVV64VInt64, mul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MulVX64VInt64, mul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MulVV8VUInt8, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulVX8VUInt8, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulVV16VUInt16, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulVX16VUInt16, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulVV32VUInt32, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulVX32VUInt32, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulVV64VUInt64, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulVX64VUInt64, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MulhVV8VInt8, mulh_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MulhVX8VInt8, mulh_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MulhVV16VInt16, mulh_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MulhVX16VInt16, mulh_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MulhVV32VInt32, mulh_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MulhVX32VInt32, mulh_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MulhVV64VInt64, mulh_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MulhVX64VInt64, mulh_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MulhuVV8VUInt8, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulhuVX8VUInt8, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulhuVV16VUInt16, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulhuVX16VUInt16, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulhuVV32VUInt32, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulhuVX32VUInt32, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulhuVV64VUInt64, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulhuVX64VUInt64, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MulhsuVV8VInt8, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulhsuVX8VInt8, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulhsuVV16VInt16, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulhsuVX16VInt16, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulhsuVV32VInt32, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulhsuVX32VInt32, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulhsuVV64VInt64, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulhsuVX64VInt64, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MulVV8VInt8_m, mul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MulVX8VInt8_m, mul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MulVV16VInt16_m, mul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MulVX16VInt16_m, mul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MulVV32VInt32_m, mul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MulVX32VInt32_m, mul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MulVV64VInt64_m, mul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MulVX64VInt64_m, mul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MulVV8VUInt8_m, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulVX8VUInt8_m, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulVV16VUInt16_m, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulVX16VUInt16_m, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulVV32VUInt32_m, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulVX32VUInt32_m, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulVV64VUInt64_m, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulVX64VUInt64_m, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MulhVV8VInt8_m, mulh_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MulhVX8VInt8_m, mulh_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MulhVV16VInt16_m, mulh_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MulhVX16VInt16_m, mulh_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MulhVV32VInt32_m, mulh_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MulhVX32VInt32_m, mulh_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MulhVV64VInt64_m, mulh_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MulhVX64VInt64_m, mulh_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MulhuVV8VUInt8_m, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulhuVX8VUInt8_m, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulhuVV16VUInt16_m, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulhuVX16VUInt16_m, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulhuVV32VUInt32_m, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulhuVX32VUInt32_m, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulhuVV64VUInt64_m, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulhuVX64VUInt64_m, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MulhsuVV8VInt8_m, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(MulhsuVX8VInt8_m, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MulhsuVV16VInt16_m, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(MulhsuVX16VInt16_m, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MulhsuVV32VInt32_m, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(MulhsuVX32VInt32_m, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MulhsuVV64VInt64_m, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(MulhsuVX64VInt64_m, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt64)

CUSTOM_OP_TYPE(WmulVV8VInt16, wmul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WmulVX8VInt16, wmul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WmulVV16VInt32, wmul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WmulVX16VInt32, wmul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WmulVV32VInt64, wmul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WmulVX32VInt64, wmul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WmuluVV8VUInt16, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmuluVX8VUInt16, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WmuluVV16VUInt32, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmuluVX16VUInt32, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WmuluVV32VUInt64, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmuluVX32VUInt64, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WmulsuVV8VInt16, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmulsuVX8VInt16, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 2, OneDInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WmulsuVV16VInt32, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmulsuVX16VInt32, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 2, OneDInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WmulsuVV32VInt64, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmulsuVX32VInt64, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WmulVV8VInt16_m, wmul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(WmulVX8VInt16_m, wmul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(WmulVV16VInt32_m, wmul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(WmulVX16VInt32_m, wmul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(WmulVV32VInt64_m, wmul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(WmulVX32VInt64_m, wmul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(WmuluVV8VUInt16_m, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmuluVX8VUInt16_m, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WmuluVV16VUInt32_m, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmuluVX16VUInt32_m, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WmuluVV32VUInt64_m, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmuluVX32VUInt64_m, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(WmulsuVV8VInt16_m, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(WmulsuVX8VInt16_m, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarUInt8)
CUSTOM_OP_TYPE(WmulsuVV16VInt32_m, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(WmulsuVX16VInt32_m, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarUInt16)
CUSTOM_OP_TYPE(WmulsuVV32VInt64_m, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(WmulsuVX32VInt64_m, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarUInt32)

CUSTOM_OP_TYPE(MvV8VInt8, mv_v_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(MvX8VInt8, mv_v_x, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 1, ScalarInt8)
CUSTOM_OP_TYPE(MvV16VInt16, mv_v_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(MvX16VInt16, mv_v_x, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, ScalarInt16)
CUSTOM_OP_TYPE(MvV32VInt32, mv_v_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(MvX32VInt32, mv_v_x, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, ScalarInt32)
CUSTOM_OP_TYPE(MvV64VInt64, mv_v_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(MvX64VInt64, mv_v_x, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, ScalarInt64)
CUSTOM_OP_TYPE(MvV8VUInt8, mv_v_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(MvX8VUInt8, mv_v_x, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 1, ScalarUInt8)
CUSTOM_OP_TYPE(MvV16VUInt16, mv_v_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(MvX16VUInt16, mv_v_x, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, ScalarUInt16)
CUSTOM_OP_TYPE(MvV32VUInt32, mv_v_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(MvX32VUInt32, mv_v_x, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, ScalarUInt32)
CUSTOM_OP_TYPE(MvV64VUInt64, mv_v_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(MvX64VUInt64, mv_v_x, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, ScalarUInt64)
// FIXME: Seems like this is for tail policy???
// CUSTOM_OP_TYPE(MvV8VInt8, mv_v_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
// CUSTOM_OP_TYPE(MvX8VInt8, mv_v_x, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
// CUSTOM_OP_TYPE(MvV16VInt16, mv_v_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
// CUSTOM_OP_TYPE(MvX16VInt16, mv_v_x, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
// CUSTOM_OP_TYPE(MvV32VInt32, mv_v_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
// CUSTOM_OP_TYPE(MvX32VInt32, mv_v_x, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
// CUSTOM_OP_TYPE(MvV64VInt64, mv_v_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
// CUSTOM_OP_TYPE(MvX64VInt64, mv_v_x, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
// CUSTOM_OP_TYPE(MvV8VUInt8, mv_v_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// CUSTOM_OP_TYPE(MvX8VUInt8, mv_v_x, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// CUSTOM_OP_TYPE(MvV16VUInt16, mv_v_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// CUSTOM_OP_TYPE(MvX16VUInt16, mv_v_x, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// CUSTOM_OP_TYPE(MvV32VUInt32, mv_v_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// CUSTOM_OP_TYPE(MvX32VUInt32, mv_v_x, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// CUSTOM_OP_TYPE(MvV64VUInt64, mv_v_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// CUSTOM_OP_TYPE(MvX64VUInt64, mv_v_x, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(AdcVVM8VInt8VIVIVB, adc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDBool)
CUSTOM_OP_TYPE(AdcVXM8VInt8VISIVB, adc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDBool)
CUSTOM_OP_TYPE(AdcVVM16VInt16VIVIVB, adc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDBool)
CUSTOM_OP_TYPE(AdcVXM16VInt16VISIVB, adc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDBool)
CUSTOM_OP_TYPE(AdcVVM32VInt32VIVIVB, adc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDBool)
CUSTOM_OP_TYPE(AdcVXM32VInt32VISIVB, adc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDBool)
CUSTOM_OP_TYPE(AdcVVM64VInt64VIVIVB, adc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDBool)
CUSTOM_OP_TYPE(AdcVXM64VInt64VISIVB, adc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDBool)
CUSTOM_OP_TYPE(AdcVVM8VUInt8VUVUVB, adc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDBool)
CUSTOM_OP_TYPE(AdcVXM8VUInt8VUSUVB, adc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDBool)
CUSTOM_OP_TYPE(AdcVVM16VUInt16VUVUVB, adc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDBool)
CUSTOM_OP_TYPE(AdcVXM16VUInt16VUSUVB, adc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDBool)
CUSTOM_OP_TYPE(AdcVVM32VUInt32VUVUVB, adc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDBool)
CUSTOM_OP_TYPE(AdcVXM32VUInt32VUSUVB, adc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDBool)
CUSTOM_OP_TYPE(AdcVVM64VUInt64VUVUVB, adc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDBool)
CUSTOM_OP_TYPE(AdcVXM64VUInt64VUSUVB, adc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDBool)
CUSTOM_OP_TYPE(SbcVVM8VInt8VIVIVB, sbc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 3, OneDInt8, OneDInt8, OneDBool)
CUSTOM_OP_TYPE(SbcVXM8VInt8VISIVB, sbc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 3, OneDInt8, ScalarInt8, OneDBool)
CUSTOM_OP_TYPE(SbcVVM16VInt16VIVIVB, sbc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 3, OneDInt16, OneDInt16, OneDBool)
CUSTOM_OP_TYPE(SbcVXM16VInt16VISIVB, sbc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 3, OneDInt16, ScalarInt16, OneDBool)
CUSTOM_OP_TYPE(SbcVVM32VInt32VIVIVB, sbc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 3, OneDInt32, OneDInt32, OneDBool)
CUSTOM_OP_TYPE(SbcVXM32VInt32VISIVB, sbc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 3, OneDInt32, ScalarInt32, OneDBool)
CUSTOM_OP_TYPE(SbcVVM64VInt64VIVIVB, sbc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 3, OneDInt64, OneDInt64, OneDBool)
CUSTOM_OP_TYPE(SbcVXM64VInt64VISIVB, sbc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 3, OneDInt64, ScalarInt64, OneDBool)
CUSTOM_OP_TYPE(SbcVVM8VUInt8VUVUVB, sbc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDBool)
CUSTOM_OP_TYPE(SbcVXM8VUInt8VUSUVB, sbc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDBool)
CUSTOM_OP_TYPE(SbcVVM16VUInt16VUVUVB, sbc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDBool)
CUSTOM_OP_TYPE(SbcVXM16VUInt16VUSUVB, sbc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDBool)
CUSTOM_OP_TYPE(SbcVVM32VUInt32VUVUVB, sbc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDBool)
CUSTOM_OP_TYPE(SbcVXM32VUInt32VUSUVB, sbc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDBool)
CUSTOM_OP_TYPE(SbcVVM64VUInt64VUVUVB, sbc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDBool)
CUSTOM_OP_TYPE(SbcVXM64VUInt64VUSUVB, sbc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDBool)
CUSTOM_OP_TYPE(MadcVVM8VBoolVIVIVB, madc_vvm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt8, OneDInt8, OneDBool)
CUSTOM_OP_TYPE(MadcVXM8VBoolVISIVB, madc_vxm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt8, ScalarInt8, OneDBool)
CUSTOM_OP_TYPE(MadcVV8VBoolVIVI, madc_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MadcVX8VBoolVISI, madc_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MadcVVM16VBoolVIVIVB, madc_vvm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt16, OneDInt16, OneDBool)
CUSTOM_OP_TYPE(MadcVXM16VBoolVISIVB, madc_vxm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt16, ScalarInt16, OneDBool)
CUSTOM_OP_TYPE(MadcVV16VBoolVIVI, madc_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MadcVX16VBoolVISI, madc_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MadcVVM32VBoolVIVIVB, madc_vvm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt32, OneDInt32, OneDBool)
CUSTOM_OP_TYPE(MadcVXM32VBoolVISIVB, madc_vxm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt32, ScalarInt32, OneDBool)
CUSTOM_OP_TYPE(MadcVV32VBoolVIVI, madc_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MadcVX32VBoolVISI, madc_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MadcVVM64VBoolVIVIVB, madc_vvm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt64, OneDInt64, OneDBool)
CUSTOM_OP_TYPE(MadcVXM64VBoolVISIVB, madc_vxm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt64, ScalarInt64, OneDBool)
CUSTOM_OP_TYPE(MadcVV64VBoolVIVI, madc_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MadcVX64VBoolVISI, madc_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MadcVVM8VBoolVUVUVB, madc_vvm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt8, OneDUInt8, OneDBool)
CUSTOM_OP_TYPE(MadcVXM8VBoolVUSUVB, madc_vxm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt8, ScalarUInt8, OneDBool)
CUSTOM_OP_TYPE(MadcVV8VBoolVUVU, madc_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MadcVX8VBoolVUSU, madc_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MadcVVM16VBoolVUVUVB, madc_vvm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt16, OneDUInt16, OneDBool)
CUSTOM_OP_TYPE(MadcVXM16VBoolVUSUVB, madc_vxm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt16, ScalarUInt16, OneDBool)
CUSTOM_OP_TYPE(MadcVV16VBoolVUVU, madc_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MadcVX16VBoolVUSU, madc_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MadcVVM32VBoolVUVUVB, madc_vvm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt32, OneDUInt32, OneDBool)
CUSTOM_OP_TYPE(MadcVXM32VBoolVUSUVB, madc_vxm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt32, ScalarUInt32, OneDBool)
CUSTOM_OP_TYPE(MadcVV32VBoolVUVU, madc_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MadcVX32VBoolVUSU, madc_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MadcVVM64VBoolVUVUVB, madc_vvm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt64, OneDUInt64, OneDBool)
CUSTOM_OP_TYPE(MadcVXM64VBoolVUSUVB, madc_vxm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt64, ScalarUInt64, OneDBool)
CUSTOM_OP_TYPE(MadcVV64VBoolVUVU, madc_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MadcVX64VBoolVUSU, madc_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(MsbcVVM8VBoolVIVIVB, msbc_vvm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt8, OneDInt8, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM8VBoolVISIVB, msbc_vxm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt8, ScalarInt8, OneDBool)
CUSTOM_OP_TYPE(MsbcVV8VBoolVIVI, msbc_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MsbcVX8VBoolVISI, msbc_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MsbcVVM16VBoolVIVIVB, msbc_vvm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt16, OneDInt16, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM16VBoolVISIVB, msbc_vxm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt16, ScalarInt16, OneDBool)
CUSTOM_OP_TYPE(MsbcVV16VBoolVIVI, msbc_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MsbcVX16VBoolVISI, msbc_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MsbcVVM32VBoolVIVIVB, msbc_vvm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt32, OneDInt32, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM32VBoolVISIVB, msbc_vxm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt32, ScalarInt32, OneDBool)
CUSTOM_OP_TYPE(MsbcVV32VBoolVIVI, msbc_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MsbcVX32VBoolVISI, msbc_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MsbcVVM64VBoolVIVIVB, msbc_vvm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt64, OneDInt64, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM64VBoolVISIVB, msbc_vxm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDInt64, ScalarInt64, OneDBool)
CUSTOM_OP_TYPE(MsbcVV64VBoolVIVI, msbc_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MsbcVX64VBoolVISI, msbc_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MsbcVVM8VBoolVUVUVB, msbc_vvm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt8, OneDUInt8, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM8VBoolVUSUVB, msbc_vxm, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt8, ScalarUInt8, OneDBool)
CUSTOM_OP_TYPE(MsbcVV8VBoolVUVU, msbc_vv, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MsbcVX8VBoolVUSU, msbc_vx, 8, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MsbcVVM16VBoolVUVUVB, msbc_vvm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt16, OneDUInt16, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM16VBoolVUSUVB, msbc_vxm, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt16, ScalarUInt16, OneDBool)
CUSTOM_OP_TYPE(MsbcVV16VBoolVUVU, msbc_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MsbcVX16VBoolVUSU, msbc_vx, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MsbcVVM32VBoolVUVUVB, msbc_vvm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt32, OneDUInt32, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM32VBoolVUSUVB, msbc_vxm, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt32, ScalarUInt32, OneDBool)
CUSTOM_OP_TYPE(MsbcVV32VBoolVUVU, msbc_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MsbcVX32VBoolVUSU, msbc_vx, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MsbcVVM64VBoolVUVUVB, msbc_vvm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt64, OneDUInt64, OneDBool)
CUSTOM_OP_TYPE(MsbcVXM64VBoolVUSUVB, msbc_vxm, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 3, OneDUInt64, ScalarUInt64, OneDBool)
CUSTOM_OP_TYPE(MsbcVV64VBoolVUVU, msbc_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MsbcVX64VBoolVUSU, msbc_vx, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(NegV8VInt8VI, neg_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(NegV16VInt16VI, neg_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(NegV32VInt32VI, neg_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(NegV64VInt64VI, neg_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(NegV8VInt8VBVIVI_m, neg_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NegV16VInt16VBVIVI_m, neg_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NegV32VInt32VBVIVI_m, neg_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NegV64VInt64VBVIVI_m, neg_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)

CUSTOM_OP_TYPE(NotV8VInt8VI, not_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(NotV16VInt16VI, not_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(NotV32VInt32VI, not_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(NotV64VInt64VI, not_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(NotV8VUInt8VU, not_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(NotV16VUInt16VU, not_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(NotV32VUInt32VU, not_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(NotV64VUInt64VU, not_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(NotV8VInt8VBVIVI_m, not_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(NotV16VInt16VBVIVI_m, not_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(NotV32VInt32VBVIVI_m, not_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(NotV64VInt64VBVIVI_m, not_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(NotV8VUInt8VBVUVU_m, not_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(NotV16VUInt16VBVUVU_m, not_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(NotV32VUInt32VBVUVU_m, not_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(NotV64VUInt64VBVUVU_m, not_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)

CUSTOM_OP_TYPE(MergeVVM8VInt8VBVIVI, merge_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(MergeVXM8VInt8VBVISI, merge_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(MergeVVM16VInt16VBVIVI, merge_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(MergeVXM16VInt16VBVISI, merge_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(MergeVVM32VInt32VBVIVI, merge_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(MergeVXM32VInt32VBVISI, merge_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(MergeVVM64VInt64VBVIVI, merge_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(MergeVXM64VInt64VBVISI, merge_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(MergeVVM8VUInt8VBVUVU, merge_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(MergeVXM8VUInt8VBVUSU, merge_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(MergeVVM16VUInt16VBVUVU, merge_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(MergeVXM16VUInt16VBVUSU, merge_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(MergeVVM32VUInt32VBVUVU, merge_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(MergeVXM32VUInt32VBVUSU, merge_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(MergeVVM64VUInt64VBVUVU, merge_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(MergeVXM64VUInt64VBVUSU, merge_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(Vzext_vf2V16VUInt16VU, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt16, 1, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf4V32VUInt32VU, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt32, 1, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf8V64VUInt64VU, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt64, 1, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf2V32VUInt32VU, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt32, 1, OneDUInt16)
CUSTOM_OP_TYPE(Vzext_vf4V64VUInt64VU, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt64, 1, OneDUInt16)
CUSTOM_OP_TYPE(Vzext_vf2V64VUInt64VU, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDUInt64, 1, OneDUInt32)
CUSTOM_OP_TYPE(Vsext_vf2V16VInt16VI, sext_vf2, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt16, 1, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf4V32VInt32VI, sext_vf4, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt32, 1, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf8V64VInt64VI, sext_vf8, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt64, 1, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf2V32VInt32VI, sext_vf2, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt32, 1, OneDInt16)
CUSTOM_OP_TYPE(Vsext_vf4V64VInt64VI, sext_vf4, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt64, 1, OneDInt16)
CUSTOM_OP_TYPE(Vsext_vf2V64VInt64VI, sext_vf2, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation, OneDInt64, 1, OneDInt32)
CUSTOM_OP_TYPE(Vzext_vf2V16VUInt16VBVUVU_m, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf4V32VUInt32VBVUVU_m, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf8V64VUInt64VBVUVU_m, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vzext_vf2V32VUInt32VBVUVU_m, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vzext_vf4V64VUInt64VBVUVU_m, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vzext_vf2V64VUInt64VBVUVU_m, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsext_vf2V16VInt16VBVIVI_m, sext_vf2, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf4V32VInt32VBVIVI_m, sext_vf4, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf8V64VInt64VBVIVI_m, sext_vf8, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt8)
CUSTOM_OP_TYPE(Vsext_vf2V32VInt32VBVIVI_m, sext_vf2, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(Vsext_vf4V64VInt64VBVIVI_m, sext_vf4, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt16)
CUSTOM_OP_TYPE(Vsext_vf2V64VInt64VBVIVI_m, sext_vf2, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)

CUSTOM_OP_TYPE(WcvtV8VInt16VI, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt16, 1, OneDInt8)
CUSTOM_OP_TYPE(WcvtuV8VUInt16VU, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt16, 1, OneDUInt8)
CUSTOM_OP_TYPE(WcvtV16VInt32VI, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 1, OneDInt16)
CUSTOM_OP_TYPE(WcvtuV16VUInt32VU, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 1, OneDUInt16)
CUSTOM_OP_TYPE(WcvtV32VInt64VI, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 1, OneDInt32)
CUSTOM_OP_TYPE(WcvtuV32VUInt64VU, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 1, OneDUInt32)
CUSTOM_OP_TYPE(WcvtV8VInt16VBVIVI_m, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
CUSTOM_OP_TYPE(WcvtuV8VUInt16VBVUVU_m, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(WcvtV16VInt32VBVIVI_m, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
CUSTOM_OP_TYPE(WcvtuV16VUInt32VBVUVU_m, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(WcvtV32VInt64VBVIVI_m, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
CUSTOM_OP_TYPE(WcvtuV32VUInt64VBVUVU_m, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(NcvtV16VInt8VI, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 1, OneDInt16)
CUSTOM_OP_TYPE(NcvtV16VUInt8VU, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 1, OneDUInt16)
CUSTOM_OP_TYPE(NcvtV32VInt16VI, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 1, OneDInt32)
CUSTOM_OP_TYPE(NcvtV32VUInt16VU, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 1, OneDUInt32)
CUSTOM_OP_TYPE(NcvtV64VInt32VI, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 1, OneDInt64)
CUSTOM_OP_TYPE(NcvtV64VUInt32VU, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 1, OneDUInt64)
CUSTOM_OP_TYPE(NcvtV16VInt8VBVIVI_m, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt16)
CUSTOM_OP_TYPE(NcvtV16VUInt8VBVUVU_m, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(NcvtV32VInt16VBVIVI_m, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt32)
CUSTOM_OP_TYPE(NcvtV32VUInt16VBVUVU_m, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(NcvtV64VInt32VBVIVI_m, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt64)
CUSTOM_OP_TYPE(NcvtV64VUInt32VBVUVU_m, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)

CUSTOM_OP_TYPE(SaddVV8VInt8VIVI, sadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SaddVX8VInt8VISI, sadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SaddVV16VInt16VIVI, sadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SaddVX16VInt16VISI, sadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SaddVV32VInt32VIVI, sadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SaddVX32VInt32VISI, sadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SaddVV64VInt64VIVI, sadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SaddVX64VInt64VISI, sadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SadduVV8VUInt8VUVU, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SadduVX8VUInt8VUSU, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SadduVV16VUInt16VUVU, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SadduVX16VUInt16VUSU, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SadduVV32VUInt32VUVU, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SadduVX32VUInt32VUSU, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SadduVV64VUInt64VUVU, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SadduVX64VUInt64VUSU, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SsubVV8VInt8VIVI, ssub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SsubVX8VInt8VISI, ssub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SsubVV16VInt16VIVI, ssub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SsubVX16VInt16VISI, ssub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SsubVV32VInt32VIVI, ssub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SsubVX32VInt32VISI, ssub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SsubVV64VInt64VIVI, ssub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SsubVX64VInt64VISI, ssub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SsubuVV8VUInt8VUVU, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsubuVX8VUInt8VUSU, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SsubuVV16VUInt16VUVU, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsubuVX16VUInt16VUSU, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SsubuVV32VUInt32VUVU, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsubuVX32VUInt32VUSU, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsubuVV64VUInt64VUVU, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsubuVX64VUInt64VUSU, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SaddVV8VInt8VBVIVIVI_m, sadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SaddVX8VInt8VBVIVISI_m, sadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SaddVV16VInt16VBVIVIVI_m, sadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SaddVX16VInt16VBVIVISI_m, sadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SaddVV32VInt32VBVIVIVI_m, sadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SaddVX32VInt32VBVIVISI_m, sadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SaddVV64VInt64VBVIVIVI_m, sadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SaddVX64VInt64VBVIVISI_m, sadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SadduVV8VUInt8VBVUVUVU_m, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SadduVX8VUInt8VBVUVUSU_m, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SadduVV16VUInt16VBVUVUVU_m, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SadduVX16VUInt16VBVUVUSU_m, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SadduVV32VUInt32VBVUVUVU_m, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SadduVX32VUInt32VBVUVUSU_m, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SadduVV64VUInt64VBVUVUVU_m, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SadduVX64VUInt64VBVUVUSU_m, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(SsubVV8VInt8VBVIVIVI_m, ssub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SsubVX8VInt8VBVIVISI_m, ssub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SsubVV16VInt16VBVIVIVI_m, ssub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SsubVX16VInt16VBVIVISI_m, ssub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SsubVV32VInt32VBVIVIVI_m, ssub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SsubVX32VInt32VBVIVISI_m, ssub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SsubVV64VInt64VBVIVIVI_m, ssub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SsubVX64VInt64VBVIVISI_m, ssub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SsubuVV8VUInt8VBVUVUVU_m, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsubuVX8VUInt8VBVUVUSU_m, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(SsubuVV16VUInt16VBVUVUVU_m, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsubuVX16VUInt16VBVUVUSU_m, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(SsubuVV32VUInt32VBVUVUVU_m, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsubuVX32VUInt32VBVUVUSU_m, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsubuVV64VUInt64VBVUVUVU_m, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsubuVX64VUInt64VBVUVUSU_m, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(SmulVV8VInt8VIVI, smul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SmulVX8VInt8VISI, smul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SmulVV16VInt16VIVI, smul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SmulVX16VInt16VISI, smul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SmulVV32VInt32VIVI, smul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SmulVX32VInt32VISI, smul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SmulVV64VInt64VIVI, smul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SmulVX64VInt64VISI, smul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(SmulVV8VInt8VBVIVIVI_m, smul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(SmulVX8VInt8VBVIVISI_m, smul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(SmulVV16VInt16VBVIVIVI_m, smul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(SmulVX16VInt16VBVIVISI_m, smul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(SmulVV32VInt32VBVIVIVI_m, smul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(SmulVX32VInt32VBVIVISI_m, smul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(SmulVV64VInt64VBVIVIVI_m, smul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(SmulVX64VInt64VBVIVISI_m, smul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)

CUSTOM_OP_TYPE(SsrlVV8VUInt8VUVU, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsrlVX8VUInt8VUSU, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV16VUInt16VUVU, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsrlVX16VUInt16VUSU, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV32VUInt32VUVU, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsrlVX32VUInt32VUSU, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV64VUInt64VUVU, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsrlVX64VUInt64VUSU, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV8VInt8VIVU, ssra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsraVX8VInt8VISU, ssra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV16VInt16VIVU, ssra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsraVX16VInt16VISU, ssra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV32VInt32VIVU, ssra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsraVX32VInt32VISU, ssra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV64VInt64VIVU, ssra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsraVX64VInt64VISU, ssra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV8VUInt8VBVUVUVU_m, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsrlVX8VUInt8VBVUVUSU_m, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV16VUInt16VBVUVUVU_m, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsrlVX16VUInt16VBVUVUSU_m, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV32VUInt32VBVUVUVU_m, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsrlVX32VUInt32VBVUVUSU_m, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsrlVV64VUInt64VBVUVUVU_m, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsrlVX64VUInt64VBVUVUSU_m, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV8VInt8VBVIVIVU_m, ssra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(SsraVX8VInt8VBVIVISU_m, ssra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV16VInt16VBVIVIVU_m, ssra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(SsraVX16VInt16VBVIVISU_m, ssra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV32VInt32VBVIVIVU_m, ssra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(SsraVX32VInt32VBVIVISU_m, ssra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(SsraVV64VInt64VBVIVIVU_m, ssra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(SsraVX64VInt64VBVIVISU_m, ssra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt32)

CUSTOM_OP_TYPE(AaddVV8VInt8VIVI, aadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AaddVX8VInt8VISI, aadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AaddVV16VInt16VIVI, aadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AaddVX16VInt16VISI, aadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AaddVV32VInt32VIVI, aadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AaddVX32VInt32VISI, aadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AaddVV64VInt64VIVI, aadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AaddVX64VInt64VISI, aadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AadduVV8VUInt8VUVU, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AadduVX8VUInt8VUSU, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AadduVV16VUInt16VUVU, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AadduVX16VUInt16VUSU, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AadduVV32VUInt32VUVU, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AadduVX32VUInt32VUSU, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AadduVV64VUInt64VUVU, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AadduVX64VUInt64VUSU, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AsubVV8VInt8VIVI, asub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AsubVX8VInt8VISI, asub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AsubVV16VInt16VIVI, asub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AsubVX16VInt16VISI, asub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AsubVV32VInt32VIVI, asub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AsubVX32VInt32VISI, asub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AsubVV64VInt64VIVI, asub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AsubVX64VInt64VISI, asub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 2, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AsubuVV8VUInt8VUVU, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AsubuVX8VUInt8VUSU, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AsubuVV16VUInt16VUVU, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AsubuVX16VUInt16VUSU, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AsubuVV32VUInt32VUVU, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AsubuVX32VUInt32VUSU, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AsubuVV64VUInt64VUVU, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AsubuVX64VUInt64VUSU, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AaddVV8VInt8VBVIVIVI_m, aadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AaddVX8VInt8VBVIVISI_m, aadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AaddVV16VInt16VBVIVIVI_m, aadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AaddVX16VInt16VBVIVISI_m, aadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AaddVV32VInt32VBVIVIVI_m, aadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AaddVX32VInt32VBVIVISI_m, aadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AaddVV64VInt64VBVIVIVI_m, aadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AaddVX64VInt64VBVIVISI_m, aadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AadduVV8VUInt8VBVUVUVU_m, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AadduVX8VUInt8VBVUVUSU_m, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AadduVV16VUInt16VBVUVUVU_m, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AadduVX16VUInt16VBVUVUSU_m, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AadduVV32VUInt32VBVUVUVU_m, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AadduVX32VUInt32VBVUVUSU_m, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AadduVV64VUInt64VBVUVUVU_m, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AadduVX64VUInt64VBVUVUSU_m, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
CUSTOM_OP_TYPE(AsubVV8VInt8VBVIVIVI_m, asub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AsubVX8VInt8VBVIVISI_m, asub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AsubVV16VInt16VBVIVIVI_m, asub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AsubVX16VInt16VBVIVISI_m, asub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AsubVV32VInt32VBVIVIVI_m, asub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AsubVX32VInt32VBVIVISI_m, asub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AsubVV64VInt64VBVIVIVI_m, asub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AsubVX64VInt64VBVIVISI_m, asub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AsubuVV8VUInt8VBVUVUVU_m, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AsubuVX8VUInt8VBVUVUSU_m, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AsubuVV16VUInt16VBVUVUVU_m, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AsubuVX16VUInt16VBVUVUSU_m, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AsubuVV32VUInt32VBVUVUVU_m, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AsubuVX32VUInt32VBVUVUSU_m, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AsubuVV64VUInt64VBVUVUVU_m, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AsubuVX64VUInt64VBVUVUSU_m, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

CUSTOM_OP_TYPE(NclipWV8VInt8VIVU, nclip_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(NclipWX8VInt8VISU, nclip_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 2, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NclipWV16VInt16VIVU, nclip_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(NclipWX16VInt16VISU, nclip_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 2, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NclipWV32VInt32VIVU, nclip_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(NclipWX32VInt32VISU, nclip_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 2, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV8VUInt8VUVU, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(NclipuWX8VUInt8VUSU, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 2, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV16VUInt16VUVU, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(NclipuWX16VUInt16VUSU, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV32VUInt32VUVU, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(NclipuWX32VUInt32VUSU, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 2, OneDUInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NclipWV8VInt8VBVIVIVU_m, nclip_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(NclipWX8VInt8VBVIVISU_m, nclip_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NclipWV16VInt16VBVIVIVU_m, nclip_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(NclipWX16VInt16VBVIVISU_m, nclip_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NclipWV32VInt32VBVIVIVU_m, nclip_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(NclipWX32VInt32VBVIVISU_m, nclip_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV8VUInt8VBVUVUVU_m, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(NclipuWX8VUInt8VBVUVUSU_m, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV16VUInt16VBVUVUVU_m, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(NclipuWX16VUInt16VBVUVUSU_m, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(NclipuWV32VUInt32VBVUVUVU_m, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(NclipuWX32VUInt32VBVUVUSU_m, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUInt32)

CUSTOM_OP_TYPE(FaddVV16VFloat16VFVF, fadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FaddVF16VFloat16VFSF, fadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FaddVV32VFloat32VFVF, fadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FaddVF32VFloat32VFSF, fadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FaddVV64VFloat64VFVF, fadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FaddVF64VFloat64VFSF, fadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsubVV16VFloat16VFVF, fsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsubVF16VFloat16VFSF, fsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsubVV32VFloat32VFVF, fsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsubVF32VFloat32VFSF, fsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsubVV64VFloat64VFVF, fsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsubVF64VFloat64VFSF, fsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FrsubVF16VFloat16VFSF, frsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FrsubVF32VFloat32VFSF, frsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FrsubVF64VFloat64VFSF, frsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FaddVV16VFloat16VBVFVFVF_m, fadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FaddVF16VFloat16VBVFVFSF_m, fadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FaddVV32VFloat32VBVFVFVF_m, fadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FaddVF32VFloat32VBVFVFSF_m, fadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FaddVV64VFloat64VBVFVFVF_m, fadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FaddVF64VFloat64VBVFVFSF_m, fadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsubVV16VFloat16VBVFVFVF_m, fsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsubVF16VFloat16VBVFVFSF_m, fsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsubVV32VFloat32VBVFVFVF_m, fsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsubVF32VFloat32VBVFVFSF_m, fsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsubVV64VFloat64VBVFVFVF_m, fsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsubVF64VFloat64VBVFVFSF_m, fsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FrsubVF16VFloat16VBVFVFSF_m, frsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FrsubVF32VFloat32VBVFVFSF_m, frsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FrsubVF64VFloat64VBVFVFSF_m, frsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(FnegV16VFloat16VF, fneg_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FnegV32VFloat32VF, fneg_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FnegV64VFloat64VF, fneg_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FnegV16VFloat16VBVFVF_m, fneg_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnegV32VFloat32VBVFVF_m, fneg_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnegV64VFloat64VBVFVF_m, fneg_v, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

CUSTOM_OP_TYPE(FsgnjVV16VFloat16VFVF, fsgnj_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VFSF, fsgnj_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VFVF, fsgnj_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VFSF, fsgnj_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VFVF, fsgnj_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VFSF, fsgnj_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VFVF, fsgnjn_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VFSF, fsgnjn_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VFVF, fsgnjn_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VFSF, fsgnjn_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VFVF, fsgnjn_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VFSF, fsgnjn_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VFVF, fsgnjx_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VFSF, fsgnjx_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VFVF, fsgnjx_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VFSF, fsgnjx_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VFVF, fsgnjx_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VFSF, fsgnjx_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VBVFVFVF_m, fsgnj_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VBVFVFSF_m, fsgnj_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VBVFVFVF_m, fsgnj_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VBVFVFSF_m, fsgnj_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VBVFVFVF_m, fsgnj_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VBVFVFSF_m, fsgnj_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VBVFVFVF_m, fsgnjn_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VBVFVFSF_m, fsgnjn_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VBVFVFVF_m, fsgnjn_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VBVFVFSF_m, fsgnjn_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VBVFVFVF_m, fsgnjn_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VBVFVFSF_m, fsgnjn_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VBVFVFVF_m, fsgnjx_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VBVFVFSF_m, fsgnjx_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VBVFVFVF_m, fsgnjx_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VBVFVFSF_m, fsgnjx_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VBVFVFVF_m, fsgnjx_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VBVFVFSF_m, fsgnjx_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(FabsV16VFloat16VF, fabs_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FabsV32VFloat32VF, fabs_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FabsV64VFloat64VF, fabs_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FabsV16VFloat16VBVFVF_m, fabs_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FabsV32VFloat32VBVFVF_m, fabs_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FabsV64VFloat64VBVFVF_m, fabs_v, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

CUSTOM_OP_TYPE(FmulVV16VFloat16VFVF, fmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmulVF16VFloat16VFSF, fmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FmulVV32VFloat32VFVF, fmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmulVF32VFloat32VFSF, fmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FmulVV64VFloat64VFVF, fmul_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmulVF64VFloat64VFSF, fmul_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FdivVV16VFloat16VFVF, fdiv_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FdivVF16VFloat16VFSF, fdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FdivVV32VFloat32VFVF, fdiv_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FdivVF32VFloat32VFSF, fdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FdivVV64VFloat64VFVF, fdiv_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FdivVF64VFloat64VFSF, fdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FrdivVF16VFloat16VFSF, frdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FrdivVF32VFloat32VFSF, frdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FrdivVF64VFloat64VFSF, frdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FmulVV16VFloat16VBVFVFVF_m, fmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmulVF16VFloat16VBVFVFSF_m, fmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FmulVV32VFloat32VBVFVFVF_m, fmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmulVF32VFloat32VBVFVFSF_m, fmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FmulVV64VFloat64VBVFVFVF_m, fmul_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmulVF64VFloat64VBVFVFSF_m, fmul_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FdivVV16VFloat16VBVFVFVF_m, fdiv_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FdivVF16VFloat16VBVFVFSF_m, fdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FdivVV32VFloat32VBVFVFVF_m, fdiv_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FdivVF32VFloat32VBVFVFSF_m, fdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FdivVV64VFloat64VBVFVFVF_m, fdiv_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FdivVF64VFloat64VBVFVFSF_m, fdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(FwaddVV16VFloat32VFVF, fwadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwaddVF16VFloat32VFSF, fwadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwaddWV16VFloat32VFVF, fwadd_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat32, OneDFloat16)
CUSTOM_OP_TYPE(FwaddWX16VFloat32VFSF, fwadd_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat16)
CUSTOM_OP_TYPE(FwaddVV32VFloat64VFVF, fwadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwaddVF32VFloat64VFSF, fwadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FwaddWV32VFloat64VFVF, fwadd_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat64, OneDFloat32)
CUSTOM_OP_TYPE(FwaddWX32VFloat64VFSF, fwadd_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat32)
CUSTOM_OP_TYPE(FwsubVV16VFloat32VFVF, fwsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwsubVF16VFloat32VFSF, fwsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwsubWV16VFloat32VFVF, fwsub_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat32, OneDFloat16)
CUSTOM_OP_TYPE(FwsubWX16VFloat32VFSF, fwsub_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat16)
CUSTOM_OP_TYPE(FwsubVV32VFloat64VFVF, fwsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwsubVF32VFloat64VFSF, fwsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FwsubWV32VFloat64VFVF, fwsub_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat64, OneDFloat32)
CUSTOM_OP_TYPE(FwsubWX32VFloat64VFSF, fwsub_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat32)
CUSTOM_OP_TYPE(FwaddVV16VFloat32VBVFVFVF_m, fwadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwaddVF16VFloat32VBVFVFSF_m, fwadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwaddWV16VFloat32VBVFVFVF_m, fwadd_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
CUSTOM_OP_TYPE(FwaddWX16VFloat32VBVFVFSF_m, fwadd_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
CUSTOM_OP_TYPE(FwaddVV32VFloat64VBVFVFVF_m, fwadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwaddVF32VFloat64VBVFVFSF_m, fwadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FwaddWV32VFloat64VBVFVFVF_m, fwadd_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
CUSTOM_OP_TYPE(FwaddWX32VFloat64VBVFVFSF_m, fwadd_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
CUSTOM_OP_TYPE(FwsubVV16VFloat32VBVFVFVF_m, fwsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwsubVF16VFloat32VBVFVFSF_m, fwsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwsubWV16VFloat32VBVFVFVF_m, fwsub_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
CUSTOM_OP_TYPE(FwsubWX16VFloat32VBVFVFSF_m, fwsub_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
CUSTOM_OP_TYPE(FwsubVV32VFloat64VBVFVFVF_m, fwsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwsubVF32VFloat64VBVFVFSF_m, fwsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FwsubWV32VFloat64VBVFVFVF_m, fwsub_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
CUSTOM_OP_TYPE(FwsubWX32VFloat64VBVFVFSF_m, fwsub_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)

CUSTOM_OP_TYPE(FwmulVV16VFloat32VFVF, fwmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmulVF16VFloat32VFSF, fwmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwmulVV32VFloat64VFVF, fwmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmulVF32VFloat64VFSF, fwmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FwmulVV16VFloat32VBVFVFVF_m, fwmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmulVF16VFloat32VBVFVFSF_m, fwmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FwmulVV32VFloat64VBVFVFVF_m, fwmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmulVF32VFloat64VBVFVFSF_m, fwmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)

CUSTOM_OP_TYPE(FsqrtV16VFloat16VF, fsqrt_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FsqrtV32VFloat32VF, fsqrt_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FsqrtV64VFloat64VF, fsqrt_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FsqrtV16VFloat16VBVFVF_m, fsqrt_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FsqrtV32VFloat32VBVFVF_m, fsqrt_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FsqrtV64VFloat64VBVFVF_m, fsqrt_v, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VF, frsqrt7_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VF, frsqrt7_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VF, frsqrt7_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VBVFVF_m, frsqrt7_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VBVFVF_m, frsqrt7_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VBVFVF_m, frsqrt7_v, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

CUSTOM_OP_TYPE(FmaccVV16VFloat16VFVFVF, fmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaccVF16VFloat16VFSFVF, fmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaccVV32VFloat32VFVFVF, fmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaccVF32VFloat32VFSFVF, fmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaccVV64VFloat64VFVFVF, fmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaccVF64VFloat64VFSFVF, fmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VFVFVF, fnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VFSFVF, fnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VFVFVF, fnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VFSFVF, fnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VFVFVF, fnmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VFSFVF, fnmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsacVV16VFloat16VFVFVF, fmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsacVF16VFloat16VFSFVF, fmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsacVV32VFloat32VFVFVF, fmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsacVF32VFloat32VFSFVF, fmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsacVV64VFloat64VFVFVF, fmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsacVF64VFloat64VFSFVF, fmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VFVFVF, fnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VFSFVF, fnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VFVFVF, fnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VFSFVF, fnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VFVFVF, fnmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VFSFVF, fnmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaddVV16VFloat16VFVFVF, fmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaddVF16VFloat16VFSFVF, fmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaddVV32VFloat32VFVFVF, fmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaddVF32VFloat32VFSFVF, fmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaddVV64VFloat64VFVFVF, fmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaddVF64VFloat64VFSFVF, fmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VFVFVF, fnmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VFSFVF, fnmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VFVFVF, fnmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VFSFVF, fnmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VFVFVF, fnmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VFSFVF, fnmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsubVV16VFloat16VFVFVF, fmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsubVF16VFloat16VFSFVF, fmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsubVV32VFloat32VFVFVF, fmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsubVF32VFloat32VFSFVF, fmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsubVV64VFloat64VFVFVF, fmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsubVF64VFloat64VFSFVF, fmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VFVFVF, fnmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VFSFVF, fnmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VFVFVF, fnmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VFSFVF, fnmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VFVFVF, fnmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VFSFVF, fnmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaccVV16VFloat16VBVFVFVF_m, fmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaccVF16VFloat16VBVFSFVF_m, fmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaccVV32VFloat32VBVFVFVF_m, fmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaccVF32VFloat32VBVFSFVF_m, fmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaccVV64VFloat64VBVFVFVF_m, fmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaccVF64VFloat64VBVFSFVF_m, fmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VBVFVFVF_m, fnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VBVFSFVF_m, fnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VBVFVFVF_m, fnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VBVFSFVF_m, fnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VBVFVFVF_m, fnmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VBVFSFVF_m, fnmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsacVV16VFloat16VBVFVFVF_m, fmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsacVF16VFloat16VBVFSFVF_m, fmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsacVV32VFloat32VBVFVFVF_m, fmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsacVF32VFloat32VBVFSFVF_m, fmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsacVV64VFloat64VBVFVFVF_m, fmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsacVF64VFloat64VBVFSFVF_m, fmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VBVFVFVF_m, fnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VBVFSFVF_m, fnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VBVFVFVF_m, fnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VBVFSFVF_m, fnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VBVFVFVF_m, fnmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VBVFSFVF_m, fnmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaddVV16VFloat16VBVFVFVF_m, fmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaddVF16VFloat16VBVFSFVF_m, fmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaddVV32VFloat32VBVFVFVF_m, fmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaddVF32VFloat32VBVFSFVF_m, fmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaddVV64VFloat64VBVFVFVF_m, fmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaddVF64VFloat64VBVFSFVF_m, fmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VBVFVFVF_m, fnmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VBVFSFVF_m, fnmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VBVFVFVF_m, fnmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VBVFSFVF_m, fnmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VBVFVFVF_m, fnmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VBVFSFVF_m, fnmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsubVV16VFloat16VBVFVFVF_m, fmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsubVF16VFloat16VBVFSFVF_m, fmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmsubVV32VFloat32VBVFVFVF_m, fmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsubVF32VFloat32VBVFSFVF_m, fmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmsubVV64VFloat64VBVFVFVF_m, fmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmsubVF64VFloat64VBVFSFVF_m, fmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VBVFVFVF_m, fnmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VBVFSFVF_m, fnmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VBVFVFVF_m, fnmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VBVFSFVF_m, fnmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VBVFVFVF_m, fnmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VBVFSFVF_m, fnmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)

CUSTOM_OP_TYPE(FwmaccVV16VFloat32VFVFVF, fwmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VFSFVF, fwmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VFVFVF, fwmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VFSFVF, fwmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VFVFVF, fwnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VFSFVF, fwnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VFVFVF, fwnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VFSFVF, fwnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VFVFVF, fwmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VFSFVF, fwmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VFVFVF, fwmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VFSFVF, fwmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VFVFVF, fwnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VFSFVF, fwnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VFVFVF, fwnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VFSFVF, fwnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VBVFVFVF_m, fwmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VBVFSFVF_m, fwmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VBVFVFVF_m, fwmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VBVFSFVF_m, fwmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VBVFVFVF_m, fwnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VBVFSFVF_m, fwnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VBVFVFVF_m, fwnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VBVFSFVF_m, fwnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VBVFVFVF_m, fwmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VBVFSFVF_m, fwmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VBVFVFVF_m, fwmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VBVFSFVF_m, fwmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VBVFVFVF_m, fwnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VBVFSFVF_m, fwnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VBVFVFVF_m, fwnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VBVFSFVF_m, fwnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | WideningOperation, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)

CUSTOM_OP_TYPE(FminVV16VFloat16VFVF, fmin_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FminVF16VFloat16VFSF, fmin_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FminVV32VFloat32VFVF, fmin_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FminVF32VFloat32VFSF, fmin_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FminVV64VFloat64VFVF, fmin_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FminVF64VFloat64VFSF, fmin_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FmaxVV16VFloat16VFVF, fmax_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaxVF16VFloat16VFSF, fmax_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FmaxVV32VFloat32VFVF, fmax_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaxVF32VFloat32VFSF, fmax_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FmaxVV64VFloat64VFVF, fmax_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaxVF64VFloat64VFSF, fmax_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FminVV16VFloat16VBVFVFVF_m, fmin_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FminVF16VFloat16VBVFVFSF_m, fmin_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FminVV32VFloat32VBVFVFVF_m, fmin_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FminVF32VFloat32VBVFVFSF_m, fmin_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FminVV64VFloat64VBVFVFVF_m, fmin_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FminVF64VFloat64VBVFVFSF_m, fmin_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(FmaxVV16VFloat16VBVFVFVF_m, fmax_vv, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmaxVF16VFloat16VBVFVFSF_m, fmax_vf, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(FmaxVV32VFloat32VBVFVFVF_m, fmax_vv, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmaxVF32VFloat32VBVFVFSF_m, fmax_vf, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(FmaxVV64VFloat64VBVFVFVF_m, fmax_vv, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmaxVF64VFloat64VBVFVFSF_m, fmax_vf, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(MergeVVM16VFloat16VBVFVF, merge_vvm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(FmergeVFM16VFloat16VBVFSF, fmerge_vfm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MergeVVM32VFloat32VBVFVF, merge_vvm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(FmergeVFM32VFloat32VBVFSF, fmerge_vfm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MergeVVM64VFloat64VBVFVF, merge_vvm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(FmergeVFM64VFloat64VBVFSF, fmerge_vfm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(MfeqVV16VBoolVFVF, mfeq_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfeqVF16VBoolVFSF, mfeq_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfeqVV32VBoolVFVF, mfeq_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfeqVF32VBoolVFSF, mfeq_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfeqVV64VBoolVFVF, mfeq_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfeqVF64VBoolVFSF, mfeq_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfneVV16VBoolVFVF, mfne_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfneVF16VBoolVFSF, mfne_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfneVV32VBoolVFVF, mfne_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfneVF32VBoolVFSF, mfne_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfneVV64VBoolVFVF, mfne_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfneVF64VBoolVFSF, mfne_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfltVV16VBoolVFVF, mflt_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfltVF16VBoolVFSF, mflt_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfltVV32VBoolVFVF, mflt_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfltVF32VBoolVFSF, mflt_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfltVV64VBoolVFVF, mflt_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfltVF64VBoolVFSF, mflt_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfleVV16VBoolVFVF, mfle_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfleVF16VBoolVFSF, mfle_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfleVV32VBoolVFVF, mfle_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfleVF32VBoolVFSF, mfle_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfleVV64VBoolVFVF, mfle_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfleVF64VBoolVFSF, mfle_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfgtVV16VBoolVFVF, mfgt_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfgtVF16VBoolVFSF, mfgt_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfgtVV32VBoolVFVF, mfgt_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfgtVF32VBoolVFSF, mfgt_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfgtVV64VBoolVFVF, mfgt_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfgtVF64VBoolVFSF, mfgt_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfgeVV16VBoolVFVF, mfge_vv, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfgeVF16VBoolVFSF, mfge_vf, 16, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfgeVV32VBoolVFVF, mfge_vv, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfgeVF32VBoolVFSF, mfge_vf, 32, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfgeVV64VBoolVFVF, mfge_vv, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfgeVF64VBoolVFSF, mfge_vf, 64, BOOL, HaveVLParameter | NonmaskedOperation, OneDBool, 2, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfeqVV16VBoolVBVBVFVF_m, mfeq_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfeqVF16VBoolVBVBVFSF_m, mfeq_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfeqVV32VBoolVBVBVFVF_m, mfeq_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfeqVF32VBoolVBVBVFSF_m, mfeq_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfeqVV64VBoolVBVBVFVF_m, mfeq_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfeqVF64VBoolVBVBVFSF_m, mfeq_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfneVV16VBoolVBVBVFVF_m, mfne_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfneVF16VBoolVBVBVFSF_m, mfne_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfneVV32VBoolVBVBVFVF_m, mfne_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfneVF32VBoolVBVBVFSF_m, mfne_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfneVV64VBoolVBVBVFVF_m, mfne_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfneVF64VBoolVBVBVFSF_m, mfne_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfltVV16VBoolVBVBVFVF_m, mflt_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfltVF16VBoolVBVBVFSF_m, mflt_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfltVV32VBoolVBVBVFVF_m, mflt_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfltVF32VBoolVBVBVFSF_m, mflt_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfltVV64VBoolVBVBVFVF_m, mflt_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfltVF64VBoolVBVBVFSF_m, mflt_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfleVV16VBoolVBVBVFVF_m, mfle_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfleVF16VBoolVBVBVFSF_m, mfle_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfleVV32VBoolVBVBVFVF_m, mfle_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfleVF32VBoolVBVBVFSF_m, mfle_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfleVV64VBoolVBVBVFVF_m, mfle_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfleVF64VBoolVBVBVFSF_m, mfle_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfgtVV16VBoolVBVBVFVF_m, mfgt_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfgtVF16VBoolVBVBVFSF_m, mfgt_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfgtVV32VBoolVBVBVFVF_m, mfgt_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfgtVF32VBoolVBVBVFSF_m, mfgt_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfgtVV64VBoolVBVBVFVF_m, mfgt_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfgtVF64VBoolVBVBVFSF_m, mfgt_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
CUSTOM_OP_TYPE(MfgeVV16VBoolVBVBVFVF_m, mfge_vv, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(MfgeVF16VBoolVBVBVFSF_m, mfge_vf, 16, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
CUSTOM_OP_TYPE(MfgeVV32VBoolVBVBVFVF_m, mfge_vv, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(MfgeVF32VBoolVBVBVFSF_m, mfge_vf, 32, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
CUSTOM_OP_TYPE(MfgeVV64VBoolVBVBVFVF_m, mfge_vv, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
CUSTOM_OP_TYPE(MfgeVF64VBoolVBVBVFSF_m, mfge_vf, 64, BOOL, HaveVLParameter | MaskedOperation, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)

CUSTOM_OP_TYPE(FclassV16VUInt16VF, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FclassV32VUInt32VF, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FclassV64VUInt64VF, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FclassV16VUInt16VBVUVF_m, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
CUSTOM_OP_TYPE(FclassV32VUInt32VBVUVF_m, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
CUSTOM_OP_TYPE(FclassV64VUInt64VBVUVF_m, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)

CUSTOM_OP_TYPE(FcvtV16VInt16VF, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VF, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FcvtV16VUInt16VF, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VF, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FcvtV16VFloat16VI, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDInt16)
CUSTOM_OP_TYPE(FcvtV16VFloat16VU, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, OneDUInt16)
CUSTOM_OP_TYPE(FcvtV32VInt32VF, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VF, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FcvtV32VUInt32VF, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VF, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FcvtV32VFloat32VI, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDInt32)
CUSTOM_OP_TYPE(FcvtV32VFloat32VU, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, OneDUInt32)
CUSTOM_OP_TYPE(FcvtV64VInt64VF, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, OneDFloat64)
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VF, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDInt64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FcvtV64VUInt64VF, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDFloat64)
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VF, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FcvtV64VFloat64VI, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDInt64)
CUSTOM_OP_TYPE(FcvtV64VFloat64VU, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, OneDUInt64)
CUSTOM_OP_TYPE(FcvtV16VInt16VBVIVF_m, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VBVIVF_m, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
CUSTOM_OP_TYPE(FcvtV16VUInt16VBVUVF_m, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VBVUVF_m, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVI_m, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt16)
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVU_m, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(FcvtV32VInt32VBVIVF_m, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VBVIVF_m, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
CUSTOM_OP_TYPE(FcvtV32VUInt32VBVUVF_m, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VBVUVF_m, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVI_m, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt32)
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVU_m, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(FcvtV64VInt64VBVIVF_m, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VBVIVF_m, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
CUSTOM_OP_TYPE(FcvtV64VUInt64VBVUVF_m, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VBVUVF_m, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVI_m, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | MaskedOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt64)

CUSTOM_OP_TYPE(FwcvtV8VFloat16VI, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat16, 1, OneDInt8)
CUSTOM_OP_TYPE(FwcvtV8VFloat16VU, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat16, 1, OneDUInt8)
CUSTOM_OP_TYPE(FwcvtV16VInt32VF, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VF, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt32, 1, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV16VUInt32VF, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VF, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt32, 1, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VI, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 1, OneDInt16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VU, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 1, OneDUInt16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VF, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat32, 1, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV32VInt64VF, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VF, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDInt64, 1, OneDFloat32)
CUSTOM_OP_TYPE(FwcvtV32VUInt64VF, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VF, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDUInt64, 1, OneDFloat32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VI, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 1, OneDInt32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VU, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 1, OneDUInt32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VF, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation, OneDFloat64, 1, OneDFloat32)
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVI_m, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt8)
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVU_m, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(FwcvtV16VInt32VBVIVF_m, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VBVIVF_m, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV16VUInt32VBVUVF_m, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VBVUVF_m, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVI_m, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVU_m, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVF_m, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
CUSTOM_OP_TYPE(FwcvtV32VInt64VBVIVF_m, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VBVIVF_m, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
CUSTOM_OP_TYPE(FwcvtV32VUInt64VBVUVF_m, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VBVUVF_m, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVI_m, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVU_m, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVF_m, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)

CUSTOM_OP_TYPE(FncvtV16VInt8VF, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VF, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt8, 1, OneDFloat16)
CUSTOM_OP_TYPE(FncvtV16VUInt8VF, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 1, OneDFloat16)
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VF, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt8, 1, OneDFloat16)
CUSTOM_OP_TYPE(FncvtV32VInt16VF, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VF, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt16, 1, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV32VUInt16VF, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VF, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt16, 1, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VI, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat16, 1, OneDInt32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VU, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat16, 1, OneDUInt32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VF, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat16, 1, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VF, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat16, 1, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV64VInt32VF, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 1, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VF, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDInt32, 1, OneDFloat64)
CUSTOM_OP_TYPE(FncvtV64VUInt32VF, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 1, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VF, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDUInt32, 1, OneDFloat64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VI, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat32, 1, OneDInt64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VU, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat32, 1, OneDUInt64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VF, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat32, 1, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VF, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation, OneDFloat32, 1, OneDFloat64)
CUSTOM_OP_TYPE(FncvtV16VInt8VBVIVF_m, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VBVIVF_m, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
CUSTOM_OP_TYPE(FncvtV16VUInt8VBVUVF_m, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VBVUVF_m, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
CUSTOM_OP_TYPE(FncvtV32VInt16VBVIVF_m, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VBVIVF_m, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV32VUInt16VBVUVF_m, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VBVUVF_m, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVI_m, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVU_m, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVF_m, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VBVFVF_m, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
CUSTOM_OP_TYPE(FncvtV64VInt32VBVIVF_m, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VBVIVF_m, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
CUSTOM_OP_TYPE(FncvtV64VUInt32VBVUVF_m, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VBVUVF_m, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVI_m, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVU_m, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVF_m, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VBVFVF_m, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)

CUSTOM_OP_TYPE(FmvF16VFloat16SF, fmv_v_f, 16, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat16, 1, ScalarFloat16)
CUSTOM_OP_TYPE(FmvF32VFloat32SF, fmv_v_f, 32, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat32, 1, ScalarFloat32)
CUSTOM_OP_TYPE(FmvF64VFloat64SF, fmv_v_f, 64, FLOAT, HaveVLParameter | NonmaskedOperation, OneDFloat64, 1, ScalarFloat64)

CUSTOM_OP_TYPE(RedsumVS8SInt8VI, redsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedsumVS16SInt16VI, redsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedsumVS32SInt32VI, redsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedsumVS64SInt64VI, redsum_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedsumVS8SUInt8VU, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedsumVS16SUInt16VU, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedsumVS32SUInt32VU, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedsumVS64SUInt64VU, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedmaxVS8SInt8VI, redmax_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedmaxVS16SInt16VI, redmax_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedmaxVS32SInt32VI, redmax_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedmaxVS64SInt64VI, redmax_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VU, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VU, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VU, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VU, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedminVS8SInt8VI, redmin_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedminVS16SInt16VI, redmin_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedminVS32SInt32VI, redmin_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedminVS64SInt64VI, redmin_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedminuVS8SUInt8VU, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedminuVS16SUInt16VU, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedminuVS32SUInt32VU, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedminuVS64SUInt64VU, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedandVS8SInt8VI, redand_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedandVS16SInt16VI, redand_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedandVS32SInt32VI, redand_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedandVS64SInt64VI, redand_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedandVS8SUInt8VU, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedandVS16SUInt16VU, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedandVS32SUInt32VU, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedandVS64SUInt64VU, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedorVS8SInt8VI, redor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedorVS16SInt16VI, redor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedorVS32SInt32VI, redor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedorVS64SInt64VI, redor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedorVS8SUInt8VU, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedorVS16SUInt16VU, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedorVS32SUInt32VU, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedorVS64SUInt64VU, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedxorVS8SInt8VI, redxor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(RedxorVS16SInt16VI, redxor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(RedxorVS32SInt32VI, redxor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(RedxorVS64SInt64VI, redxor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(RedxorVS8SUInt8VU, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(RedxorVS16SUInt16VU, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(RedxorVS32SUInt32VU, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(RedxorVS64SUInt64VU, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(RedsumVS8SInt8VBVI_m, redsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedsumVS16SInt16VBVI_m, redsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedsumVS32SInt32VBVI_m, redsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedsumVS64SInt64VBVI_m, redsum_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedsumVS8SUInt8VBVU_m, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedsumVS16SUInt16VBVU_m, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedsumVS32SUInt32VBVU_m, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedsumVS64SUInt64VBVU_m, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(RedmaxVS8SInt8VBVI_m, redmax_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedmaxVS16SInt16VBVI_m, redmax_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedmaxVS32SInt32VBVI_m, redmax_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedmaxVS64SInt64VBVI_m, redmax_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VBVU_m, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VBVU_m, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VBVU_m, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VBVU_m, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(RedminVS8SInt8VBVI_m, redmin_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedminVS16SInt16VBVI_m, redmin_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedminVS32SInt32VBVI_m, redmin_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedminVS64SInt64VBVI_m, redmin_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedminuVS8SUInt8VBVU_m, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedminuVS16SUInt16VBVU_m, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedminuVS32SUInt32VBVU_m, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedminuVS64SUInt64VBVU_m, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(RedandVS8SInt8VBVI_m, redand_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedandVS16SInt16VBVI_m, redand_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedandVS32SInt32VBVI_m, redand_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedandVS64SInt64VBVI_m, redand_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedandVS8SUInt8VBVU_m, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedandVS16SUInt16VBVU_m, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedandVS32SUInt32VBVU_m, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedandVS64SUInt64VBVU_m, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(RedorVS8SInt8VBVI_m, redor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedorVS16SInt16VBVI_m, redor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedorVS32SInt32VBVI_m, redor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedorVS64SInt64VBVI_m, redor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedorVS8SUInt8VBVU_m, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedorVS16SUInt16VBVU_m, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedorVS32SUInt32VBVU_m, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedorVS64SUInt64VBVU_m, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(RedxorVS8SInt8VBVI_m, redxor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(RedxorVS16SInt16VBVI_m, redxor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(RedxorVS32SInt32VBVI_m, redxor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(RedxorVS64SInt64VBVI_m, redxor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(RedxorVS8SUInt8VBVU_m, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(RedxorVS16SUInt16VBVU_m, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(RedxorVS32SUInt32VBVU_m, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(RedxorVS64SUInt64VBVU_m, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt64)

CUSTOM_OP_TYPE(FredosumVS16SFloat16VF, fredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FredosumVS32SFloat32VF, fredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FredosumVS64SFloat64VF, fredosum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FredusumVS16SFloat16VF, fredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FredusumVS32SFloat32VF, fredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FredusumVS64SFloat64VF, fredusum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VF, fredmax_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VF, fredmax_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VF, fredmax_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FredminVS16SFloat16VF, fredmin_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(FredminVS32SFloat32VF, fredmin_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(FredminVS64SFloat64VF, fredmin_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(FredosumVS16SFloat16VBVF_m, fredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat16, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FredosumVS32SFloat32VBVF_m, fredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(FredosumVS64SFloat64VBVF_m, fredosum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat64)
CUSTOM_OP_TYPE(FredusumVS16SFloat16VBVF_m, fredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat16, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FredusumVS32SFloat32VBVF_m, fredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(FredusumVS64SFloat64VBVF_m, fredusum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat64)
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VBVF_m, fredmax_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat16, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VBVF_m, fredmax_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VBVF_m, fredmax_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat64)
CUSTOM_OP_TYPE(FredminVS16SFloat16VBVF_m, fredmin_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat16, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FredminVS32SFloat32VBVF_m, fredmin_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(FredminVS64SFloat64VBVF_m, fredmin_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat64)

CUSTOM_OP_TYPE(WredsumVS8SInt16VI, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt16, 1, OneDInt8)
CUSTOM_OP_TYPE(WredsumVS16SInt32VI, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt32, 1, OneDInt16)
CUSTOM_OP_TYPE(WredsumVS32SInt64VI, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarInt64, 1, OneDInt32)
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VU, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt16, 1, OneDUInt8)
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VU, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt32, 1, OneDUInt16)
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VU, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarUInt64, 1, OneDUInt32)
CUSTOM_OP_TYPE(WredsumVS8SInt16VBVI_m, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt16, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(WredsumVS16SInt32VBVI_m, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt32, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(WredsumVS32SInt64VBVI_m, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarInt64, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VBVU_m, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt16, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VBVU_m, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt32, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VBVU_m, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarUInt64, 2, OneDBool, OneDUInt32)

CUSTOM_OP_TYPE(FwredosumVS16SFloat32VF, fwredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat16)
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VF, fwredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat32)
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VF, fwredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat32, 1, OneDFloat16)
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VF, fwredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation, ScalarFloat64, 1, OneDFloat32)
CUSTOM_OP_TYPE(FwredosumVS16SFloat32VBVF_m, fwredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VBVF_m, fwredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VBVF_m, fwredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat32, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VBVF_m, fwredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | ReductionOperation, ScalarFloat64, 2, OneDBool, OneDFloat32)

CUSTOM_OP_TYPE(MandMMVBoolVBVB, mand_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MnandMMVBoolVBVB, mnand_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MandnMMVBoolVBVB, mandn_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MxorMMVBoolVBVB, mxor_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MorMMVBoolVBVB, mor_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MnorMMVBoolVBVB, mnor_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MornMMVBoolVBVB, morn_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MxnorMMVBoolVBVB, mxnor_mm, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 2, OneDBool, OneDBool)

CUSTOM_OP_TYPE(MmvMVBoolVB, mmv_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 1, OneDBool)
CUSTOM_OP_TYPE(MnotMVBoolVB, mnot_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 1, OneDBool)
CUSTOM_OP_TYPE(MclrMVBool, mclr_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation | NoInputOperation, OneDBool, 0,)
CUSTOM_OP_TYPE(MsetMVBool, mset_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation | NoInputOperation, OneDBool, 0,)

CUSTOM_OP_TYPE(CpopMSUInt32VB, cpop_m, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, ScalarUInt32, 1, OneDBool)
CUSTOM_OP_TYPE(CpopMSUInt32VBVB_m, cpop_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, ScalarUInt32, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(FirstMSInt32VB, first_m, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation, ScalarInt32, 1, OneDBool)
CUSTOM_OP_TYPE(FirstMSInt32VBVB_m, first_m, 8, SIGNED_INT, HaveVLParameter | MaskedOperation, ScalarInt32, 2, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MsbfMVBoolVB, msbf_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 1, OneDBool)
CUSTOM_OP_TYPE(MsbfMVBoolVBVBVB_m, msbf_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation, OneDBool, 3, OneDBool, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MsifMVBoolVB, msif_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 1, OneDBool)
CUSTOM_OP_TYPE(MsifMVBoolVBVBVB_m, msif_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation, OneDBool, 3, OneDBool, OneDBool, OneDBool)
CUSTOM_OP_TYPE(MsofMVBoolVB, msof_m, 8, BOOL, HaveVLParameter | NonmaskedOperation | LogicalMaskOperation, OneDBool, 1, OneDBool)
CUSTOM_OP_TYPE(MsofMVBoolVBVBVB_m, msof_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation, OneDBool, 3, OneDBool, OneDBool, OneDBool)

CUSTOM_OP_TYPE(IotaM8VUInt8VB, iota_m, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 1, OneDBool)
CUSTOM_OP_TYPE(IotaM16VUInt16VB, iota_m, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 1, OneDBool)
CUSTOM_OP_TYPE(IotaM32VUInt32VB, iota_m, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 1, OneDBool)
CUSTOM_OP_TYPE(IotaM64VUInt64VB, iota_m, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 1, OneDBool)
CUSTOM_OP_TYPE(IotaM8VUInt8VBVUVB_m, iota_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDBool)
CUSTOM_OP_TYPE(IotaM16VUInt16VBVUVB_m, iota_m, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDBool)
CUSTOM_OP_TYPE(IotaM32VUInt32VBVUVB_m, iota_m, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDBool)
CUSTOM_OP_TYPE(IotaM64VUInt64VBVUVB_m, iota_m, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDBool)

CUSTOM_OP_TYPE(IdM8VUInt8, id_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt8, 0, )
CUSTOM_OP_TYPE(IdM16VUInt16, id_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt16, 0, )
CUSTOM_OP_TYPE(IdM32VUInt32, id_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt32, 0, )
CUSTOM_OP_TYPE(IdM64VUInt64, id_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation, OneDUInt64, 0, )
CUSTOM_OP_TYPE(IdM8VUInt8VBVU_m, id_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(IdM16VUInt16VBVU_m, id_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(IdM32VUInt32VBVU_m, id_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(IdM64VUInt64VBVU_m, id_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation, OneDUInt64, 2, OneDBool, OneDUInt64)

CUSTOM_OP_TYPE(Vle8X8VInt8SI, le8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(Vle16X16VInt16SI, le16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(Vle32X32VInt32SI, le32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(Vle64X64VInt64SI, le64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(Vle8X8VUInt8SU, le8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(Vle16X16VUInt16SU, le16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(Vle32X32VUInt32SU, le32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(Vle64X64VUInt64SU, le64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(Vle16X16VFloat16SF, le16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(Vle32X32VFloat32SF, le32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(Vle64X64VFloat64SF, le64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(Vle8X8VInt8VBVISI_m, le8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(Vle16X16VInt16VBVISI_m, le16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(Vle32X32VInt32VBVISI_m, le32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(Vle64X64VInt64VBVISI_m, le64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(Vle8X8VUInt8VBVUSU_m, le8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vle16X16VUInt16VBVUSU_m, le16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vle32X32VUInt32VBVUSU_m, le32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vle64X64VUInt64VBVUSU_m, le64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vle16X16VFloat16VBVFSF_m, le16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
CUSTOM_OP_TYPE(Vle32X32VFloat32VBVFSF_m, le32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
CUSTOM_OP_TYPE(Vle64X64VFloat64VBVFSF_m, le64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

CUSTOM_OP_TYPE(Vse8X8VoidSIVI, se8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDInt8, 1, OneDInt8)
CUSTOM_OP_TYPE(Vse16X16VoidSIVI, se16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDInt16, 1, OneDInt16)
CUSTOM_OP_TYPE(Vse32X32VoidSIVI, se32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDInt32, 1, OneDInt32)
CUSTOM_OP_TYPE(Vse64X64VoidSIVI, se64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDInt64, 1, OneDInt64)
CUSTOM_OP_TYPE(Vse8X8VoidSUVU, se8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDUInt8, 1, OneDUInt8)
CUSTOM_OP_TYPE(Vse16X16VoidSUVU, se16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDUInt16, 1, OneDUInt16)
CUSTOM_OP_TYPE(Vse32X32VoidSUVU, se32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDUInt32, 1, OneDUInt32)
CUSTOM_OP_TYPE(Vse64X64VoidSUVU, se64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDUInt64, 1, OneDUInt64)
CUSTOM_OP_TYPE(Vse16X16VoidSFVF, se16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDFloat16, 1, OneDFloat16)
CUSTOM_OP_TYPE(Vse32X32VoidSFVF, se32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDFloat32, 1, OneDFloat32)
CUSTOM_OP_TYPE(Vse64X64VoidSFVF, se64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | StoreOperation | VoidOperation, OneDFloat64, 1, OneDFloat64)
CUSTOM_OP_TYPE(Vse8X8VoidVBSIVI_m, se8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDInt8, 2, OneDBool, OneDInt8)
CUSTOM_OP_TYPE(Vse16X16VoidVBSIVI_m, se16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDInt16, 2, OneDBool, OneDInt16)
CUSTOM_OP_TYPE(Vse32X32VoidVBSIVI_m, se32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDInt32, 2, OneDBool, OneDInt32)
CUSTOM_OP_TYPE(Vse64X64VoidVBSIVI_m, se64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDInt64, 2, OneDBool, OneDInt64)
CUSTOM_OP_TYPE(Vse8X8VoidVBSUVU_m, se8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
CUSTOM_OP_TYPE(Vse16X16VoidVBSUVU_m, se16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
CUSTOM_OP_TYPE(Vse32X32VoidVBSUVU_m, se32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
CUSTOM_OP_TYPE(Vse64X64VoidVBSUVU_m, se64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
CUSTOM_OP_TYPE(Vse16X16VoidVBSFVF_m, se16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDFloat16, 2, OneDBool, OneDFloat16)
CUSTOM_OP_TYPE(Vse32X32VoidVBSFVF_m, se32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDFloat32, 2, OneDBool, OneDFloat32)
CUSTOM_OP_TYPE(Vse64X64VoidVBSFVF_m, se64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | StoreOperation | VoidOperation, OneDFloat64, 2, OneDBool, OneDFloat64)

CUSTOM_OP_TYPE(Vloxei8V8VInt8SIVU, loxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V8VInt8SIVU, loxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V8VInt8SIVU, loxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V8VInt8SIVU, loxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VInt16SIVU, loxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VInt16SIVU, loxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VInt16SIVU, loxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VInt16SIVU, loxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VInt32SIVU, loxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VInt32SIVU, loxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VInt32SIVU, loxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VInt32SIVU, loxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VInt64SIVU, loxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VInt64SIVU, loxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VInt64SIVU, loxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VInt64SIVU, loxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V8VUInt8SUVU, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V8VUInt8SUVU, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V8VUInt8SUVU, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V8VUInt8SUVU, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VUInt16SUVU, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VUInt16SUVU, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VUInt16SUVU, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VUInt16SUVU, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VUInt32SUVU, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VUInt32SUVU, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VUInt32SUVU, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VUInt32SUVU, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VUInt64SUVU, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VUInt64SUVU, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VUInt64SUVU, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VUInt64SUVU, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VFloat16SFVU, loxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VFloat16SFVU, loxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VFloat16SFVU, loxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VFloat16SFVU, loxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VFloat32SFVU, loxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VFloat32SFVU, loxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VFloat32SFVU, loxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VFloat32SFVU, loxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VFloat64SFVU, loxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VFloat64SFVU, loxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VFloat64SFVU, loxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VFloat64SFVU, loxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V8VInt8SIVU, luxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V8VInt8SIVU, luxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V8VInt8SIVU, luxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V8VInt8SIVU, luxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VInt16SIVU, luxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VInt16SIVU, luxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VInt16SIVU, luxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VInt16SIVU, luxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VInt32SIVU, luxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VInt32SIVU, luxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VInt32SIVU, luxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VInt32SIVU, luxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VInt64SIVU, luxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VInt64SIVU, luxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VInt64SIVU, luxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VInt64SIVU, luxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V8VUInt8SUVU, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V8VUInt8SUVU, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V8VUInt8SUVU, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V8VUInt8SUVU, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VUInt16SUVU, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VUInt16SUVU, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VUInt16SUVU, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VUInt16SUVU, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VUInt32SUVU, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VUInt32SUVU, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VUInt32SUVU, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VUInt32SUVU, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VUInt64SUVU, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VUInt64SUVU, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VUInt64SUVU, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VUInt64SUVU, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VFloat16SFVU, luxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VFloat16SFVU, luxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VFloat16SFVU, luxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VFloat16SFVU, luxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VFloat32SFVU, luxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VFloat32SFVU, luxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VFloat32SFVU, luxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VFloat32SFVU, luxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VFloat64SFVU, luxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VFloat64SFVU, luxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VFloat64SFVU, luxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VFloat64SFVU, luxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V8VInt8VBVISIVU_m, loxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V8VInt8VBVISIVU_m, loxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V8VInt8VBVISIVU_m, loxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V8VInt8VBVISIVU_m, loxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VInt16VBVISIVU_m, loxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VInt16VBVISIVU_m, loxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VInt16VBVISIVU_m, loxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VInt16VBVISIVU_m, loxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VInt32VBVISIVU_m, loxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VInt32VBVISIVU_m, loxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VInt32VBVISIVU_m, loxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VInt32VBVISIVU_m, loxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VInt64VBVISIVU_m, loxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VInt64VBVISIVU_m, loxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VInt64VBVISIVU_m, loxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VInt64VBVISIVU_m, loxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VBVUSUVU_m, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VBVUSUVU_m, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VBVUSUVU_m, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VBVUSUVU_m, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VBVUSUVU_m, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VBVUSUVU_m, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VBVUSUVU_m, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VBVUSUVU_m, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VBVUSUVU_m, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VBVUSUVU_m, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VBVUSUVU_m, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VBVUSUVU_m, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VBVUSUVU_m, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VBVUSUVU_m, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VBVUSUVU_m, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VBVUSUVU_m, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VBVFSFVU_m, loxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VBVFSFVU_m, loxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VBVFSFVU_m, loxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VBVFSFVU_m, loxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VBVFSFVU_m, loxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VBVFSFVU_m, loxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VBVFSFVU_m, loxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VBVFSFVU_m, loxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VBVFSFVU_m, loxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VBVFSFVU_m, loxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VBVFSFVU_m, loxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VBVFSFVU_m, loxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V8VInt8VBVISIVU_m, luxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V8VInt8VBVISIVU_m, luxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V8VInt8VBVISIVU_m, luxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V8VInt8VBVISIVU_m, luxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VInt16VBVISIVU_m, luxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VInt16VBVISIVU_m, luxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VInt16VBVISIVU_m, luxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VInt16VBVISIVU_m, luxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VInt32VBVISIVU_m, luxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VInt32VBVISIVU_m, luxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VInt32VBVISIVU_m, luxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VInt32VBVISIVU_m, luxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VInt64VBVISIVU_m, luxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VInt64VBVISIVU_m, luxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VInt64VBVISIVU_m, luxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VInt64VBVISIVU_m, luxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VBVUSUVU_m, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VBVUSUVU_m, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VBVUSUVU_m, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VBVUSUVU_m, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VBVUSUVU_m, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VBVUSUVU_m, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VBVUSUVU_m, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VBVUSUVU_m, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VBVUSUVU_m, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VBVUSUVU_m, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VBVUSUVU_m, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VBVUSUVU_m, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VBVUSUVU_m, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VBVUSUVU_m, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VBVUSUVU_m, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VBVUSUVU_m, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VBVFSFVU_m, luxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VBVFSFVU_m, luxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VBVFSFVU_m, luxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VBVFSFVU_m, luxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VBVFSFVU_m, luxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VBVFSFVU_m, luxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VBVFSFVU_m, luxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VBVFSFVU_m, luxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VBVFSFVU_m, luxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VBVFSFVU_m, luxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VBVFSFVU_m, luxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VBVFSFVU_m, luxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)

CUSTOM_OP_TYPE(Vsoxei8V8VoidVUVI, soxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V8VoidVUVI, soxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V8VoidVUVI, soxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V8VoidVUVI, soxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVUVI, soxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVUVI, soxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVUVI, soxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVUVI, soxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVUVI, soxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVUVI, soxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVUVI, soxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVUVI, soxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVUVI, soxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVUVI, soxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVUVI, soxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVUVI, soxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V8VoidVUVU, soxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V8VoidVUVU, soxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V8VoidVUVU, soxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V8VoidVUVU, soxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVUVU, soxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVUVU, soxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVUVU, soxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVUVU, soxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVUVU, soxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVUVU, soxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVUVU, soxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVUVU, soxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVUVU, soxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVUVU, soxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVUVU, soxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVUVU, soxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVUVF, soxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVUVF, soxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVUVF, soxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVUVF, soxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVUVF, soxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVUVF, soxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVUVF, soxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVUVF, soxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVUVF, soxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVUVF, soxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVUVF, soxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVUVF, soxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V8VoidVUVI, suxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V8VoidVUVI, suxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V8VoidVUVI, suxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V8VoidVUVI, suxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVUVI, suxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVUVI, suxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVUVI, suxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVUVI, suxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVUVI, suxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVUVI, suxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVUVI, suxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVUVI, suxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVUVI, suxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVUVI, suxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVUVI, suxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVUVI, suxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V8VoidVUVU, suxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V8VoidVUVU, suxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V8VoidVUVU, suxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V8VoidVUVU, suxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVUVU, suxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVUVU, suxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVUVU, suxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVUVU, suxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVUVU, suxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVUVU, suxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVUVU, suxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVUVU, suxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVUVU, suxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVUVU, suxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVUVU, suxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVUVU, suxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVUVF, suxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVUVF, suxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVUVF, suxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVUVF, suxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVUVF, suxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVUVF, suxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVUVF, suxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVUVF, suxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVUVF, suxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVUVF, suxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVUVF, suxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVUVF, suxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V8VoidVBVUVI_m, soxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V8VoidVBVUVI_m, soxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V8VoidVBVUVI_m, soxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V8VoidVBVUVI_m, soxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVBVUVI_m, soxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVBVUVI_m, soxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVBVUVI_m, soxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVBVUVI_m, soxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVBVUVI_m, soxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVBVUVI_m, soxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVBVUVI_m, soxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVBVUVI_m, soxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVBVUVI_m, soxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVBVUVI_m, soxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVBVUVI_m, soxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVBVUVI_m, soxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V8VoidVBVUVU_m, soxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V8VoidVBVUVU_m, soxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V8VoidVBVUVU_m, soxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V8VoidVBVUVU_m, soxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVBVUVU_m, soxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVBVUVU_m, soxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVBVUVU_m, soxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVBVUVU_m, soxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVBVUVU_m, soxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVBVUVU_m, soxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVBVUVU_m, soxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVBVUVU_m, soxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVBVUVU_m, soxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVBVUVU_m, soxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVBVUVU_m, soxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVBVUVU_m, soxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V16VoidVBVUVF_m, soxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V16VoidVBVUVF_m, soxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V16VoidVBVUVF_m, soxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V16VoidVBVUVF_m, soxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V32VoidVBVUVF_m, soxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V32VoidVBVUVF_m, soxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V32VoidVBVUVF_m, soxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V32VoidVBVUVF_m, soxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vsoxei8V64VoidVBVUVF_m, soxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vsoxei16V64VoidVBVUVF_m, soxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vsoxei32V64VoidVBVUVF_m, soxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vsoxei64V64VoidVBVUVF_m, soxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V8VoidVBVUVI_m, suxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V8VoidVBVUVI_m, suxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V8VoidVBVUVI_m, suxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V8VoidVBVUVI_m, suxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVBVUVI_m, suxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVBVUVI_m, suxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVBVUVI_m, suxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVBVUVI_m, suxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVBVUVI_m, suxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVBVUVI_m, suxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVBVUVI_m, suxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVBVUVI_m, suxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVBVUVI_m, suxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVBVUVI_m, suxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVBVUVI_m, suxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVBVUVI_m, suxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V8VoidVBVUVU_m, suxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V8VoidVBVUVU_m, suxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V8VoidVBVUVU_m, suxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V8VoidVBVUVU_m, suxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVBVUVU_m, suxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVBVUVU_m, suxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVBVUVU_m, suxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVBVUVU_m, suxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVBVUVU_m, suxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVBVUVU_m, suxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVBVUVU_m, suxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVBVUVU_m, suxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVBVUVU_m, suxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVBVUVU_m, suxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVBVUVU_m, suxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVBVUVU_m, suxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V16VoidVBVUVF_m, suxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V16VoidVBVUVF_m, suxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V16VoidVBVUVF_m, suxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V16VoidVBVUVF_m, suxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V32VoidVBVUVF_m, suxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V32VoidVBVUVF_m, suxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V32VoidVBVUVF_m, suxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V32VoidVBVUVF_m, suxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
CUSTOM_OP_TYPE(Vsuxei8V64VoidVBVUVF_m, suxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt8)
CUSTOM_OP_TYPE(Vsuxei16V64VoidVBVUVF_m, suxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt16)
CUSTOM_OP_TYPE(Vsuxei32V64VoidVBVUVF_m, suxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
CUSTOM_OP_TYPE(Vsuxei64V64VoidVBVUVF_m, suxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)

CUSTOM_OP_TYPE(Vlse8XX8VInt8SISI, lse8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt8, 2, OneDInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VInt16SISI, lse16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt16, 2, OneDInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VInt32SISI, lse32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt32, 2, OneDInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VInt64SISI, lse64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDInt64, 2, OneDInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse8XX8VUInt8SUSI, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt8, 2, OneDUInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VUInt16SUSI, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt16, 2, OneDUInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VUInt32SUSI, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt32, 2, OneDUInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VUInt64SUSI, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDUInt64, 2, OneDUInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VFloat16SFSI, lse16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat16, 2, OneDFloat16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VFloat32SFSI, lse32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat32, 2, OneDFloat32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VFloat64SFSI, lse64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation, OneDFloat64, 2, OneDFloat64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse8XX8VInt8VBVISISI_m, lse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VInt16VBVISISI_m, lse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VInt32VBVISISI_m, lse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VInt64VBVISISI_m, lse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VBVUSUSI_m, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VBVUSUSI_m, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VBVUSUSI_m, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VBVUSUSI_m, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VBVFSFSI_m, lse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VBVFSFSI_m, lse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VBVFSFSI_m, lse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarIntXLen)

CUSTOM_OP_TYPE(Vsse8XX8VoidSIVI, sse8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt8, 2, OneDInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidSIVI, sse16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt16, 2, OneDInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidSIVI, sse32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt32, 2, OneDInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidSIVI, sse64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDInt64, 2, OneDInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse8XX8VoidSIVU, sse8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 2, OneDUInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidSIVU, sse16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 2, OneDUInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidSIVU, sse32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 2, OneDUInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidSIVU, sse64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 2, OneDUInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidSIVF, sse16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 2, OneDFloat16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidSIVF, sse32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 2, OneDFloat32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidSIVF, sse64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 2, OneDFloat64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse8XX8VoidVBSIVI_m, sse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt8, 3, OneDBool, OneDInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidVBSIVI_m, sse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt16, 3, OneDBool, OneDInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidVBSIVI_m, sse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt32, 3, OneDBool, OneDInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidVBSIVI_m, sse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDInt64, 3, OneDBool, OneDInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse8XX8VoidVBSIVU_m, sse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidVBSIVU_m, sse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidVBSIVU_m, sse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidVBSIVU_m, sse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse16XX16VoidVBSIVF_m, sse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse32XX32VoidVBSIVF_m, sse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarIntXLen)
CUSTOM_OP_TYPE(Vsse64XX64VoidVBSIVF_m, sse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | VoidOperation | StoreOperation, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarIntXLen)

// Proof of concept for tail policy verification
// add_vv/add_vx int TA
CUSTOM_OP_TYPE(AddVV8VInt8TA, add_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TA, add_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TA, add_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TA, add_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TA, add_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TA, add_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64TA, add_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64TA, add_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)

// add_vv/add_vx uint TA
CUSTOM_OP_TYPE(AddVV8VUInt8TA, add_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TA, add_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TA, add_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TA, add_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TA, add_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TA, add_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TA, add_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TA, add_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)

// add_vv/add_vx int TU
CUSTOM_OP_TYPE(AddVV8VInt8TU, add_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TU, add_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TU, add_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TU, add_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TU, add_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TU, add_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64TU, add_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64TU, add_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)

// add_vv/add_vx uint TU
CUSTOM_OP_TYPE(AddVV8VUInt8TU, add_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TU, add_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TU, add_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TU, add_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TU, add_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TU, add_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TU, add_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TU, add_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)

// add_vv/add_vx int TAMA
CUSTOM_OP_TYPE(AddVV8VInt8TAMA, add_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TAMA, add_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TAMA, add_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TAMA, add_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TAMA, add_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TAMA, add_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64TAMA, add_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64TAMA, add_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)

// add_vv/add_vx uint TAMA
CUSTOM_OP_TYPE(AddVV8VUInt8TAMA, add_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TAMA, add_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TAMA, add_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TAMA, add_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TAMA, add_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TAMA, add_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TAMA, add_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TAMA, add_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)

// add_vv/add_vx int TAMU
CUSTOM_OP_TYPE(AddVV8VInt8TAMU, add_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TAMU, add_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TAMU, add_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TAMU, add_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TAMU, add_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TAMU, add_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVX64VInt64TAMU, add_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
CUSTOM_OP_TYPE(AddVV64VInt64TAMU, add_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)

// add_vv/add_vx uint TAMU
CUSTOM_OP_TYPE(AddVV8VUInt8TAMU, add_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TAMU, add_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TAMU, add_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TAMU, add_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TAMU, add_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TAMU, add_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TAMU, add_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TAMU, add_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// add_vv/add_vx int TUMA
CUSTOM_OP_TYPE(AddVV8VInt8TUMA, add_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TUMA, add_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TUMA, add_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TUMA, add_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TUMA, add_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TUMA, add_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64TUMA, add_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64TUMA, add_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)

// add_vv/add_vx uint TUMA
CUSTOM_OP_TYPE(AddVV8VUInt8TUMA, add_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TUMA, add_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TUMA, add_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TUMA, add_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TUMA, add_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TUMA, add_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TUMA, add_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TUMA, add_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// add_vv/add_vx int TUMU
CUSTOM_OP_TYPE(AddVV8VInt8TUMU, add_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
CUSTOM_OP_TYPE(AddVX8VInt8TUMU, add_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
CUSTOM_OP_TYPE(AddVV16VInt16TUMU, add_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
CUSTOM_OP_TYPE(AddVX16VInt16TUMU, add_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
CUSTOM_OP_TYPE(AddVV32VInt32TUMU, add_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
CUSTOM_OP_TYPE(AddVX32VInt32TUMU, add_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
CUSTOM_OP_TYPE(AddVV64VInt64TUMU, add_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
CUSTOM_OP_TYPE(AddVX64VInt64TUMU, add_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)

// add_vv/add_vx uint TUMU
CUSTOM_OP_TYPE(AddVV8VUInt8TUMU, add_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
CUSTOM_OP_TYPE(AddVX8VUInt8TUMU, add_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
CUSTOM_OP_TYPE(AddVV16VUInt16TUMU, add_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
CUSTOM_OP_TYPE(AddVX16VUInt16TUMU, add_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
CUSTOM_OP_TYPE(AddVV32VUInt32TUMU, add_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
CUSTOM_OP_TYPE(AddVX32VUInt32TUMU, add_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
CUSTOM_OP_TYPE(AddVV64VUInt64TUMU, add_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
CUSTOM_OP_TYPE(AddVX64VUInt64TUMU, add_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VIVIVI_TU, sub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VIVISI_TU, sub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VIVIVI_TU, sub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VIVISI_TU, sub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VIVIVI_TU, sub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VIVISI_TU, sub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VIVIVI_TU, sub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VIVISI_TU, sub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VUVUVU_TU, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VUVUSU_TU, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VUVUVU_TU, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VUVUSU_TU, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VUVUVU_TU, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VUVUSU_TU, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VUVUVU_TU, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VUVUSU_TU, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VIVISI_TU, rsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VIVISI_TU, rsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VIVISI_TU, rsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VIVISI_TU, rsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VUVUSU_TU, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VUVUSU_TU, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VUVUSU_TU, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VUVUSU_TU, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VIVI_TA, sub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VISI_TA, sub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VIVI_TA, sub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VISI_TA, sub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VIVI_TA, sub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VISI_TA, sub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VIVI_TA, sub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VISI_TA, sub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VUVU_TA, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VUSU_TA, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VUVU_TA, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VUSU_TA, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VUVU_TA, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VUSU_TA, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VUVU_TA, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VUSU_TA, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VISI_TA, rsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VISI_TA, rsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VISI_TA, rsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VISI_TA, rsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VUSU_TA, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VUSU_TA, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VUSU_TA, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VUSU_TA, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VBVIVIVI_TUMA, sub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VBVIVISI_TUMA, sub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VBVIVIVI_TUMA, sub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VBVIVISI_TUMA, sub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VBVIVIVI_TUMA, sub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VBVIVISI_TUMA, sub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VBVIVIVI_TUMA, sub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VBVIVISI_TUMA, sub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VBVUVUVU_TUMA, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VBVUVUSU_TUMA, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VBVUVUVU_TUMA, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VBVUVUSU_TUMA, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VBVUVUVU_TUMA, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VBVUVUSU_TUMA, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VBVUVUVU_TUMA, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VBVUVUSU_TUMA, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VBVIVISI_TUMA, rsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VBVIVISI_TUMA, rsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VBVIVISI_TUMA, rsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VBVIVISI_TUMA, rsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VBVUVUSU_TUMA, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VBVUVUSU_TUMA, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VBVUVUSU_TUMA, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VBVUVUSU_TUMA, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VBVIVIVI_TUMU, sub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VBVIVISI_TUMU, sub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VBVIVIVI_TUMU, sub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VBVIVISI_TUMU, sub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VBVIVIVI_TUMU, sub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VBVIVISI_TUMU, sub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VBVIVIVI_TUMU, sub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VBVIVISI_TUMU, sub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VBVUVUVU_TUMU, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VBVUVUSU_TUMU, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VBVUVUVU_TUMU, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VBVUVUSU_TUMU, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VBVUVUVU_TUMU, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VBVUVUSU_TUMU, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VBVUVUVU_TUMU, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VBVUVUSU_TUMU, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VBVIVISI_TUMU, rsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VBVIVISI_TUMU, rsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VBVIVISI_TUMU, rsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VBVIVISI_TUMU, rsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VBVUVUSU_TUMU, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VBVUVUSU_TUMU, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VBVUVUSU_TUMU, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VBVUVUSU_TUMU, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VBVIVI_TAMA, sub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VBVISI_TAMA, sub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VBVIVI_TAMA, sub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VBVISI_TAMA, sub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VBVIVI_TAMA, sub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VBVISI_TAMA, sub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VBVIVI_TAMA, sub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VBVISI_TAMA, sub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VBVUVU_TAMA, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VBVUSU_TAMA, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VBVUVU_TAMA, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VBVUSU_TAMA, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VBVUVU_TAMA, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VBVUSU_TAMA, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VBVUVU_TAMA, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VBVUSU_TAMA, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VBVISI_TAMA, rsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VBVISI_TAMA, rsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VBVISI_TAMA, rsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VBVISI_TAMA, rsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VBVUSU_TAMA, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VBVUSU_TAMA, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VBVUSU_TAMA, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VBVUSU_TAMA, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)

// vint8m1_t vsub_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VInt8VBVIVIVI_TAMU, sub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsub_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VInt8VBVIVISI_TAMU, sub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsub_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VInt16VBVIVIVI_TAMU, sub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsub_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VInt16VBVIVISI_TAMU, sub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsub_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VInt32VBVIVIVI_TAMU, sub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsub_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VInt32VBVIVISI_TAMU, sub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsub_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VInt64VBVIVIVI_TAMU, sub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsub_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VInt64VBVIVISI_TAMU, sub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsub_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV8VUInt8VBVUVUVU_TAMU, sub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsub_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX8VUInt8VBVUVUSU_TAMU, sub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsub_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV16VUInt16VBVUVUVU_TAMU, sub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsub_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX16VUInt16VBVUVUSU_TAMU, sub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsub_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV32VUInt32VBVUVUVU_TAMU, sub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsub_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX32VUInt32VBVUVUSU_TAMU, sub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsub_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVV64VUInt64VBVUVUVU_TAMU, sub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsub_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SubVX64VUInt64VBVUVUSU_TAMU, sub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrsub_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VInt8VBVIVISI_TAMU, rsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrsub_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VInt16VBVIVISI_TAMU, rsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrsub_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VInt32VBVIVISI_TAMU, rsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrsub_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VInt64VBVIVISI_TAMU, rsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vrsub_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX8VUInt8VBVUVUSU_TAMU, rsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vrsub_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX16VUInt16VBVUVUSU_TAMU, rsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vrsub_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX32VUInt32VBVUVUSU_TAMU, rsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vrsub_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RsubVX64VUInt64VBVUVUSU_TAMU, rsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint16m2_t vwadd_vv_int16m2_tu (vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VIVIVI_TU, wadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_tu (vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VIVISI_TU, wadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_tu (vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VIVIVI_TU, wadd_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_tu (vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VIVISI_TU, wadd_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_tu (vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VIVIVI_TU, wadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_tu (vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VIVISI_TU, wadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_tu (vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VIVIVI_TU, wadd_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_tu (vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VIVISI_TU, wadd_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_tu (vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VIVIVI_TU, wadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_tu (vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VIVISI_TU, wadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_tu (vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VIVIVI_TU, wadd_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_tu (vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VIVISI_TU, wadd_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VUVUVU_TU, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VUVUSU_TU, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_tu (vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VUVUVU_TU, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_tu (vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VUVUSU_TU, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VUVUVU_TU, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VUVUSU_TU, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_tu (vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VUVUVU_TU, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_tu (vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VUVUSU_TU, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VUVUVU_TU, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VUVUSU_TU, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_tu (vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VUVUVU_TU, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_tu (vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VUVUSU_TU, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_tu (vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VIVIVI_TU, wsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_tu (vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VIVISI_TU, wsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_tu (vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VIVIVI_TU, wsub_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_tu (vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VIVISI_TU, wsub_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_tu (vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VIVIVI_TU, wsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_tu (vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VIVISI_TU, wsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_tu (vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VIVIVI_TU, wsub_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_tu (vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VIVISI_TU, wsub_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_tu (vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VIVIVI_TU, wsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_tu (vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VIVISI_TU, wsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_tu (vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VIVIVI_TU, wsub_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_tu (vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VIVISI_TU, wsub_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VUVUVU_TU, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VUVUSU_TU, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_tu (vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VUVUVU_TU, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_tu (vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VUVUSU_TU, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VUVUVU_TU, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VUVUSU_TU, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_tu (vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VUVUVU_TU, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_tu (vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VUVUSU_TU, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VUVUVU_TU, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VUVUSU_TU, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_tu (vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VUVUVU_TU, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_tu (vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VUVUSU_TU, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwadd_vv_int16m2_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VIVI_TA, wadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VISI_TA, wadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_ta (vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VIVI_TA, wadd_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_ta (vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VISI_TA, wadd_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VIVI_TA, wadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VISI_TA, wadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_ta (vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VIVI_TA, wadd_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_ta (vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VISI_TA, wadd_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VIVI_TA, wadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VISI_TA, wadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_ta (vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VIVI_TA, wadd_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_ta (vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VISI_TA, wadd_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VUVU_TA, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VUSU_TA, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_ta (vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VUVU_TA, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_ta (vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VUSU_TA, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VUVU_TA, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VUSU_TA, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_ta (vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VUVU_TA, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_ta (vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VUSU_TA, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VUVU_TA, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VUSU_TA, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_ta (vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VUVU_TA, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_ta (vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VUSU_TA, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VIVI_TA, wsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VISI_TA, wsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_ta (vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VIVI_TA, wsub_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_ta (vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VISI_TA, wsub_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VIVI_TA, wsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VISI_TA, wsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_ta (vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VIVI_TA, wsub_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_ta (vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VISI_TA, wsub_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VIVI_TA, wsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VISI_TA, wsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_ta (vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VIVI_TA, wsub_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_ta (vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VISI_TA, wsub_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VUVU_TA, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VUSU_TA, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_ta (vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VUVU_TA, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_ta (vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VUSU_TA, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VUVU_TA, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VUSU_TA, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_ta (vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VUVU_TA, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_ta (vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VUSU_TA, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VUVU_TA, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VUSU_TA, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_ta (vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VUVU_TA, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_ta (vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VUSU_TA, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt32)

// vint16m2_t vwadd_vv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VBVIVIVI_TUMA, wadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VBVIVISI_TUMA, wadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VBVIVIVI_TUMA, wadd_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VBVIVISI_TUMA, wadd_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VBVIVIVI_TUMA, wadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VBVIVISI_TUMA, wadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VBVIVIVI_TUMA, wadd_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VBVIVISI_TUMA, wadd_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VBVIVIVI_TUMA, wadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VBVIVISI_TUMA, wadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VBVIVIVI_TUMA, wadd_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VBVIVISI_TUMA, wadd_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VBVUVUVU_TUMA, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VBVUVUSU_TUMA, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VBVUVUVU_TUMA, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VBVUVUSU_TUMA, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VBVUVUVU_TUMA, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VBVUVUSU_TUMA, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VBVUVUVU_TUMA, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VBVUVUSU_TUMA, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VBVUVUVU_TUMA, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VBVUVUSU_TUMA, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VBVUVUVU_TUMA, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VBVUVUSU_TUMA, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VBVIVIVI_TUMA, wsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VBVIVISI_TUMA, wsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VBVIVIVI_TUMA, wsub_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VBVIVISI_TUMA, wsub_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VBVIVIVI_TUMA, wsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VBVIVISI_TUMA, wsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VBVIVIVI_TUMA, wsub_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VBVIVISI_TUMA, wsub_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VBVIVIVI_TUMA, wsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VBVIVISI_TUMA, wsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VBVIVIVI_TUMA, wsub_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VBVIVISI_TUMA, wsub_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VBVUVUVU_TUMA, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VBVUVUSU_TUMA, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VBVUVUVU_TUMA, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VBVUVUSU_TUMA, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VBVUVUVU_TUMA, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VBVUVUSU_TUMA, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VBVUVUVU_TUMA, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VBVUVUSU_TUMA, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VBVUVUVU_TUMA, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VBVUVUSU_TUMA, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VBVUVUVU_TUMA, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VBVUVUSU_TUMA, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwadd_vv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VBVIVIVI_TUMU, wadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VBVIVISI_TUMU, wadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VBVIVIVI_TUMU, wadd_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VBVIVISI_TUMU, wadd_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VBVIVIVI_TUMU, wadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VBVIVISI_TUMU, wadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VBVIVIVI_TUMU, wadd_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VBVIVISI_TUMU, wadd_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VBVIVIVI_TUMU, wadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VBVIVISI_TUMU, wadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VBVIVIVI_TUMU, wadd_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VBVIVISI_TUMU, wadd_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VBVUVUVU_TUMU, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VBVUVUSU_TUMU, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VBVUVUVU_TUMU, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VBVUVUSU_TUMU, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VBVUVUVU_TUMU, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VBVUVUSU_TUMU, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VBVUVUVU_TUMU, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VBVUVUSU_TUMU, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VBVUVUVU_TUMU, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VBVUVUSU_TUMU, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VBVUVUVU_TUMU, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VBVUVUSU_TUMU, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VBVIVIVI_TUMU, wsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VBVIVISI_TUMU, wsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VBVIVIVI_TUMU, wsub_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VBVIVISI_TUMU, wsub_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VBVIVIVI_TUMU, wsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VBVIVISI_TUMU, wsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VBVIVIVI_TUMU, wsub_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VBVIVISI_TUMU, wsub_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VBVIVIVI_TUMU, wsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VBVIVISI_TUMU, wsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VBVIVIVI_TUMU, wsub_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VBVIVISI_TUMU, wsub_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VBVUVUVU_TUMU, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VBVUVUSU_TUMU, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VBVUVUVU_TUMU, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VBVUVUSU_TUMU, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VBVUVUVU_TUMU, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VBVUVUSU_TUMU, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VBVUVUVU_TUMU, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VBVUVUSU_TUMU, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VBVUVUVU_TUMU, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VBVUVUSU_TUMU, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VBVUVUVU_TUMU, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VBVUVUSU_TUMU, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwadd_vv_int16m2_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VBVIVI_TAMA, wadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VBVISI_TAMA, wadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_tama (vbool8_t mask, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VBVIVI_TAMA, wadd_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_tama (vbool8_t mask, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VBVISI_TAMA, wadd_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VBVIVI_TAMA, wadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VBVISI_TAMA, wadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_tama (vbool16_t mask, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VBVIVI_TAMA, wadd_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_tama (vbool16_t mask, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VBVISI_TAMA, wadd_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VBVIVI_TAMA, wadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VBVISI_TAMA, wadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_tama (vbool32_t mask, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VBVIVI_TAMA, wadd_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_tama (vbool32_t mask, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VBVISI_TAMA, wadd_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VBVUVU_TAMA, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VBVUSU_TAMA, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_tama (vbool8_t mask, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VBVUVU_TAMA, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_tama (vbool8_t mask, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VBVUSU_TAMA, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VBVUVU_TAMA, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VBVUSU_TAMA, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_tama (vbool16_t mask, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VBVUVU_TAMA, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_tama (vbool16_t mask, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VBVUSU_TAMA, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VBVUVU_TAMA, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VBVUSU_TAMA, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_tama (vbool32_t mask, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VBVUVU_TAMA, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_tama (vbool32_t mask, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VBVUSU_TAMA, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VBVIVI_TAMA, wsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VBVISI_TAMA, wsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_tama (vbool8_t mask, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VBVIVI_TAMA, wsub_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_tama (vbool8_t mask, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VBVISI_TAMA, wsub_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VBVIVI_TAMA, wsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VBVISI_TAMA, wsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_tama (vbool16_t mask, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VBVIVI_TAMA, wsub_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_tama (vbool16_t mask, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VBVISI_TAMA, wsub_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VBVIVI_TAMA, wsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VBVISI_TAMA, wsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_tama (vbool32_t mask, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VBVIVI_TAMA, wsub_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_tama (vbool32_t mask, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VBVISI_TAMA, wsub_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VBVUVU_TAMA, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VBVUSU_TAMA, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_tama (vbool8_t mask, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VBVUVU_TAMA, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_tama (vbool8_t mask, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VBVUSU_TAMA, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VBVUVU_TAMA, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VBVUSU_TAMA, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_tama (vbool16_t mask, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VBVUVU_TAMA, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_tama (vbool16_t mask, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VBVUSU_TAMA, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VBVUVU_TAMA, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VBVUSU_TAMA, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_tama (vbool32_t mask, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VBVUVU_TAMA, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_tama (vbool32_t mask, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VBVUSU_TAMA, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt32)

// vint16m2_t vwadd_vv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV8VInt16VBVIVIVI_TAMU, wadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwadd_vx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX8VInt16VBVIVISI_TAMU, wadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwadd_wv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV8VInt16VBVIVIVI_TAMU, wadd_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwadd_wx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX8VInt16VBVIVISI_TAMU, wadd_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwadd_vv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV16VInt32VBVIVIVI_TAMU, wadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwadd_vx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX16VInt32VBVIVISI_TAMU, wadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwadd_wv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV16VInt32VBVIVIVI_TAMU, wadd_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwadd_wx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX16VInt32VBVIVISI_TAMU, wadd_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwadd_vv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVV32VInt64VBVIVIVI_TAMU, wadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwadd_vx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddVX32VInt64VBVIVISI_TAMU, wadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwadd_wv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWV32VInt64VBVIVIVI_TAMU, wadd_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwadd_wx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WaddWX32VInt64VBVIVISI_TAMU, wadd_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwaddu_vv_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV8VUInt16VBVUVUVU_TAMU, waddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwaddu_vx_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX8VUInt16VBVUVUSU_TAMU, waddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwaddu_wv_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV8VUInt16VBVUVUVU_TAMU, waddu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwaddu_wx_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX8VUInt16VBVUVUSU_TAMU, waddu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwaddu_vv_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV16VUInt32VBVUVUVU_TAMU, waddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwaddu_vx_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX16VUInt32VBVUVUSU_TAMU, waddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwaddu_wv_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV16VUInt32VBVUVUVU_TAMU, waddu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwaddu_wx_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX16VUInt32VBVUVUSU_TAMU, waddu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwaddu_vv_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVV32VUInt64VBVUVUVU_TAMU, waddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwaddu_vx_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduVX32VUInt64VBVUVUSU_TAMU, waddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwaddu_wv_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWV32VUInt64VBVUVUVU_TAMU, waddu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwaddu_wx_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WadduWX32VUInt64VBVUVUSU_TAMU, waddu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vint16m2_t vwsub_vv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV8VInt16VBVIVIVI_TAMU, wsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwsub_vx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX8VInt16VBVIVISI_TAMU, wsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint16m2_t vwsub_wv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV8VInt16VBVIVIVI_TAMU, wsub_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt8)
// vint16m2_t vwsub_wx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint16m2_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX8VInt16VBVIVISI_TAMU, wsub_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt8)
// vint32m2_t vwsub_vv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV16VInt32VBVIVIVI_TAMU, wsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwsub_vx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX16VInt32VBVIVISI_TAMU, wsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint32m2_t vwsub_wv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV16VInt32VBVIVIVI_TAMU, wsub_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt16)
// vint32m2_t vwsub_wx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint32m2_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX16VInt32VBVIVISI_TAMU, wsub_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt16)
// vint64m2_t vwsub_vv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVV32VInt64VBVIVIVI_TAMU, wsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwsub_vx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubVX32VInt64VBVIVISI_TAMU, wsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vint64m2_t vwsub_wv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWV32VInt64VBVIVIVI_TAMU, wsub_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt32)
// vint64m2_t vwsub_wx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint64m2_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubWX32VInt64VBVIVISI_TAMU, wsub_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt32)
// vuint16m2_t vwsubu_vv_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV8VUInt16VBVUVUVU_TAMU, wsubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwsubu_vx_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX8VUInt16VBVUVUSU_TAMU, wsubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint16m2_t vwsubu_wv_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV8VUInt16VBVUVUVU_TAMU, wsubu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m2_t vwsubu_wx_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint16m2_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX8VUInt16VBVUVUSU_TAMU, wsubu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt8)
// vuint32m2_t vwsubu_vv_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV16VUInt32VBVUVUVU_TAMU, wsubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwsubu_vx_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX16VUInt32VBVUVUSU_TAMU, wsubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint32m2_t vwsubu_wv_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV16VUInt32VBVUVUVU_TAMU, wsubu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m2_t vwsubu_wx_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint32m2_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX16VUInt32VBVUVUSU_TAMU, wsubu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt16)
// vuint64m2_t vwsubu_vv_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVV32VUInt64VBVUVUVU_TAMU, wsubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwsubu_vx_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuVX32VUInt64VBVUVUSU_TAMU, wsubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vuint64m2_t vwsubu_wv_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWV32VUInt64VBVUVUVU_TAMU, wsubu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m2_t vwsubu_wx_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint64m2_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WsubuWX32VUInt64VBVUVUSU_TAMU, wsubu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt32)

// vuint16m1_t vzext_vf2_uint16m1_tu (vuint16m1_t merge, vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VUVU_TU, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_tu (vuint32m1_t merge, vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VUVU_TU, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_tu (vuint64m1_t merge, vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VUVU_TU, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_tu (vuint32m1_t merge, vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VUVU_TU, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_tu (vuint64m1_t merge, vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VUVU_TU, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_tu (vuint64m1_t merge, vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VUVU_TU, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_tu (vint16m1_t merge, vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VIVI_TU, sext_vf2, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_tu (vint32m1_t merge, vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VIVI_TU, sext_vf4, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_tu (vint64m1_t merge, vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VIVI_TU, sext_vf8, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_tu (vint32m1_t merge, vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VIVI_TU, sext_vf2, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_tu (vint64m1_t merge, vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VIVI_TU, sext_vf4, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_tu (vint64m1_t merge, vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VIVI_TU, sext_vf2, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt32)
// vuint16m1_t vzext_vf2_uint16m1_ta (vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VU_TA, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_ta (vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VU_TA, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_ta (vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VU_TA, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_ta (vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VU_TA, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_ta (vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VU_TA, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_ta (vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VU_TA, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_ta (vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VI_TA, sext_vf2, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt16, 1, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_ta (vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VI_TA, sext_vf4, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt32, 1, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_ta (vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VI_TA, sext_vf8, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt64, 1, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_ta (vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VI_TA, sext_vf2, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt32, 1, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_ta (vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VI_TA, sext_vf4, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt64, 1, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_ta (vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VI_TA, sext_vf2, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ExtensionOperation | TailAgnostic, OneDInt64, 1, OneDInt32)
// vuint16m1_t vzext_vf2_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VBVUVU_TUMA, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VBVUVU_TUMA, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VBVUVU_TUMA, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VBVUVU_TUMA, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VBVUVU_TUMA, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VBVUVU_TUMA, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VBVIVI_TUMA, sext_vf2, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VBVIVI_TUMA, sext_vf4, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VBVIVI_TUMA, sext_vf8, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VBVIVI_TUMA, sext_vf2, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VBVIVI_TUMA, sext_vf4, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VBVIVI_TUMA, sext_vf2, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint16m1_t vzext_vf2_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VBVUVU_TUMU, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VBVUVU_TUMU, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VBVUVU_TUMU, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VBVUVU_TUMU, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VBVUVU_TUMU, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VBVUVU_TUMU, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VBVIVI_TUMU, sext_vf2, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VBVIVI_TUMU, sext_vf4, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VBVIVI_TUMU, sext_vf8, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VBVIVI_TUMU, sext_vf2, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VBVIVI_TUMU, sext_vf4, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VBVIVI_TUMU, sext_vf2, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint16m1_t vzext_vf2_uint16m1_tama (vbool16_t mask, vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VBVU_TAMA, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_tama (vbool32_t mask, vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VBVU_TAMA, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_tama (vbool64_t mask, vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VBVU_TAMA, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_tama (vbool32_t mask, vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VBVU_TAMA, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_tama (vbool64_t mask, vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VBVU_TAMA, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_tama (vbool64_t mask, vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VBVU_TAMA, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_tama (vbool16_t mask, vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VBVI_TAMA, sext_vf2, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_tama (vbool32_t mask, vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VBVI_TAMA, sext_vf4, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_tama (vbool64_t mask, vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VBVI_TAMA, sext_vf8, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_tama (vbool32_t mask, vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VBVI_TAMA, sext_vf2, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_tama (vbool64_t mask, vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VBVI_TAMA, sext_vf4, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_tama (vbool64_t mask, vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VBVI_TAMA, sext_vf2, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt32)
// vuint16m1_t vzext_vf2_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V16VUInt16VBVUVU_TAMU, zext_vf2, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint32m1_t vzext_vf4_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V32VUInt32VBVUVU_TAMU, zext_vf4, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
// vuint64m1_t vzext_vf8_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf8V64VUInt64VBVUVU_TAMU, zext_vf8, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
// vuint32m1_t vzext_vf2_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V32VUInt32VBVUVU_TAMU, zext_vf2, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint64m1_t vzext_vf4_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf4V64VUInt64VBVUVU_TAMU, zext_vf4, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
// vuint64m1_t vzext_vf2_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Zext_vf2V64VUInt64VBVUVU_TAMU, zext_vf2, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m1_t vsext_vf2_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint8mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V16VInt16VBVIVI_TAMU, sext_vf2, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint32m1_t vsext_vf4_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint8mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V32VInt32VBVIVI_TAMU, sext_vf4, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt8)
// vint64m1_t vsext_vf8_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint8mf8_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf8V64VInt64VBVIVI_TAMU, sext_vf8, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt8)
// vint32m1_t vsext_vf2_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint16mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V32VInt32VBVIVI_TAMU, sext_vf2, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint64m1_t vsext_vf4_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint16mf4_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf4V64VInt64VBVIVI_TAMU, sext_vf4, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt16)
// vint64m1_t vsext_vf2_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint32mf2_t op1, size_t vl);
CUSTOM_OP_TYPE(Sext_vf2V64VInt64VBVIVI_TAMU, sext_vf2, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | ExtensionOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)

// vint8m1_t vadc_vvm_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM8VInt8VIVIVIVB_TU, adc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 4, OneDInt8, OneDInt8, OneDInt8, OneDBool)
// vint8m1_t vadc_vxm_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM8VInt8VIVISIVB_TU, adc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 4, OneDInt8, OneDInt8, ScalarInt8, OneDBool)
// vint16m1_t vadc_vvm_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM16VInt16VIVIVIVB_TU, adc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 4, OneDInt16, OneDInt16, OneDInt16, OneDBool)
// vint16m1_t vadc_vxm_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM16VInt16VIVISIVB_TU, adc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 4, OneDInt16, OneDInt16, ScalarInt16, OneDBool)
// vint32m1_t vadc_vvm_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM32VInt32VIVIVIVB_TU, adc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 4, OneDInt32, OneDInt32, OneDInt32, OneDBool)
// vint32m1_t vadc_vxm_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM32VInt32VIVISIVB_TU, adc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 4, OneDInt32, OneDInt32, ScalarInt32, OneDBool)
// vint64m1_t vadc_vvm_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM64VInt64VIVIVIVB_TU, adc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 4, OneDInt64, OneDInt64, OneDInt64, OneDBool)
// vint64m1_t vadc_vxm_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM64VInt64VIVISIVB_TU, adc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 4, OneDInt64, OneDInt64, ScalarInt64, OneDBool)
// vuint8m1_t vadc_vvm_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM8VUInt8VUVUVUVB_TU, adc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 4, OneDUInt8, OneDUInt8, OneDUInt8, OneDBool)
// vuint8m1_t vadc_vxm_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM8VUInt8VUVUSUVB_TU, adc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 4, OneDUInt8, OneDUInt8, ScalarUInt8, OneDBool)
// vuint16m1_t vadc_vvm_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM16VUInt16VUVUVUVB_TU, adc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 4, OneDUInt16, OneDUInt16, OneDUInt16, OneDBool)
// vuint16m1_t vadc_vxm_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM16VUInt16VUVUSUVB_TU, adc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 4, OneDUInt16, OneDUInt16, ScalarUInt16, OneDBool)
// vuint32m1_t vadc_vvm_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM32VUInt32VUVUVUVB_TU, adc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 4, OneDUInt32, OneDUInt32, OneDUInt32, OneDBool)
// vuint32m1_t vadc_vxm_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM32VUInt32VUVUSUVB_TU, adc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 4, OneDUInt32, OneDUInt32, ScalarUInt32, OneDBool)
// vuint64m1_t vadc_vvm_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM64VUInt64VUVUVUVB_TU, adc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 4, OneDUInt64, OneDUInt64, OneDUInt64, OneDBool)
// vuint64m1_t vadc_vxm_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM64VUInt64VUVUSUVB_TU, adc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 4, OneDUInt64, OneDUInt64, ScalarUInt64, OneDBool)
// vint8m1_t vsbc_vvm_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM8VInt8VIVIVIVB_TU, sbc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 4, OneDInt8, OneDInt8, OneDInt8, OneDBool)
// vint8m1_t vsbc_vxm_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM8VInt8VIVISIVB_TU, sbc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 4, OneDInt8, OneDInt8, ScalarInt8, OneDBool)
// vint16m1_t vsbc_vvm_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM16VInt16VIVIVIVB_TU, sbc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 4, OneDInt16, OneDInt16, OneDInt16, OneDBool)
// vint16m1_t vsbc_vxm_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM16VInt16VIVISIVB_TU, sbc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 4, OneDInt16, OneDInt16, ScalarInt16, OneDBool)
// vint32m1_t vsbc_vvm_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM32VInt32VIVIVIVB_TU, sbc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 4, OneDInt32, OneDInt32, OneDInt32, OneDBool)
// vint32m1_t vsbc_vxm_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM32VInt32VIVISIVB_TU, sbc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 4, OneDInt32, OneDInt32, ScalarInt32, OneDBool)
// vint64m1_t vsbc_vvm_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM64VInt64VIVIVIVB_TU, sbc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 4, OneDInt64, OneDInt64, OneDInt64, OneDBool)
// vint64m1_t vsbc_vxm_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM64VInt64VIVISIVB_TU, sbc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 4, OneDInt64, OneDInt64, ScalarInt64, OneDBool)
// vuint8m1_t vsbc_vvm_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM8VUInt8VUVUVUVB_TU, sbc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 4, OneDUInt8, OneDUInt8, OneDUInt8, OneDBool)
// vuint8m1_t vsbc_vxm_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM8VUInt8VUVUSUVB_TU, sbc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 4, OneDUInt8, OneDUInt8, ScalarUInt8, OneDBool)
// vuint16m1_t vsbc_vvm_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM16VUInt16VUVUVUVB_TU, sbc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 4, OneDUInt16, OneDUInt16, OneDUInt16, OneDBool)
// vuint16m1_t vsbc_vxm_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM16VUInt16VUVUSUVB_TU, sbc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 4, OneDUInt16, OneDUInt16, ScalarUInt16, OneDBool)
// vuint32m1_t vsbc_vvm_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM32VUInt32VUVUVUVB_TU, sbc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 4, OneDUInt32, OneDUInt32, OneDUInt32, OneDBool)
// vuint32m1_t vsbc_vxm_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM32VUInt32VUVUSUVB_TU, sbc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 4, OneDUInt32, OneDUInt32, ScalarUInt32, OneDBool)
// vuint64m1_t vsbc_vvm_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM64VUInt64VUVUVUVB_TU, sbc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 4, OneDUInt64, OneDUInt64, OneDUInt64, OneDBool)
// vuint64m1_t vsbc_vxm_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM64VUInt64VUVUSUVB_TU, sbc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 4, OneDUInt64, OneDUInt64, ScalarUInt64, OneDBool)
// vint8m1_t vadc_vvm_int8m1_ta (vint8m1_t op1, vint8m1_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM8VInt8VIVIVB_TA, adc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDBool)
// vint8m1_t vadc_vxm_int8m1_ta (vint8m1_t op1, int8_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM8VInt8VISIVB_TA, adc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDBool)
// vint16m1_t vadc_vvm_int16m1_ta (vint16m1_t op1, vint16m1_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM16VInt16VIVIVB_TA, adc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDBool)
// vint16m1_t vadc_vxm_int16m1_ta (vint16m1_t op1, int16_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM16VInt16VISIVB_TA, adc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDBool)
// vint32m1_t vadc_vvm_int32m1_ta (vint32m1_t op1, vint32m1_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM32VInt32VIVIVB_TA, adc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDBool)
// vint32m1_t vadc_vxm_int32m1_ta (vint32m1_t op1, int32_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM32VInt32VISIVB_TA, adc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDBool)
// vint64m1_t vadc_vvm_int64m1_ta (vint64m1_t op1, vint64m1_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM64VInt64VIVIVB_TA, adc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDBool)
// vint64m1_t vadc_vxm_int64m1_ta (vint64m1_t op1, int64_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM64VInt64VISIVB_TA, adc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDBool)
// vuint8m1_t vadc_vvm_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM8VUInt8VUVUVB_TA, adc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDBool)
// vuint8m1_t vadc_vxm_uint8m1_ta (vuint8m1_t op1, uint8_t op2, vbool8_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM8VUInt8VUSUVB_TA, adc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDBool)
// vuint16m1_t vadc_vvm_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM16VUInt16VUVUVB_TA, adc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDBool)
// vuint16m1_t vadc_vxm_uint16m1_ta (vuint16m1_t op1, uint16_t op2, vbool16_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM16VUInt16VUSUVB_TA, adc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDBool)
// vuint32m1_t vadc_vvm_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM32VUInt32VUVUVB_TA, adc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDBool)
// vuint32m1_t vadc_vxm_uint32m1_ta (vuint32m1_t op1, uint32_t op2, vbool32_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM32VUInt32VUSUVB_TA, adc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDBool)
// vuint64m1_t vadc_vvm_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVVM64VUInt64VUVUVB_TA, adc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDBool)
// vuint64m1_t vadc_vxm_uint64m1_ta (vuint64m1_t op1, uint64_t op2, vbool64_t carryin, size_t vl);
CUSTOM_OP_TYPE(AdcVXM64VUInt64VUSUVB_TA, adc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDBool)
// vint8m1_t vsbc_vvm_int8m1_ta (vint8m1_t op1, vint8m1_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM8VInt8VIVIVB_TA, sbc_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDBool)
// vint8m1_t vsbc_vxm_int8m1_ta (vint8m1_t op1, int8_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM8VInt8VISIVB_TA, sbc_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDBool)
// vint16m1_t vsbc_vvm_int16m1_ta (vint16m1_t op1, vint16m1_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM16VInt16VIVIVB_TA, sbc_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDBool)
// vint16m1_t vsbc_vxm_int16m1_ta (vint16m1_t op1, int16_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM16VInt16VISIVB_TA, sbc_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDBool)
// vint32m1_t vsbc_vvm_int32m1_ta (vint32m1_t op1, vint32m1_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM32VInt32VIVIVB_TA, sbc_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDBool)
// vint32m1_t vsbc_vxm_int32m1_ta (vint32m1_t op1, int32_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM32VInt32VISIVB_TA, sbc_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDBool)
// vint64m1_t vsbc_vvm_int64m1_ta (vint64m1_t op1, vint64m1_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM64VInt64VIVIVB_TA, sbc_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDBool)
// vint64m1_t vsbc_vxm_int64m1_ta (vint64m1_t op1, int64_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM64VInt64VISIVB_TA, sbc_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDBool)
// vuint8m1_t vsbc_vvm_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM8VUInt8VUVUVB_TA, sbc_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDBool)
// vuint8m1_t vsbc_vxm_uint8m1_ta (vuint8m1_t op1, uint8_t op2, vbool8_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM8VUInt8VUSUVB_TA, sbc_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDBool)
// vuint16m1_t vsbc_vvm_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM16VUInt16VUVUVB_TA, sbc_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDBool)
// vuint16m1_t vsbc_vxm_uint16m1_ta (vuint16m1_t op1, uint16_t op2, vbool16_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM16VUInt16VUSUVB_TA, sbc_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDBool)
// vuint32m1_t vsbc_vvm_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM32VUInt32VUVUVB_TA, sbc_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDBool)
// vuint32m1_t vsbc_vxm_uint32m1_ta (vuint32m1_t op1, uint32_t op2, vbool32_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM32VUInt32VUSUVB_TA, sbc_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDBool)
// vuint64m1_t vsbc_vvm_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVVM64VUInt64VUVUVB_TA, sbc_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDBool)
// vuint64m1_t vsbc_vxm_uint64m1_ta (vuint64m1_t op1, uint64_t op2, vbool64_t borrowin, size_t vl);
CUSTOM_OP_TYPE(SbcVXM64VUInt64VUSUVB_TA, sbc_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDBool)

// vint8m1_t vand_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VIVIVI_TU, and_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VIVISI_TU, and_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VIVIVI_TU, and_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VIVISI_TU, and_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VIVIVI_TU, and_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VIVISI_TU, and_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VIVIVI_TU, and_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VIVISI_TU, and_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VUVUVU_TU, and_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VUVUSU_TU, and_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VUVUVU_TU, and_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VUVUSU_TU, and_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VUVUVU_TU, and_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VUVUSU_TU, and_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VUVUVU_TU, and_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VUVUSU_TU, and_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VIVIVI_TU, or_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VIVISI_TU, or_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VIVIVI_TU, or_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VIVISI_TU, or_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VIVIVI_TU, or_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VIVISI_TU, or_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VIVIVI_TU, or_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VIVISI_TU, or_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VUVUVU_TU, or_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VUVUSU_TU, or_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VUVUVU_TU, or_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VUVUSU_TU, or_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VUVUVU_TU, or_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VUVUSU_TU, or_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VUVUVU_TU, or_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VUVUSU_TU, or_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VIVIVI_TU, xor_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VIVISI_TU, xor_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VIVIVI_TU, xor_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VIVISI_TU, xor_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VIVIVI_TU, xor_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VIVISI_TU, xor_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VIVIVI_TU, xor_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VIVISI_TU, xor_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VUVUVU_TU, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VUVUSU_TU, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VUVUVU_TU, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VUVUSU_TU, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VUVUVU_TU, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VUVUSU_TU, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VUVUVU_TU, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VUVUSU_TU, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vand_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VIVI_TA, and_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VISI_TA, and_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VIVI_TA, and_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VISI_TA, and_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VIVI_TA, and_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VISI_TA, and_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VIVI_TA, and_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VISI_TA, and_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VUVU_TA, and_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VUSU_TA, and_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VUVU_TA, and_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VUSU_TA, and_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VUVU_TA, and_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VUSU_TA, and_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VUVU_TA, and_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VUSU_TA, and_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VIVI_TA, or_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VISI_TA, or_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VIVI_TA, or_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VISI_TA, or_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VIVI_TA, or_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VISI_TA, or_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VIVI_TA, or_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VISI_TA, or_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VUVU_TA, or_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VUSU_TA, or_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VUVU_TA, or_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VUSU_TA, or_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VUVU_TA, or_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VUSU_TA, or_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VUVU_TA, or_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VUSU_TA, or_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VIVI_TA, xor_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VISI_TA, xor_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VIVI_TA, xor_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VISI_TA, xor_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VIVI_TA, xor_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VISI_TA, xor_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VIVI_TA, xor_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VISI_TA, xor_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VUVU_TA, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VUSU_TA, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VUVU_TA, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VUSU_TA, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VUVU_TA, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VUSU_TA, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VUVU_TA, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VUSU_TA, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vand_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VBVIVIVI_TUMA, and_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VBVIVISI_TUMA, and_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VBVIVIVI_TUMA, and_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VBVIVISI_TUMA, and_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VBVIVIVI_TUMA, and_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VBVIVISI_TUMA, and_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VBVIVIVI_TUMA, and_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VBVIVISI_TUMA, and_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VBVUVUVU_TUMA, and_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VBVUVUSU_TUMA, and_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VBVUVUVU_TUMA, and_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VBVUVUSU_TUMA, and_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VBVUVUVU_TUMA, and_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VBVUVUSU_TUMA, and_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VBVUVUVU_TUMA, and_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VBVUVUSU_TUMA, and_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VBVIVIVI_TUMA, or_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VBVIVISI_TUMA, or_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VBVIVIVI_TUMA, or_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VBVIVISI_TUMA, or_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VBVIVIVI_TUMA, or_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VBVIVISI_TUMA, or_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VBVIVIVI_TUMA, or_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VBVIVISI_TUMA, or_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VBVUVUVU_TUMA, or_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VBVUVUSU_TUMA, or_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VBVUVUVU_TUMA, or_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VBVUVUSU_TUMA, or_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VBVUVUVU_TUMA, or_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VBVUVUSU_TUMA, or_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VBVUVUVU_TUMA, or_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VBVUVUSU_TUMA, or_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VBVIVIVI_TUMA, xor_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VBVIVISI_TUMA, xor_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VBVIVIVI_TUMA, xor_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VBVIVISI_TUMA, xor_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VBVIVIVI_TUMA, xor_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VBVIVISI_TUMA, xor_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VBVIVIVI_TUMA, xor_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VBVIVISI_TUMA, xor_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VBVUVUVU_TUMA, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VBVUVUSU_TUMA, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VBVUVUVU_TUMA, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VBVUVUSU_TUMA, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VBVUVUVU_TUMA, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VBVUVUSU_TUMA, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VBVUVUVU_TUMA, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VBVUVUSU_TUMA, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vand_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VBVIVIVI_TUMU, and_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VBVIVISI_TUMU, and_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VBVIVIVI_TUMU, and_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VBVIVISI_TUMU, and_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VBVIVIVI_TUMU, and_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VBVIVISI_TUMU, and_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VBVIVIVI_TUMU, and_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VBVIVISI_TUMU, and_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VBVUVUVU_TUMU, and_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VBVUVUSU_TUMU, and_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VBVUVUVU_TUMU, and_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VBVUVUSU_TUMU, and_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VBVUVUVU_TUMU, and_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VBVUVUSU_TUMU, and_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VBVUVUVU_TUMU, and_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VBVUVUSU_TUMU, and_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VBVIVIVI_TUMU, or_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VBVIVISI_TUMU, or_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VBVIVIVI_TUMU, or_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VBVIVISI_TUMU, or_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VBVIVIVI_TUMU, or_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VBVIVISI_TUMU, or_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VBVIVIVI_TUMU, or_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VBVIVISI_TUMU, or_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VBVUVUVU_TUMU, or_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VBVUVUSU_TUMU, or_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VBVUVUVU_TUMU, or_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VBVUVUSU_TUMU, or_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VBVUVUVU_TUMU, or_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VBVUVUSU_TUMU, or_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VBVUVUVU_TUMU, or_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VBVUVUSU_TUMU, or_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VBVIVIVI_TUMU, xor_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VBVIVISI_TUMU, xor_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VBVIVIVI_TUMU, xor_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VBVIVISI_TUMU, xor_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VBVIVIVI_TUMU, xor_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VBVIVISI_TUMU, xor_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VBVIVIVI_TUMU, xor_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VBVIVISI_TUMU, xor_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VBVUVUVU_TUMU, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VBVUVUSU_TUMU, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VBVUVUVU_TUMU, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VBVUVUSU_TUMU, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VBVUVUVU_TUMU, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VBVUVUSU_TUMU, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VBVUVUVU_TUMU, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VBVUVUSU_TUMU, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vand_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VBVIVI_TAMA, and_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VBVISI_TAMA, and_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VBVIVI_TAMA, and_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VBVISI_TAMA, and_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VBVIVI_TAMA, and_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VBVISI_TAMA, and_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VBVIVI_TAMA, and_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VBVISI_TAMA, and_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VBVUVU_TAMA, and_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VBVUSU_TAMA, and_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VBVUVU_TAMA, and_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VBVUSU_TAMA, and_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VBVUVU_TAMA, and_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VBVUSU_TAMA, and_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VBVUVU_TAMA, and_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VBVUSU_TAMA, and_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VBVIVI_TAMA, or_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VBVISI_TAMA, or_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VBVIVI_TAMA, or_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VBVISI_TAMA, or_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VBVIVI_TAMA, or_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VBVISI_TAMA, or_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VBVIVI_TAMA, or_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VBVISI_TAMA, or_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VBVUVU_TAMA, or_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VBVUSU_TAMA, or_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VBVUVU_TAMA, or_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VBVUSU_TAMA, or_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VBVUVU_TAMA, or_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VBVUSU_TAMA, or_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VBVUVU_TAMA, or_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VBVUSU_TAMA, or_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VBVIVI_TAMA, xor_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VBVISI_TAMA, xor_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VBVIVI_TAMA, xor_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VBVISI_TAMA, xor_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VBVIVI_TAMA, xor_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VBVISI_TAMA, xor_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VBVIVI_TAMA, xor_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VBVISI_TAMA, xor_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VBVUVU_TAMA, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VBVUSU_TAMA, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VBVUVU_TAMA, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VBVUSU_TAMA, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VBVUVU_TAMA, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VBVUSU_TAMA, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VBVUVU_TAMA, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VBVUSU_TAMA, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vand_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VInt8VBVIVIVI_TAMU, and_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vand_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VInt8VBVIVISI_TAMU, and_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vand_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VInt16VBVIVIVI_TAMU, and_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vand_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VInt16VBVIVISI_TAMU, and_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vand_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VInt32VBVIVIVI_TAMU, and_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vand_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VInt32VBVIVISI_TAMU, and_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vand_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VInt64VBVIVIVI_TAMU, and_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vand_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VInt64VBVIVISI_TAMU, and_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vand_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV8VUInt8VBVUVUVU_TAMU, and_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vand_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX8VUInt8VBVUVUSU_TAMU, and_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vand_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV16VUInt16VBVUVUVU_TAMU, and_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vand_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX16VUInt16VBVUVUSU_TAMU, and_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vand_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV32VUInt32VBVUVUVU_TAMU, and_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vand_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX32VUInt32VBVUVUSU_TAMU, and_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vand_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVV64VUInt64VBVUVUVU_TAMU, and_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vand_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AndVX64VUInt64VBVUVUSU_TAMU, and_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vor_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VInt8VBVIVIVI_TAMU, or_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vor_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VInt8VBVIVISI_TAMU, or_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vor_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VInt16VBVIVIVI_TAMU, or_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vor_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VInt16VBVIVISI_TAMU, or_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vor_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VInt32VBVIVIVI_TAMU, or_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vor_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VInt32VBVIVISI_TAMU, or_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vor_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VInt64VBVIVIVI_TAMU, or_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vor_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VInt64VBVIVISI_TAMU, or_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vor_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV8VUInt8VBVUVUVU_TAMU, or_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vor_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX8VUInt8VBVUVUSU_TAMU, or_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vor_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV16VUInt16VBVUVUVU_TAMU, or_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vor_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX16VUInt16VBVUVUSU_TAMU, or_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vor_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV32VUInt32VBVUVUVU_TAMU, or_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vor_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX32VUInt32VBVUVUSU_TAMU, or_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vor_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVV64VUInt64VBVUVUVU_TAMU, or_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vor_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(OrVX64VUInt64VBVUVUSU_TAMU, or_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vxor_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VInt8VBVIVIVI_TAMU, xor_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vxor_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VInt8VBVIVISI_TAMU, xor_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vxor_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VInt16VBVIVIVI_TAMU, xor_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vxor_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VInt16VBVIVISI_TAMU, xor_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vxor_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VInt32VBVIVIVI_TAMU, xor_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vxor_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VInt32VBVIVISI_TAMU, xor_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vxor_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VInt64VBVIVIVI_TAMU, xor_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vxor_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VInt64VBVIVISI_TAMU, xor_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vxor_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV8VUInt8VBVUVUVU_TAMU, xor_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vxor_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX8VUInt8VBVUVUSU_TAMU, xor_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vxor_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV16VUInt16VBVUVUVU_TAMU, xor_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vxor_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX16VUInt16VBVUVUSU_TAMU, xor_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vxor_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV32VUInt32VBVUVUVU_TAMU, xor_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vxor_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX32VUInt32VBVUVUSU_TAMU, xor_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vxor_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVV64VUInt64VBVUVUVU_TAMU, xor_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vxor_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(XorVX64VUInt64VBVUVUSU_TAMU, xor_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsll_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VIVIVU_TU, sll_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VIVISL_TU, sll_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VIVIVU_TU, sll_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VIVISL_TU, sll_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VIVIVU_TU, sll_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VIVISL_TU, sll_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VIVIVU_TU, sll_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VIVISL_TU, sll_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VUVUVU_TU, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VUVUSL_TU, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VUVUVU_TU, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VUVUSL_TU, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VUVUVU_TU, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VUVUSL_TU, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VUVUVU_TU, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VUVUSL_TU, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VUVUVU_TU, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VUVUSL_TU, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VUVUVU_TU, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VUVUSL_TU, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VUVUVU_TU, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VUVUSL_TU, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VUVUVU_TU, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VUVUSL_TU, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VIVIVU_TU, sra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VIVISL_TU, sra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VIVIVU_TU, sra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VIVISL_TU, sra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VIVIVU_TU, sra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VIVISL_TU, sra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VIVIVU_TU, sra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VIVISL_TU, sra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarUIntXLen)
// vint8m1_t vsll_vv_int8m1_ta (vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VIVU_TA, sll_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_ta (vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VISL_TA, sll_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_ta (vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VIVU_TA, sll_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_ta (vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VISL_TA, sll_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_ta (vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VIVU_TA, sll_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_ta (vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VISL_TA, sll_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_ta (vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VIVU_TA, sll_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_ta (vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VISL_TA, sll_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VUVU_TA, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_ta (vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VUSL_TA, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VUVU_TA, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_ta (vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VUSL_TA, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VUVU_TA, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_ta (vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VUSL_TA, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VUVU_TA, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_ta (vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VUSL_TA, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VUVU_TA, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_ta (vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VUSL_TA, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VUVU_TA, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_ta (vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VUSL_TA, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VUVU_TA, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_ta (vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VUSL_TA, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VUVU_TA, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_ta (vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VUSL_TA, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_ta (vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VIVU_TA, sra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_ta (vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VISL_TA, sra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_ta (vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VIVU_TA, sra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_ta (vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VISL_TA, sra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_ta (vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VIVU_TA, sra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_ta (vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VISL_TA, sra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_ta (vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VIVU_TA, sra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_ta (vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VISL_TA, sra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarUIntXLen)
// vint8m1_t vsll_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VBVIVIVU_TUMA, sll_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VBVIVISL_TUMA, sll_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VBVIVIVU_TUMA, sll_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VBVIVISL_TUMA, sll_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VBVIVIVU_TUMA, sll_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VBVIVISL_TUMA, sll_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VBVIVIVU_TUMA, sll_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VBVIVISL_TUMA, sll_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VBVUVUVU_TUMA, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VBVUVUSL_TUMA, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VBVUVUVU_TUMA, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VBVUVUSL_TUMA, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VBVUVUVU_TUMA, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VBVUVUSL_TUMA, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VBVUVUVU_TUMA, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VBVUVUSL_TUMA, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VBVUVUVU_TUMA, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VBVUVUSL_TUMA, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VBVUVUVU_TUMA, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VBVUVUSL_TUMA, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VBVUVUVU_TUMA, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VBVUVUSL_TUMA, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VBVUVUVU_TUMA, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VBVUVUSL_TUMA, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VBVIVIVU_TUMA, sra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VBVIVISL_TUMA, sra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VBVIVIVU_TUMA, sra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VBVIVISL_TUMA, sra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VBVIVIVU_TUMA, sra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VBVIVISL_TUMA, sra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VBVIVIVU_TUMA, sra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VBVIVISL_TUMA, sra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vint8m1_t vsll_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VBVIVIVU_TUMU, sll_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VBVIVISL_TUMU, sll_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VBVIVIVU_TUMU, sll_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VBVIVISL_TUMU, sll_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VBVIVIVU_TUMU, sll_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VBVIVISL_TUMU, sll_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VBVIVIVU_TUMU, sll_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VBVIVISL_TUMU, sll_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VBVUVUVU_TUMU, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VBVUVUSL_TUMU, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VBVUVUVU_TUMU, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VBVUVUSL_TUMU, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VBVUVUVU_TUMU, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VBVUVUSL_TUMU, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VBVUVUVU_TUMU, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VBVUVUSL_TUMU, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VBVUVUVU_TUMU, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VBVUVUSL_TUMU, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VBVUVUVU_TUMU, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VBVUVUSL_TUMU, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VBVUVUVU_TUMU, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VBVUVUSL_TUMU, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VBVUVUVU_TUMU, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VBVUVUSL_TUMU, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VBVIVIVU_TUMU, sra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VBVIVISL_TUMU, sra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VBVIVIVU_TUMU, sra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VBVIVISL_TUMU, sra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VBVIVIVU_TUMU, sra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VBVIVISL_TUMU, sra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VBVIVIVU_TUMU, sra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VBVIVISL_TUMU, sra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vint8m1_t vsll_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VBVIVU_TAMA, sll_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VBVISL_TAMA, sll_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VBVIVU_TAMA, sll_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VBVISL_TAMA, sll_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VBVIVU_TAMA, sll_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VBVISL_TAMA, sll_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VBVIVU_TAMA, sll_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VBVISL_TAMA, sll_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VBVUVU_TAMA, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VBVUSL_TAMA, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VBVUVU_TAMA, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VBVUSL_TAMA, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VBVUVU_TAMA, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VBVUSL_TAMA, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VBVUVU_TAMA, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VBVUSL_TAMA, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VBVUVU_TAMA, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VBVUSL_TAMA, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VBVUVU_TAMA, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VBVUSL_TAMA, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VBVUVU_TAMA, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VBVUSL_TAMA, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VBVUVU_TAMA, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VBVUSL_TAMA, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VBVIVU_TAMA, sra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VBVISL_TAMA, sra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VBVIVU_TAMA, sra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VBVISL_TAMA, sra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VBVIVU_TAMA, sra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VBVISL_TAMA, sra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VBVIVU_TAMA, sra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VBVISL_TAMA, sra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarUIntXLen)
// vint8m1_t vsll_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VInt8VBVIVIVU_TAMU, sll_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsll_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VInt8VBVIVISL_TAMU, sll_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsll_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VInt16VBVIVIVU_TAMU, sll_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsll_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VInt16VBVIVISL_TAMU, sll_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsll_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VInt32VBVIVIVU_TAMU, sll_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsll_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VInt32VBVIVISL_TAMU, sll_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsll_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VInt64VBVIVIVU_TAMU, sll_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsll_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VInt64VBVIVISL_TAMU, sll_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vsll_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV8VUInt8VBVUVUVU_TAMU, sll_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsll_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX8VUInt8VBVUVUSL_TAMU, sll_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsll_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV16VUInt16VBVUVUVU_TAMU, sll_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsll_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX16VUInt16VBVUVUSL_TAMU, sll_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsll_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV32VUInt32VBVUVUVU_TAMU, sll_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsll_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX32VUInt32VBVUVUSL_TAMU, sll_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsll_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVV64VUInt64VBVUVUVU_TAMU, sll_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsll_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SllVX64VUInt64VBVUVUSL_TAMU, sll_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vuint8m1_t vsrl_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV8VUInt8VBVUVUVU_TAMU, srl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsrl_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX8VUInt8VBVUVUSL_TAMU, srl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vsrl_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV16VUInt16VBVUVUVU_TAMU, srl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsrl_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX16VUInt16VBVUVUSL_TAMU, srl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vsrl_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV32VUInt32VBVUVUVU_TAMU, srl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsrl_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX32VUInt32VBVUVUSL_TAMU, srl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vsrl_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVV64VUInt64VBVUVUVU_TAMU, srl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsrl_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SrlVX64VUInt64VBVUVUSL_TAMU, srl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vsra_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV8VInt8VBVIVIVU_TAMU, sra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vsra_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX8VInt8VBVIVISL_TAMU, sra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vsra_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV16VInt16VBVIVIVU_TAMU, sra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vsra_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX16VInt16VBVIVISL_TAMU, sra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vsra_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV32VInt32VBVIVIVU_TAMU, sra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vsra_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX32VInt32VBVIVISL_TAMU, sra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vsra_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVV64VInt64VBVIVIVU_TAMU, sra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vsra_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SraVX64VInt64VBVIVISL_TAMU, sra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)

// vuint8m1_t vnsrl_wv_uint8m1_tu (vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VUVUVU_TU, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_tu (vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VUVUSL_TU, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_tu (vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VUVUVU_TU, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_tu (vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VUVUSL_TU, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_tu (vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VUVUVU_TU, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_tu (vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VUVUSL_TU, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_tu (vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VIVIVU_TU, nsra_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_tu (vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VIVISL_TU, nsra_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_tu (vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VIVIVU_TU, nsra_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_tu (vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VIVISL_TU, nsra_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_tu (vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VIVIVU_TU, nsra_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_tu (vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VIVISL_TU, nsra_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnsrl_wv_uint8m1_ta (vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VUVU_TA, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 2, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_ta (vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VUSL_TA, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 2, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_ta (vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VUVU_TA, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 2, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_ta (vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VUSL_TA, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 2, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_ta (vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VUVU_TA, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 2, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_ta (vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VUSL_TA, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 2, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_ta (vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VIVU_TA, nsra_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 2, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_ta (vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VISL_TA, nsra_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 2, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_ta (vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VIVU_TA, nsra_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 2, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_ta (vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VISL_TA, nsra_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 2, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_ta (vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VIVU_TA, nsra_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 2, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_ta (vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VISL_TA, nsra_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 2, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnsrl_wv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VBVUVUVU_TUMA, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VBVUVUSL_TUMA, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VBVUVUVU_TUMA, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VBVUVUSL_TUMA, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VBVUVUVU_TUMA, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VBVUVUSL_TUMA, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VBVIVIVU_TUMA, nsra_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VBVIVISL_TUMA, nsra_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VBVIVIVU_TUMA, nsra_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VBVIVISL_TUMA, nsra_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VBVIVIVU_TUMA, nsra_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VBVIVISL_TUMA, nsra_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnsrl_wv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VBVUVUVU_TUMU, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VBVUVUSL_TUMU, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VBVUVUVU_TUMU, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VBVUVUSL_TUMU, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VBVUVUVU_TUMU, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VBVUVUSL_TUMU, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VBVIVIVU_TUMU, nsra_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VBVIVISL_TUMU, nsra_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VBVIVIVU_TUMU, nsra_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VBVIVISL_TUMU, nsra_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VBVIVIVU_TUMU, nsra_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VBVIVISL_TUMU, nsra_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnsrl_wv_uint8m1_tama (vbool8_t mask, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VBVUVU_TAMA, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_tama (vbool8_t mask, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VBVUSL_TAMA, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_tama (vbool16_t mask, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VBVUVU_TAMA, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_tama (vbool16_t mask, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VBVUSL_TAMA, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_tama (vbool32_t mask, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VBVUVU_TAMA, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_tama (vbool32_t mask, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VBVUSL_TAMA, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_tama (vbool8_t mask, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VBVIVU_TAMA, nsra_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_tama (vbool8_t mask, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VBVISL_TAMA, nsra_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_tama (vbool16_t mask, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VBVIVU_TAMA, nsra_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_tama (vbool16_t mask, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VBVISL_TAMA, nsra_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_tama (vbool32_t mask, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VBVIVU_TAMA, nsra_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_tama (vbool32_t mask, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VBVISL_TAMA, nsra_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnsrl_wv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV8VUInt8VBVUVUVU_TAMU, nsrl_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnsrl_wx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX8VUInt8VBVUVUSL_TAMU, nsrl_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnsrl_wv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV16VUInt16VBVUVUVU_TAMU, nsrl_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnsrl_wx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX16VUInt16VBVUVUSL_TAMU, nsrl_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnsrl_wv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWV32VUInt32VBVUVUVU_TAMU, nsrl_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnsrl_wx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsrlWX32VUInt32VBVUVUSL_TAMU, nsrl_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnsra_wv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV8VInt8VBVIVIVU_TAMU, nsra_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnsra_wx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX8VInt8VBVIVISL_TAMU, nsra_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnsra_wv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV16VInt16VBVIVIVU_TAMU, nsra_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnsra_wx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX16VInt16VBVIVISL_TAMU, nsra_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnsra_wv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWV32VInt32VBVIVIVU_TAMU, nsra_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnsra_wx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NsraWX32VInt32VBVIVISL_TAMU, nsra_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)

// vbool8_t vmseq_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV8VBoolVBVIVI_MA, mseq_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmseq_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX8VBoolVBVISI_MA, mseq_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmseq_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV16VBoolVBVIVI_MA, mseq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmseq_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX16VBoolVBVISI_MA, mseq_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmseq_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV32VBoolVBVIVI_MA, mseq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmseq_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX32VBoolVBVISI_MA, mseq_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmseq_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV64VBoolVBVIVI_MA, mseq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmseq_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX64VBoolVBVISI_MA, mseq_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmseq_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV8VBoolVBVUVU_MA, mseq_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmseq_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX8VBoolVBVUSU_MA, mseq_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmseq_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV16VBoolVBVUVU_MA, mseq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmseq_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX16VBoolVBVUSU_MA, mseq_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmseq_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV32VBoolVBVUVU_MA, mseq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmseq_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX32VBoolVBVUSU_MA, mseq_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmseq_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV64VBoolVBVUVU_MA, mseq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmseq_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX64VBoolVBVUSU_MA, mseq_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsne_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV8VBoolVBVIVI_MA, msne_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsne_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX8VBoolVBVISI_MA, msne_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsne_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV16VBoolVBVIVI_MA, msne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsne_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX16VBoolVBVISI_MA, msne_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsne_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV32VBoolVBVIVI_MA, msne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsne_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX32VBoolVBVISI_MA, msne_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsne_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV64VBoolVBVIVI_MA, msne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsne_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX64VBoolVBVISI_MA, msne_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsne_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV8VBoolVBVUVU_MA, msne_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsne_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX8VBoolVBVUSU_MA, msne_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsne_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV16VBoolVBVUVU_MA, msne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsne_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX16VBoolVBVUSU_MA, msne_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsne_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV32VBoolVBVUVU_MA, msne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsne_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX32VBoolVBVUSU_MA, msne_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsne_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV64VBoolVBVUVU_MA, msne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsne_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX64VBoolVBVUSU_MA, msne_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmslt_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV8VBoolVBVIVI_MA, mslt_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmslt_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX8VBoolVBVISI_MA, mslt_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmslt_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV16VBoolVBVIVI_MA, mslt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmslt_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX16VBoolVBVISI_MA, mslt_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmslt_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV32VBoolVBVIVI_MA, mslt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmslt_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX32VBoolVBVISI_MA, mslt_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmslt_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV64VBoolVBVIVI_MA, mslt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmslt_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX64VBoolVBVISI_MA, mslt_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsltu_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV8VBoolVBVUVU_MA, msltu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsltu_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX8VBoolVBVUSU_MA, msltu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsltu_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV16VBoolVBVUVU_MA, msltu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsltu_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX16VBoolVBVUSU_MA, msltu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsltu_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV32VBoolVBVUVU_MA, msltu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsltu_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX32VBoolVBVUSU_MA, msltu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsltu_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV64VBoolVBVUVU_MA, msltu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsltu_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX64VBoolVBVUSU_MA, msltu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsle_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV8VBoolVBVIVI_MA, msle_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsle_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX8VBoolVBVISI_MA, msle_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsle_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV16VBoolVBVIVI_MA, msle_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsle_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX16VBoolVBVISI_MA, msle_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsle_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV32VBoolVBVIVI_MA, msle_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsle_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX32VBoolVBVISI_MA, msle_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsle_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV64VBoolVBVIVI_MA, msle_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsle_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX64VBoolVBVISI_MA, msle_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsleu_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV8VBoolVBVUVU_MA, msleu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsleu_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX8VBoolVBVUSU_MA, msleu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsleu_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV16VBoolVBVUVU_MA, msleu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsleu_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX16VBoolVBVUSU_MA, msleu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsleu_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV32VBoolVBVUVU_MA, msleu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsleu_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX32VBoolVBVUSU_MA, msleu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsleu_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV64VBoolVBVUVU_MA, msleu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsleu_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX64VBoolVBVUSU_MA, msleu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsgt_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV8VBoolVBVIVI_MA, msgt_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsgt_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX8VBoolVBVISI_MA, msgt_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsgt_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV16VBoolVBVIVI_MA, msgt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsgt_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX16VBoolVBVISI_MA, msgt_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsgt_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV32VBoolVBVIVI_MA, msgt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsgt_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX32VBoolVBVISI_MA, msgt_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsgt_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV64VBoolVBVIVI_MA, msgt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsgt_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX64VBoolVBVISI_MA, msgt_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsgtu_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV8VBoolVBVUVU_MA, msgtu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsgtu_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX8VBoolVBVUSU_MA, msgtu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsgtu_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV16VBoolVBVUVU_MA, msgtu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsgtu_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX16VBoolVBVUSU_MA, msgtu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsgtu_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV32VBoolVBVUVU_MA, msgtu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsgtu_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX32VBoolVBVUSU_MA, msgtu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsgtu_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV64VBoolVBVUVU_MA, msgtu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsgtu_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX64VBoolVBVUSU_MA, msgtu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsge_vv_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV8VBoolVBVIVI_MA, msge_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsge_vx_int8m1_b8_ma (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX8VBoolVBVISI_MA, msge_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsge_vv_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV16VBoolVBVIVI_MA, msge_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsge_vx_int16m1_b16_ma (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX16VBoolVBVISI_MA, msge_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsge_vv_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV32VBoolVBVIVI_MA, msge_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsge_vx_int32m1_b32_ma (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX32VBoolVBVISI_MA, msge_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsge_vv_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV64VBoolVBVIVI_MA, msge_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsge_vx_int64m1_b64_ma (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX64VBoolVBVISI_MA, msge_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsgeu_vv_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV8VBoolVBVUVU_MA, msgeu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsgeu_vx_uint8m1_b8_ma (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX8VBoolVBVUSU_MA, msgeu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsgeu_vv_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV16VBoolVBVUVU_MA, msgeu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsgeu_vx_uint16m1_b16_ma (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX16VBoolVBVUSU_MA, msgeu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsgeu_vv_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV32VBoolVBVUVU_MA, msgeu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsgeu_vx_uint32m1_b32_ma (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX32VBoolVBVUSU_MA, msgeu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsgeu_vv_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV64VBoolVBVUVU_MA, msgeu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsgeu_vx_uint64m1_b64_ma (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX64VBoolVBVUSU_MA, msgeu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmseq_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV8VBoolVBVBVIVI_MU, mseq_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmseq_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX8VBoolVBVBVISI_MU, mseq_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmseq_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV16VBoolVBVBVIVI_MU, mseq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmseq_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX16VBoolVBVBVISI_MU, mseq_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmseq_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV32VBoolVBVBVIVI_MU, mseq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmseq_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX32VBoolVBVBVISI_MU, mseq_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmseq_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV64VBoolVBVBVIVI_MU, mseq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmseq_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX64VBoolVBVBVISI_MU, mseq_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmseq_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV8VBoolVBVBVUVU_MU, mseq_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmseq_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX8VBoolVBVBVUSU_MU, mseq_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmseq_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV16VBoolVBVBVUVU_MU, mseq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmseq_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX16VBoolVBVBVUSU_MU, mseq_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmseq_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV32VBoolVBVBVUVU_MU, mseq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmseq_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX32VBoolVBVBVUSU_MU, mseq_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmseq_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVV64VBoolVBVBVUVU_MU, mseq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmseq_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MseqVX64VBoolVBVBVUSU_MU, mseq_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsne_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV8VBoolVBVBVIVI_MU, msne_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsne_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX8VBoolVBVBVISI_MU, msne_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsne_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV16VBoolVBVBVIVI_MU, msne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsne_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX16VBoolVBVBVISI_MU, msne_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsne_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV32VBoolVBVBVIVI_MU, msne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsne_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX32VBoolVBVBVISI_MU, msne_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsne_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV64VBoolVBVBVIVI_MU, msne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsne_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX64VBoolVBVBVISI_MU, msne_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsne_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV8VBoolVBVBVUVU_MU, msne_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsne_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX8VBoolVBVBVUSU_MU, msne_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsne_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV16VBoolVBVBVUVU_MU, msne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsne_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX16VBoolVBVBVUSU_MU, msne_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsne_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV32VBoolVBVBVUVU_MU, msne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsne_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX32VBoolVBVBVUSU_MU, msne_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsne_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVV64VBoolVBVBVUVU_MU, msne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsne_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsneVX64VBoolVBVBVUSU_MU, msne_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmslt_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV8VBoolVBVBVIVI_MU, mslt_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmslt_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX8VBoolVBVBVISI_MU, mslt_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmslt_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV16VBoolVBVBVIVI_MU, mslt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmslt_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX16VBoolVBVBVISI_MU, mslt_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmslt_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV32VBoolVBVBVIVI_MU, mslt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmslt_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX32VBoolVBVBVISI_MU, mslt_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmslt_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVV64VBoolVBVBVIVI_MU, mslt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmslt_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltVX64VBoolVBVBVISI_MU, mslt_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsltu_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV8VBoolVBVBVUVU_MU, msltu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsltu_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX8VBoolVBVBVUSU_MU, msltu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsltu_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV16VBoolVBVBVUVU_MU, msltu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsltu_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX16VBoolVBVBVUSU_MU, msltu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsltu_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV32VBoolVBVBVUVU_MU, msltu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsltu_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX32VBoolVBVBVUSU_MU, msltu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsltu_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVV64VBoolVBVBVUVU_MU, msltu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsltu_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsltuVX64VBoolVBVBVUSU_MU, msltu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsle_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV8VBoolVBVBVIVI_MU, msle_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsle_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX8VBoolVBVBVISI_MU, msle_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsle_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV16VBoolVBVBVIVI_MU, msle_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsle_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX16VBoolVBVBVISI_MU, msle_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsle_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV32VBoolVBVBVIVI_MU, msle_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsle_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX32VBoolVBVBVISI_MU, msle_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsle_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVV64VBoolVBVBVIVI_MU, msle_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsle_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleVX64VBoolVBVBVISI_MU, msle_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsleu_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV8VBoolVBVBVUVU_MU, msleu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsleu_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX8VBoolVBVBVUSU_MU, msleu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsleu_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV16VBoolVBVBVUVU_MU, msleu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsleu_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX16VBoolVBVBVUSU_MU, msleu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsleu_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV32VBoolVBVBVUVU_MU, msleu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsleu_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX32VBoolVBVBVUSU_MU, msleu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsleu_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVV64VBoolVBVBVUVU_MU, msleu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsleu_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsleuVX64VBoolVBVBVUSU_MU, msleu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsgt_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV8VBoolVBVBVIVI_MU, msgt_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsgt_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX8VBoolVBVBVISI_MU, msgt_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsgt_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV16VBoolVBVBVIVI_MU, msgt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsgt_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX16VBoolVBVBVISI_MU, msgt_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsgt_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV32VBoolVBVBVIVI_MU, msgt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsgt_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX32VBoolVBVBVISI_MU, msgt_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsgt_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVV64VBoolVBVBVIVI_MU, msgt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsgt_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtVX64VBoolVBVBVISI_MU, msgt_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsgtu_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV8VBoolVBVBVUVU_MU, msgtu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsgtu_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX8VBoolVBVBVUSU_MU, msgtu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsgtu_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV16VBoolVBVBVUVU_MU, msgtu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsgtu_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX16VBoolVBVBVUSU_MU, msgtu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsgtu_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV32VBoolVBVBVUVU_MU, msgtu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsgtu_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX32VBoolVBVBVUSU_MU, msgtu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsgtu_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVV64VBoolVBVBVUVU_MU, msgtu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsgtu_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgtuVX64VBoolVBVBVUSU_MU, msgtu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)
// vbool8_t vmsge_vv_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV8VBoolVBVBVIVI_MU, msge_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, OneDInt8)
// vbool8_t vmsge_vx_int8m1_b8_mu (vbool8_t mask, vbool8_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX8VBoolVBVBVISI_MU, msge_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt8, ScalarInt8)
// vbool16_t vmsge_vv_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV16VBoolVBVBVIVI_MU, msge_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, OneDInt16)
// vbool16_t vmsge_vx_int16m1_b16_mu (vbool16_t mask, vbool16_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX16VBoolVBVBVISI_MU, msge_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt16, ScalarInt16)
// vbool32_t vmsge_vv_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV32VBoolVBVBVIVI_MU, msge_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, OneDInt32)
// vbool32_t vmsge_vx_int32m1_b32_mu (vbool32_t mask, vbool32_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX32VBoolVBVBVISI_MU, msge_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt32, ScalarInt32)
// vbool64_t vmsge_vv_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVV64VBoolVBVBVIVI_MU, msge_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, OneDInt64)
// vbool64_t vmsge_vx_int64m1_b64_mu (vbool64_t mask, vbool64_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeVX64VBoolVBVBVISI_MU, msge_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDInt64, ScalarInt64)
// vbool8_t vmsgeu_vv_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV8VBoolVBVBVUVU_MU, msgeu_vv, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, OneDUInt8)
// vbool8_t vmsgeu_vx_uint8m1_b8_mu (vbool8_t mask, vbool8_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX8VBoolVBVBVUSU_MU, msgeu_vx, 8, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt8, ScalarUInt8)
// vbool16_t vmsgeu_vv_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV16VBoolVBVBVUVU_MU, msgeu_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, OneDUInt16)
// vbool16_t vmsgeu_vx_uint16m1_b16_mu (vbool16_t mask, vbool16_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX16VBoolVBVBVUSU_MU, msgeu_vx, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt16, ScalarUInt16)
// vbool32_t vmsgeu_vv_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV32VBoolVBVBVUVU_MU, msgeu_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, OneDUInt32)
// vbool32_t vmsgeu_vx_uint32m1_b32_mu (vbool32_t mask, vbool32_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX32VBoolVBVBVUSU_MU, msgeu_vx, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt32, ScalarUInt32)
// vbool64_t vmsgeu_vv_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVV64VBoolVBVBVUVU_MU, msgeu_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, OneDUInt64)
// vbool64_t vmsgeu_vx_uint64m1_b64_mu (vbool64_t mask, vbool64_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MsgeuVX64VBoolVBVBVUSU_MU, msgeu_vx, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDUInt64, ScalarUInt64)

// vint8m1_t vmin_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VIVIVI_TU, min_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VIVISI_TU, min_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VIVIVI_TU, min_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VIVISI_TU, min_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VIVIVI_TU, min_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VIVISI_TU, min_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VIVIVI_TU, min_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VIVISI_TU, min_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VUVUVU_TU, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VUVUSU_TU, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VUVUVU_TU, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VUVUSU_TU, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VUVUVU_TU, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VUVUSU_TU, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VUVUVU_TU, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VUVUSU_TU, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VIVIVI_TU, max_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VIVISI_TU, max_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VIVIVI_TU, max_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VIVISI_TU, max_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VIVIVI_TU, max_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VIVISI_TU, max_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VIVIVI_TU, max_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VIVISI_TU, max_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VUVUVU_TU, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VUVUSU_TU, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VUVUVU_TU, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VUVUSU_TU, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VUVUVU_TU, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VUVUSU_TU, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VUVUVU_TU, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VUVUSU_TU, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmin_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VIVI_TA, min_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VISI_TA, min_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VIVI_TA, min_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VISI_TA, min_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VIVI_TA, min_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VISI_TA, min_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VIVI_TA, min_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VISI_TA, min_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VUVU_TA, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VUSU_TA, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VUVU_TA, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VUSU_TA, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VUVU_TA, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VUSU_TA, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VUVU_TA, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VUSU_TA, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VIVI_TA, max_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VISI_TA, max_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VIVI_TA, max_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VISI_TA, max_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VIVI_TA, max_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VISI_TA, max_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VIVI_TA, max_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VISI_TA, max_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VUVU_TA, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VUSU_TA, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VUVU_TA, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VUSU_TA, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VUVU_TA, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VUSU_TA, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VUVU_TA, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VUSU_TA, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vmin_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VBVIVIVI_TUMA, min_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VBVIVISI_TUMA, min_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VBVIVIVI_TUMA, min_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VBVIVISI_TUMA, min_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VBVIVIVI_TUMA, min_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VBVIVISI_TUMA, min_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VBVIVIVI_TUMA, min_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VBVIVISI_TUMA, min_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VBVUVUVU_TUMA, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VBVUVUSU_TUMA, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VBVUVUVU_TUMA, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VBVUVUSU_TUMA, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VBVUVUVU_TUMA, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VBVUVUSU_TUMA, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VBVUVUVU_TUMA, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VBVUVUSU_TUMA, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VBVIVIVI_TUMA, max_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VBVIVISI_TUMA, max_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VBVIVIVI_TUMA, max_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VBVIVISI_TUMA, max_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VBVIVIVI_TUMA, max_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VBVIVISI_TUMA, max_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VBVIVIVI_TUMA, max_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VBVIVISI_TUMA, max_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VBVUVUVU_TUMA, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VBVUVUSU_TUMA, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VBVUVUVU_TUMA, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VBVUVUSU_TUMA, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VBVUVUVU_TUMA, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VBVUVUSU_TUMA, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VBVUVUVU_TUMA, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VBVUVUSU_TUMA, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmin_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VBVIVIVI_TUMU, min_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VBVIVISI_TUMU, min_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VBVIVIVI_TUMU, min_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VBVIVISI_TUMU, min_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VBVIVIVI_TUMU, min_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VBVIVISI_TUMU, min_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VBVIVIVI_TUMU, min_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VBVIVISI_TUMU, min_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VBVUVUVU_TUMU, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VBVUVUSU_TUMU, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VBVUVUVU_TUMU, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VBVUVUSU_TUMU, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VBVUVUVU_TUMU, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VBVUVUSU_TUMU, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VBVUVUVU_TUMU, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VBVUVUSU_TUMU, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VBVIVIVI_TUMU, max_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VBVIVISI_TUMU, max_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VBVIVIVI_TUMU, max_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VBVIVISI_TUMU, max_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VBVIVIVI_TUMU, max_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VBVIVISI_TUMU, max_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VBVIVIVI_TUMU, max_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VBVIVISI_TUMU, max_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VBVUVUVU_TUMU, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VBVUVUSU_TUMU, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VBVUVUVU_TUMU, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VBVUVUSU_TUMU, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VBVUVUVU_TUMU, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VBVUVUSU_TUMU, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VBVUVUVU_TUMU, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VBVUVUSU_TUMU, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmin_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VBVIVI_TAMA, min_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VBVISI_TAMA, min_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VBVIVI_TAMA, min_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VBVISI_TAMA, min_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VBVIVI_TAMA, min_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VBVISI_TAMA, min_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VBVIVI_TAMA, min_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VBVISI_TAMA, min_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VBVUVU_TAMA, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VBVUSU_TAMA, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VBVUVU_TAMA, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VBVUSU_TAMA, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VBVUVU_TAMA, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VBVUSU_TAMA, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VBVUVU_TAMA, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VBVUSU_TAMA, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VBVIVI_TAMA, max_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VBVISI_TAMA, max_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VBVIVI_TAMA, max_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VBVISI_TAMA, max_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VBVIVI_TAMA, max_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VBVISI_TAMA, max_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VBVIVI_TAMA, max_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VBVISI_TAMA, max_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VBVUVU_TAMA, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VBVUSU_TAMA, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VBVUVU_TAMA, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VBVUSU_TAMA, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VBVUVU_TAMA, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VBVUSU_TAMA, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VBVUVU_TAMA, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VBVUSU_TAMA, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vmin_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV8VInt8VBVIVIVI_TAMU, min_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmin_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX8VInt8VBVIVISI_TAMU, min_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmin_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV16VInt16VBVIVIVI_TAMU, min_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmin_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX16VInt16VBVIVISI_TAMU, min_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmin_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV32VInt32VBVIVIVI_TAMU, min_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmin_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX32VInt32VBVIVISI_TAMU, min_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmin_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVV64VInt64VBVIVIVI_TAMU, min_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmin_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinVX64VInt64VBVIVISI_TAMU, min_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vminu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV8VUInt8VBVUVUVU_TAMU, minu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vminu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX8VUInt8VBVUVUSU_TAMU, minu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vminu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV16VUInt16VBVUVUVU_TAMU, minu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vminu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX16VUInt16VBVUVUSU_TAMU, minu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vminu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV32VUInt32VBVUVUVU_TAMU, minu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vminu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX32VUInt32VBVUVUSU_TAMU, minu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vminu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVV64VUInt64VBVUVUVU_TAMU, minu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vminu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MinuVX64VUInt64VBVUVUSU_TAMU, minu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmax_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV8VInt8VBVIVIVI_TAMU, max_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmax_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX8VInt8VBVIVISI_TAMU, max_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmax_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV16VInt16VBVIVIVI_TAMU, max_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmax_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX16VInt16VBVIVISI_TAMU, max_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmax_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV32VInt32VBVIVIVI_TAMU, max_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmax_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX32VInt32VBVIVISI_TAMU, max_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmax_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVV64VInt64VBVIVIVI_TAMU, max_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmax_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxVX64VInt64VBVIVISI_TAMU, max_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmaxu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV8VUInt8VBVUVUVU_TAMU, maxu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmaxu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX8VUInt8VBVUVUSU_TAMU, maxu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmaxu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV16VUInt16VBVUVUVU_TAMU, maxu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmaxu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX16VUInt16VBVUVUSU_TAMU, maxu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmaxu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV32VUInt32VBVUVUVU_TAMU, maxu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmaxu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX32VUInt32VBVUVUSU_TAMU, maxu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmaxu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVV64VUInt64VBVUVUVU_TAMU, maxu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmaxu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MaxuVX64VUInt64VBVUVUSU_TAMU, maxu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vmul_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VIVIVI_TU, mul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VIVISI_TU, mul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VIVIVI_TU, mul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VIVISI_TU, mul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VIVIVI_TU, mul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VIVISI_TU, mul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VIVIVI_TU, mul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VIVISI_TU, mul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VUVUVU_TU, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VUVUSU_TU, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VUVUVU_TU, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VUVUSU_TU, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VUVUVU_TU, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VUVUSU_TU, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VUVUVU_TU, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VUVUSU_TU, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VIVIVI_TU, mulh_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VIVISI_TU, mulh_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VIVIVI_TU, mulh_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VIVISI_TU, mulh_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VIVIVI_TU, mulh_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VIVISI_TU, mulh_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VIVIVI_TU, mulh_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VIVISI_TU, mulh_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VUVUVU_TU, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VUVUSU_TU, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VUVUVU_TU, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VUVUSU_TU, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VUVUVU_TU, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VUVUSU_TU, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VUVUVU_TU, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VUVUSU_TU, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VIVIVU_TU, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VIVISU_TU, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VIVIVU_TU, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VIVISU_TU, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VIVIVU_TU, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VIVISU_TU, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VIVIVU_TU, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VIVISU_TU, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarUInt64)
// vint8m1_t vmul_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VIVI_TA, mul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VISI_TA, mul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VIVI_TA, mul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VISI_TA, mul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VIVI_TA, mul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VISI_TA, mul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VIVI_TA, mul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VISI_TA, mul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VUVU_TA, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VUSU_TA, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VUVU_TA, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VUSU_TA, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VUVU_TA, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VUSU_TA, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VUVU_TA, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VUSU_TA, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VIVI_TA, mulh_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VISI_TA, mulh_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VIVI_TA, mulh_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VISI_TA, mulh_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VIVI_TA, mulh_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VISI_TA, mulh_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VIVI_TA, mulh_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VISI_TA, mulh_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VUVU_TA, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VUSU_TA, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VUVU_TA, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VUSU_TA, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VUVU_TA, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VUSU_TA, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VUVU_TA, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VUSU_TA, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_ta (vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VIVU_TA, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_ta (vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VISU_TA, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_ta (vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VIVU_TA, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_ta (vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VISU_TA, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_ta (vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VIVU_TA, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_ta (vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VISU_TA, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_ta (vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VIVU_TA, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_ta (vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VISU_TA, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarUInt64)
// vint8m1_t vmul_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VBVIVIVI_TUMA, mul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VBVIVISI_TUMA, mul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VBVIVIVI_TUMA, mul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VBVIVISI_TUMA, mul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VBVIVIVI_TUMA, mul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VBVIVISI_TUMA, mul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VBVIVIVI_TUMA, mul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VBVIVISI_TUMA, mul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VBVUVUVU_TUMA, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VBVUVUSU_TUMA, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VBVUVUVU_TUMA, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VBVUVUSU_TUMA, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VBVUVUVU_TUMA, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VBVUVUSU_TUMA, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VBVUVUVU_TUMA, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VBVUVUSU_TUMA, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VBVIVIVI_TUMA, mulh_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VBVIVISI_TUMA, mulh_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VBVIVIVI_TUMA, mulh_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VBVIVISI_TUMA, mulh_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VBVIVIVI_TUMA, mulh_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VBVIVISI_TUMA, mulh_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VBVIVIVI_TUMA, mulh_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VBVIVISI_TUMA, mulh_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VBVUVUVU_TUMA, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VBVUVUSU_TUMA, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VBVUVUVU_TUMA, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VBVUVUSU_TUMA, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VBVUVUVU_TUMA, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VBVUVUSU_TUMA, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VBVUVUVU_TUMA, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VBVUVUSU_TUMA, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VBVIVIVU_TUMA, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VBVIVISU_TUMA, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VBVIVIVU_TUMA, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VBVIVISU_TUMA, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VBVIVIVU_TUMA, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VBVIVISU_TUMA, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VBVIVIVU_TUMA, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VBVIVISU_TUMA, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt64)
// vint8m1_t vmul_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VBVIVIVI_TUMU, mul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VBVIVISI_TUMU, mul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VBVIVIVI_TUMU, mul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VBVIVISI_TUMU, mul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VBVIVIVI_TUMU, mul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VBVIVISI_TUMU, mul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VBVIVIVI_TUMU, mul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VBVIVISI_TUMU, mul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VBVUVUVU_TUMU, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VBVUVUSU_TUMU, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VBVUVUVU_TUMU, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VBVUVUSU_TUMU, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VBVUVUVU_TUMU, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VBVUVUSU_TUMU, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VBVUVUVU_TUMU, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VBVUVUSU_TUMU, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VBVIVIVI_TUMU, mulh_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VBVIVISI_TUMU, mulh_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VBVIVIVI_TUMU, mulh_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VBVIVISI_TUMU, mulh_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VBVIVIVI_TUMU, mulh_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VBVIVISI_TUMU, mulh_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VBVIVIVI_TUMU, mulh_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VBVIVISI_TUMU, mulh_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VBVUVUVU_TUMU, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VBVUVUSU_TUMU, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VBVUVUVU_TUMU, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VBVUVUSU_TUMU, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VBVUVUVU_TUMU, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VBVUVUSU_TUMU, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VBVUVUVU_TUMU, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VBVUVUSU_TUMU, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VBVIVIVU_TUMU, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VBVIVISU_TUMU, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VBVIVIVU_TUMU, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VBVIVISU_TUMU, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VBVIVIVU_TUMU, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VBVIVISU_TUMU, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VBVIVIVU_TUMU, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VBVIVISU_TUMU, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt64)
// vint8m1_t vmul_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VBVIVI_TAMA, mul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VBVISI_TAMA, mul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VBVIVI_TAMA, mul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VBVISI_TAMA, mul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VBVIVI_TAMA, mul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VBVISI_TAMA, mul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VBVIVI_TAMA, mul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VBVISI_TAMA, mul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VBVUVU_TAMA, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VBVUSU_TAMA, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VBVUVU_TAMA, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VBVUSU_TAMA, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VBVUVU_TAMA, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VBVUSU_TAMA, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VBVUVU_TAMA, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VBVUSU_TAMA, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VBVIVI_TAMA, mulh_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VBVISI_TAMA, mulh_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VBVIVI_TAMA, mulh_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VBVISI_TAMA, mulh_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VBVIVI_TAMA, mulh_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VBVISI_TAMA, mulh_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VBVIVI_TAMA, mulh_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VBVISI_TAMA, mulh_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VBVUVU_TAMA, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VBVUSU_TAMA, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VBVUVU_TAMA, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VBVUSU_TAMA, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VBVUVU_TAMA, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VBVUSU_TAMA, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VBVUVU_TAMA, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VBVUSU_TAMA, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VBVIVU_TAMA, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VBVISU_TAMA, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VBVIVU_TAMA, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VBVISU_TAMA, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VBVIVU_TAMA, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VBVISU_TAMA, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VBVIVU_TAMA, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VBVISU_TAMA, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarUInt64)
// vint8m1_t vmul_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VInt8VBVIVIVI_TAMU, mul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmul_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VInt8VBVIVISI_TAMU, mul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmul_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VInt16VBVIVIVI_TAMU, mul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmul_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VInt16VBVIVISI_TAMU, mul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmul_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VInt32VBVIVIVI_TAMU, mul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmul_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VInt32VBVIVISI_TAMU, mul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmul_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VInt64VBVIVIVI_TAMU, mul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmul_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VInt64VBVIVISI_TAMU, mul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmul_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV8VUInt8VBVUVUVU_TAMU, mul_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmul_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX8VUInt8VBVUVUSU_TAMU, mul_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmul_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV16VUInt16VBVUVUVU_TAMU, mul_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmul_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX16VUInt16VBVUVUSU_TAMU, mul_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmul_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV32VUInt32VBVUVUVU_TAMU, mul_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmul_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX32VUInt32VBVUVUSU_TAMU, mul_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmul_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVV64VUInt64VBVUVUVU_TAMU, mul_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmul_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulVX64VUInt64VBVUVUSU_TAMU, mul_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulh_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV8VInt8VBVIVIVI_TAMU, mulh_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmulh_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX8VInt8VBVIVISI_TAMU, mulh_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmulh_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV16VInt16VBVIVIVI_TAMU, mulh_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmulh_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX16VInt16VBVIVISI_TAMU, mulh_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmulh_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV32VInt32VBVIVIVI_TAMU, mulh_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmulh_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX32VInt32VBVIVISI_TAMU, mulh_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmulh_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVV64VInt64VBVIVIVI_TAMU, mulh_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmulh_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhVX64VInt64VBVIVISI_TAMU, mulh_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmulhu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV8VUInt8VBVUVUVU_TAMU, mulhu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmulhu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX8VUInt8VBVUVUSU_TAMU, mulhu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmulhu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV16VUInt16VBVUVUVU_TAMU, mulhu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmulhu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX16VUInt16VBVUVUSU_TAMU, mulhu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmulhu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV32VUInt32VBVUVUVU_TAMU, mulhu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmulhu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX32VUInt32VBVUVUSU_TAMU, mulhu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmulhu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVV64VUInt64VBVUVUVU_TAMU, mulhu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmulhu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhuVX64VUInt64VBVUVUSU_TAMU, mulhu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmulhsu_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV8VInt8VBVIVIVU_TAMU, mulhsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vmulhsu_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX8VInt8VBVIVISU_TAMU, mulhsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUInt8)
// vint16m1_t vmulhsu_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV16VInt16VBVIVIVU_TAMU, mulhsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vmulhsu_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX16VInt16VBVIVISU_TAMU, mulhsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUInt16)
// vint32m1_t vmulhsu_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV32VInt32VBVIVIVU_TAMU, mulhsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vmulhsu_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX32VInt32VBVIVISU_TAMU, mulhsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUInt32)
// vint64m1_t vmulhsu_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVV64VInt64VBVIVIVU_TAMU, mulhsu_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vmulhsu_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MulhsuVX64VInt64VBVIVISU_TAMU, mulhsu_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUInt64)

// vint8m1_t vdiv_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VIVIVI_TU, div_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VIVISI_TU, div_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VIVIVI_TU, div_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VIVISI_TU, div_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VIVIVI_TU, div_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VIVISI_TU, div_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VIVIVI_TU, div_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VIVISI_TU, div_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VUVUVU_TU, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VUVUSU_TU, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VUVUVU_TU, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VUVUSU_TU, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VUVUVU_TU, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VUVUSU_TU, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VUVUVU_TU, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VUVUSU_TU, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VIVIVI_TU, rem_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VIVISI_TU, rem_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VIVIVI_TU, rem_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VIVISI_TU, rem_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VIVIVI_TU, rem_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VIVISI_TU, rem_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VIVIVI_TU, rem_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VIVISI_TU, rem_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VUVUVU_TU, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VUVUSU_TU, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VUVUVU_TU, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VUVUSU_TU, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VUVUVU_TU, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VUVUSU_TU, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VUVUVU_TU, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VUVUSU_TU, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vdiv_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VIVI_TA, div_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VISI_TA, div_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VIVI_TA, div_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VISI_TA, div_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VIVI_TA, div_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VISI_TA, div_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VIVI_TA, div_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VISI_TA, div_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VUVU_TA, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VUSU_TA, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VUVU_TA, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VUSU_TA, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VUVU_TA, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VUSU_TA, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VUVU_TA, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VUSU_TA, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VIVI_TA, rem_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VISI_TA, rem_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VIVI_TA, rem_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VISI_TA, rem_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VIVI_TA, rem_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VISI_TA, rem_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VIVI_TA, rem_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VISI_TA, rem_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VUVU_TA, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VUSU_TA, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VUVU_TA, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VUSU_TA, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VUVU_TA, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VUSU_TA, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VUVU_TA, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VUSU_TA, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vdiv_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VBVIVIVI_TUMA, div_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VBVIVISI_TUMA, div_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VBVIVIVI_TUMA, div_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VBVIVISI_TUMA, div_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VBVIVIVI_TUMA, div_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VBVIVISI_TUMA, div_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VBVIVIVI_TUMA, div_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VBVIVISI_TUMA, div_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VBVUVUVU_TUMA, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VBVUVUSU_TUMA, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VBVUVUVU_TUMA, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VBVUVUSU_TUMA, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VBVUVUVU_TUMA, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VBVUVUSU_TUMA, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VBVUVUVU_TUMA, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VBVUVUSU_TUMA, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VBVIVIVI_TUMA, rem_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VBVIVISI_TUMA, rem_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VBVIVIVI_TUMA, rem_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VBVIVISI_TUMA, rem_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VBVIVIVI_TUMA, rem_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VBVIVISI_TUMA, rem_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VBVIVIVI_TUMA, rem_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VBVIVISI_TUMA, rem_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VBVUVUVU_TUMA, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VBVUVUSU_TUMA, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VBVUVUVU_TUMA, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VBVUVUSU_TUMA, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VBVUVUVU_TUMA, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VBVUVUSU_TUMA, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VBVUVUVU_TUMA, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VBVUVUSU_TUMA, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vdiv_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VBVIVIVI_TUMU, div_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VBVIVISI_TUMU, div_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VBVIVIVI_TUMU, div_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VBVIVISI_TUMU, div_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VBVIVIVI_TUMU, div_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VBVIVISI_TUMU, div_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VBVIVIVI_TUMU, div_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VBVIVISI_TUMU, div_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VBVUVUVU_TUMU, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VBVUVUSU_TUMU, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VBVUVUVU_TUMU, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VBVUVUSU_TUMU, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VBVUVUVU_TUMU, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VBVUVUSU_TUMU, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VBVUVUVU_TUMU, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VBVUVUSU_TUMU, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VBVIVIVI_TUMU, rem_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VBVIVISI_TUMU, rem_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VBVIVIVI_TUMU, rem_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VBVIVISI_TUMU, rem_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VBVIVIVI_TUMU, rem_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VBVIVISI_TUMU, rem_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VBVIVIVI_TUMU, rem_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VBVIVISI_TUMU, rem_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VBVUVUVU_TUMU, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VBVUVUSU_TUMU, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VBVUVUVU_TUMU, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VBVUVUSU_TUMU, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VBVUVUVU_TUMU, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VBVUVUSU_TUMU, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VBVUVUVU_TUMU, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VBVUVUSU_TUMU, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vdiv_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VBVIVI_TAMA, div_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VBVISI_TAMA, div_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VBVIVI_TAMA, div_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VBVISI_TAMA, div_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VBVIVI_TAMA, div_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VBVISI_TAMA, div_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VBVIVI_TAMA, div_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VBVISI_TAMA, div_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VBVUVU_TAMA, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VBVUSU_TAMA, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VBVUVU_TAMA, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VBVUSU_TAMA, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VBVUVU_TAMA, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VBVUSU_TAMA, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VBVUVU_TAMA, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VBVUSU_TAMA, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VBVIVI_TAMA, rem_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VBVISI_TAMA, rem_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VBVIVI_TAMA, rem_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VBVISI_TAMA, rem_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VBVIVI_TAMA, rem_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VBVISI_TAMA, rem_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VBVIVI_TAMA, rem_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VBVISI_TAMA, rem_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VBVUVU_TAMA, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VBVUSU_TAMA, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VBVUVU_TAMA, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VBVUSU_TAMA, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VBVUVU_TAMA, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VBVUSU_TAMA, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VBVUVU_TAMA, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VBVUSU_TAMA, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vdiv_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV8VInt8VBVIVIVI_TAMU, div_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vdiv_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX8VInt8VBVIVISI_TAMU, div_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vdiv_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV16VInt16VBVIVIVI_TAMU, div_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vdiv_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX16VInt16VBVIVISI_TAMU, div_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vdiv_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV32VInt32VBVIVIVI_TAMU, div_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vdiv_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX32VInt32VBVIVISI_TAMU, div_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vdiv_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVV64VInt64VBVIVIVI_TAMU, div_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vdiv_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivVX64VInt64VBVIVISI_TAMU, div_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vdivu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV8VUInt8VBVUVUVU_TAMU, divu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vdivu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX8VUInt8VBVUVUSU_TAMU, divu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vdivu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV16VUInt16VBVUVUVU_TAMU, divu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vdivu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX16VUInt16VBVUVUSU_TAMU, divu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vdivu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV32VUInt32VBVUVUVU_TAMU, divu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vdivu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX32VUInt32VBVUVUSU_TAMU, divu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vdivu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVV64VUInt64VBVUVUVU_TAMU, divu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vdivu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(DivuVX64VUInt64VBVUVUSU_TAMU, divu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vrem_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV8VInt8VBVIVIVI_TAMU, rem_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vrem_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX8VInt8VBVIVISI_TAMU, rem_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vrem_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV16VInt16VBVIVIVI_TAMU, rem_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vrem_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX16VInt16VBVIVISI_TAMU, rem_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vrem_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV32VInt32VBVIVIVI_TAMU, rem_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vrem_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX32VInt32VBVIVISI_TAMU, rem_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vrem_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVV64VInt64VBVIVIVI_TAMU, rem_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vrem_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemVX64VInt64VBVIVISI_TAMU, rem_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vremu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV8VUInt8VBVUVUVU_TAMU, remu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vremu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX8VUInt8VBVUVUSU_TAMU, remu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vremu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV16VUInt16VBVUVUVU_TAMU, remu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vremu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX16VUInt16VBVUVUSU_TAMU, remu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vremu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV32VUInt32VBVUVUVU_TAMU, remu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vremu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX32VUInt32VBVUVUSU_TAMU, remu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vremu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVV64VUInt64VBVUVUVU_TAMU, remu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vremu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(RemuVX64VUInt64VBVUVUSU_TAMU, remu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint16m2_t vwmul_vv_int16m2_tu (vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VIVIVI_TU, wmul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_tu (vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VIVISI_TU, wmul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_tu (vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VIVIVI_TU, wmul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_tu (vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VIVISI_TU, wmul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_tu (vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VIVIVI_TU, wmul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_tu (vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VIVISI_TU, wmul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VUVUVU_TU, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_tu (vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VUVUSU_TU, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VUVUVU_TU, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_tu (vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VUVUSU_TU, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VUVUVU_TU, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_tu (vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VUVUSU_TU, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_tu (vint16m2_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VIVIVU_TU, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_tu (vint16m2_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VIVISU_TU, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_tu (vint32m2_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VIVIVU_TU, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_tu (vint32m2_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VIVISU_TU, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_tu (vint64m2_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VIVIVU_TU, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_tu (vint64m2_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VIVISU_TU, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, ScalarUInt32)
// vint16m2_t vwmul_vv_int16m2_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VIVI_TA, wmul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VISI_TA, wmul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VIVI_TA, wmul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VISI_TA, wmul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VIVI_TA, wmul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VISI_TA, wmul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VUVU_TA, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VUSU_TA, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 2, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VUVU_TA, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VUSU_TA, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 2, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VUVU_TA, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VUSU_TA, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 2, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_ta (vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VIVU_TA, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_ta (vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VISU_TA, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 2, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_ta (vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VIVU_TA, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_ta (vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VISU_TA, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 2, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_ta (vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VIVU_TA, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_ta (vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VISU_TA, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 2, OneDInt32, ScalarUInt32)
// vint16m2_t vwmul_vv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VBVIVIVI_TUMA, wmul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VBVIVISI_TUMA, wmul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VBVIVIVI_TUMA, wmul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VBVIVISI_TUMA, wmul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VBVIVIVI_TUMA, wmul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VBVIVISI_TUMA, wmul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VBVUVUVU_TUMA, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VBVUVUSU_TUMA, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VBVUVUVU_TUMA, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VBVUVUSU_TUMA, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VBVUVUVU_TUMA, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VBVUVUSU_TUMA, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VBVIVIVU_TUMA, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VBVIVISU_TUMA, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VBVIVIVU_TUMA, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VBVIVISU_TUMA, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VBVIVIVU_TUMA, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VBVIVISU_TUMA, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarUInt32)
// vint16m2_t vwmul_vv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VBVIVIVI_TUMU, wmul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VBVIVISI_TUMU, wmul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VBVIVIVI_TUMU, wmul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VBVIVISI_TUMU, wmul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VBVIVIVI_TUMU, wmul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VBVIVISI_TUMU, wmul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VBVUVUVU_TUMU, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VBVUVUSU_TUMU, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VBVUVUVU_TUMU, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VBVUVUSU_TUMU, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VBVUVUVU_TUMU, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VBVUVUSU_TUMU, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VBVIVIVU_TUMU, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VBVIVISU_TUMU, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VBVIVIVU_TUMU, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VBVIVISU_TUMU, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VBVIVIVU_TUMU, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VBVIVISU_TUMU, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarUInt32)
// vint16m2_t vwmul_vv_int16m2_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VBVIVI_TAMA, wmul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VBVISI_TAMA, wmul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VBVIVI_TAMA, wmul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VBVISI_TAMA, wmul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VBVIVI_TAMA, wmul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VBVISI_TAMA, wmul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VBVUVU_TAMA, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VBVUSU_TAMA, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VBVUVU_TAMA, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VBVUSU_TAMA, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VBVUVU_TAMA, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VBVUSU_TAMA, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_tama (vbool8_t mask, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VBVIVU_TAMA, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_tama (vbool8_t mask, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VBVISU_TAMA, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_tama (vbool16_t mask, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VBVIVU_TAMA, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_tama (vbool16_t mask, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VBVISU_TAMA, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_tama (vbool32_t mask, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VBVIVU_TAMA, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_tama (vbool32_t mask, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VBVISU_TAMA, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt32, ScalarUInt32)
// vint16m2_t vwmul_vv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV8VInt16VBVIVIVI_TAMU, wmul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmul_vx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX8VInt16VBVIVISI_TAMU, wmul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarInt8)
// vint32m2_t vwmul_vv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV16VInt32VBVIVIVI_TAMU, wmul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmul_vx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX16VInt32VBVIVISI_TAMU, wmul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarInt16)
// vint64m2_t vwmul_vv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVV32VInt64VBVIVIVI_TAMU, wmul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmul_vx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulVX32VInt64VBVIVISI_TAMU, wmul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarInt32)
// vuint16m2_t vwmulu_vv_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV8VUInt16VBVUVUVU_TAMU, wmulu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmulu_vx_uint16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX8VUInt16VBVUVUSU_TAMU, wmulu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, ScalarUInt8)
// vuint32m2_t vwmulu_vv_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV16VUInt32VBVUVUVU_TAMU, wmulu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmulu_vx_uint32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX16VUInt32VBVUVUSU_TAMU, wmulu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, ScalarUInt16)
// vuint64m2_t vwmulu_vv_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVV32VUInt64VBVUVUVU_TAMU, wmulu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmulu_vx_uint64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmuluVX32VUInt64VBVUVUSU_TAMU, wmulu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, ScalarUInt32)
// vint16m2_t vwmulsu_vv_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV8VInt16VBVIVIVU_TAMU, wmulsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmulsu_vx_int16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX8VInt16VBVIVISU_TAMU, wmulsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, ScalarUInt8)
// vint32m2_t vwmulsu_vv_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV16VInt32VBVIVIVU_TAMU, wmulsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmulsu_vx_int32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX16VInt32VBVIVISU_TAMU, wmulsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, ScalarUInt16)
// vint64m2_t vwmulsu_vv_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVV32VInt64VBVIVIVU_TAMU, wmulsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmulsu_vx_int64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(WmulsuVX32VInt64VBVIVISU_TAMU, wmulsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, ScalarUInt32)

// vint8m1_t vmacc_vv_int8m1_tu (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VIVIVI_TU, macc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_tu (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VISIVI_TU, macc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_tu (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VIVIVI_TU, macc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_tu (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VISIVI_TU, macc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_tu (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VIVIVI_TU, macc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_tu (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VISIVI_TU, macc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_tu (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VIVIVI_TU, macc_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_tu (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VISIVI_TU, macc_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_tu (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VUVUVU_TU, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_tu (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VUSUVU_TU, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_tu (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VUVUVU_TU, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_tu (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VUSUVU_TU, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_tu (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VUVUVU_TU, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_tu (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VUSUVU_TU, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_tu (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VUVUVU_TU, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_tu (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VUSUVU_TU, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_tu (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VIVIVI_TU, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_tu (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VISIVI_TU, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_tu (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VIVIVI_TU, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_tu (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VISIVI_TU, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_tu (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VIVIVI_TU, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_tu (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VISIVI_TU, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_tu (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VIVIVI_TU, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_tu (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VISIVI_TU, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_tu (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VUVUVU_TU, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_tu (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VUSUVU_TU, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_tu (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VUVUVU_TU, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_tu (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VUSUVU_TU, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_tu (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VUVUVU_TU, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_tu (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VUSUVU_TU, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_tu (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VUVUVU_TU, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_tu (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VUSUVU_TU, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_tu (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VIVIVI_TU, madd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_tu (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VISIVI_TU, madd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_tu (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VIVIVI_TU, madd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_tu (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VISIVI_TU, madd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_tu (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VIVIVI_TU, madd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_tu (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VISIVI_TU, madd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_tu (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VIVIVI_TU, madd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_tu (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VISIVI_TU, madd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_tu (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VUVUVU_TU, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_tu (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VUSUVU_TU, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_tu (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VUVUVU_TU, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_tu (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VUSUVU_TU, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_tu (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VUVUVU_TU, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_tu (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VUSUVU_TU, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_tu (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VUVUVU_TU, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_tu (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VUSUVU_TU, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_tu (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VIVIVI_TU, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_tu (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VISIVI_TU, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_tu (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VIVIVI_TU, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_tu (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VISIVI_TU, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_tu (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VIVIVI_TU, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_tu (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VISIVI_TU, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_tu (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VIVIVI_TU, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_tu (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VISIVI_TU, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_tu (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VUVUVU_TU, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_tu (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VUSUVU_TU, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_tu (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VUVUVU_TU, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_tu (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VUSUVU_TU, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_tu (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VUVUVU_TU, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_tu (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VUSUVU_TU, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_tu (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VUVUVU_TU, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_tu (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VUSUVU_TU, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmacc_vv_int8m1_ta (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VIVIVI_TA, macc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_ta (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VISIVI_TA, macc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_ta (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VIVIVI_TA, macc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_ta (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VISIVI_TA, macc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_ta (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VIVIVI_TA, macc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_ta (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VISIVI_TA, macc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_ta (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VIVIVI_TA, macc_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_ta (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VISIVI_TA, macc_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_ta (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VUVUVU_TA, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_ta (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VUSUVU_TA, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_ta (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VUVUVU_TA, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_ta (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VUSUVU_TA, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_ta (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VUVUVU_TA, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_ta (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VUSUVU_TA, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_ta (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VUVUVU_TA, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_ta (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VUSUVU_TA, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_ta (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VIVIVI_TA, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_ta (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VISIVI_TA, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_ta (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VIVIVI_TA, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_ta (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VISIVI_TA, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_ta (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VIVIVI_TA, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_ta (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VISIVI_TA, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_ta (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VIVIVI_TA, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_ta (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VISIVI_TA, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_ta (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VUVUVU_TA, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_ta (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VUSUVU_TA, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_ta (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VUVUVU_TA, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_ta (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VUSUVU_TA, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_ta (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VUVUVU_TA, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_ta (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VUSUVU_TA, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_ta (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VUVUVU_TA, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_ta (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VUSUVU_TA, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_ta (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VIVIVI_TA, madd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_ta (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VISIVI_TA, madd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_ta (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VIVIVI_TA, madd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_ta (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VISIVI_TA, madd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_ta (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VIVIVI_TA, madd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_ta (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VISIVI_TA, madd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_ta (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VIVIVI_TA, madd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_ta (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VISIVI_TA, madd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_ta (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VUVUVU_TA, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_ta (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VUSUVU_TA, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_ta (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VUVUVU_TA, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_ta (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VUSUVU_TA, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_ta (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VUVUVU_TA, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_ta (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VUSUVU_TA, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_ta (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VUVUVU_TA, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_ta (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VUSUVU_TA, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_ta (vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VIVIVI_TA, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_ta (vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VISIVI_TA, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt8, 3, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_ta (vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VIVIVI_TA, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_ta (vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VISIVI_TA, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_ta (vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VIVIVI_TA, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_ta (vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VISIVI_TA, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_ta (vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VIVIVI_TA, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_ta (vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VISIVI_TA, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_ta (vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VUVUVU_TA, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_ta (vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VUSUVU_TA, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt8, 3, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_ta (vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VUVUVU_TA, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_ta (vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VUSUVU_TA, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_ta (vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VUVUVU_TA, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_ta (vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VUSUVU_TA, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_ta (vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VUVUVU_TA, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_ta (vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VUSUVU_TA, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmacc_vv_int8m1_tuma (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VBVIVIVI_TUMA, macc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_tuma (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VBVISIVI_TUMA, macc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_tuma (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VBVIVIVI_TUMA, macc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_tuma (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VBVISIVI_TUMA, macc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_tuma (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VBVIVIVI_TUMA, macc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_tuma (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VBVISIVI_TUMA, macc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_tuma (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VBVIVIVI_TUMA, macc_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_tuma (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VBVISIVI_TUMA, macc_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VBVUVUVU_TUMA, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VBVUSUVU_TUMA, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VBVUVUVU_TUMA, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VBVUSUVU_TUMA, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VBVUVUVU_TUMA, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VBVUSUVU_TUMA, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VBVUVUVU_TUMA, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VBVUSUVU_TUMA, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_tuma (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VBVIVIVI_TUMA, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_tuma (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VBVISIVI_TUMA, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_tuma (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VBVIVIVI_TUMA, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_tuma (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VBVISIVI_TUMA, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_tuma (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VBVIVIVI_TUMA, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_tuma (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VBVISIVI_TUMA, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_tuma (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VBVIVIVI_TUMA, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_tuma (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VBVISIVI_TUMA, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VBVUVUVU_TUMA, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VBVUSUVU_TUMA, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VBVUVUVU_TUMA, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VBVUSUVU_TUMA, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VBVUVUVU_TUMA, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VBVUSUVU_TUMA, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VBVUVUVU_TUMA, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VBVUSUVU_TUMA, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_tuma (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VBVIVIVI_TUMA, madd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_tuma (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VBVISIVI_TUMA, madd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_tuma (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VBVIVIVI_TUMA, madd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_tuma (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VBVISIVI_TUMA, madd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_tuma (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VBVIVIVI_TUMA, madd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_tuma (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VBVISIVI_TUMA, madd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_tuma (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VBVIVIVI_TUMA, madd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_tuma (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VBVISIVI_TUMA, madd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VBVUVUVU_TUMA, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VBVUSUVU_TUMA, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VBVUVUVU_TUMA, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VBVUSUVU_TUMA, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VBVUVUVU_TUMA, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VBVUSUVU_TUMA, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VBVUVUVU_TUMA, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VBVUSUVU_TUMA, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_tuma (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VBVIVIVI_TUMA, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_tuma (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VBVISIVI_TUMA, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_tuma (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VBVIVIVI_TUMA, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_tuma (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VBVISIVI_TUMA, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_tuma (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VBVIVIVI_TUMA, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_tuma (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VBVISIVI_TUMA, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_tuma (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VBVIVIVI_TUMA, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_tuma (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VBVISIVI_TUMA, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VBVUVUVU_TUMA, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VBVUSUVU_TUMA, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VBVUVUVU_TUMA, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VBVUSUVU_TUMA, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VBVUVUVU_TUMA, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VBVUSUVU_TUMA, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VBVUVUVU_TUMA, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VBVUSUVU_TUMA, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmacc_vv_int8m1_tumu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VBVIVIVI_TUMU, macc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_tumu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VBVISIVI_TUMU, macc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_tumu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VBVIVIVI_TUMU, macc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_tumu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VBVISIVI_TUMU, macc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_tumu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VBVIVIVI_TUMU, macc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_tumu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VBVISIVI_TUMU, macc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_tumu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VBVIVIVI_TUMU, macc_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_tumu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VBVISIVI_TUMU, macc_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VBVUVUVU_TUMU, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VBVUSUVU_TUMU, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VBVUVUVU_TUMU, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VBVUSUVU_TUMU, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VBVUVUVU_TUMU, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VBVUSUVU_TUMU, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VBVUVUVU_TUMU, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VBVUSUVU_TUMU, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_tumu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VBVIVIVI_TUMU, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_tumu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VBVISIVI_TUMU, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_tumu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VBVIVIVI_TUMU, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_tumu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VBVISIVI_TUMU, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_tumu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VBVIVIVI_TUMU, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_tumu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VBVISIVI_TUMU, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_tumu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VBVIVIVI_TUMU, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_tumu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VBVISIVI_TUMU, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VBVUVUVU_TUMU, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VBVUSUVU_TUMU, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VBVUVUVU_TUMU, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VBVUSUVU_TUMU, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VBVUVUVU_TUMU, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VBVUSUVU_TUMU, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VBVUVUVU_TUMU, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VBVUSUVU_TUMU, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_tumu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VBVIVIVI_TUMU, madd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_tumu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VBVISIVI_TUMU, madd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_tumu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VBVIVIVI_TUMU, madd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_tumu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VBVISIVI_TUMU, madd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_tumu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VBVIVIVI_TUMU, madd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_tumu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VBVISIVI_TUMU, madd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_tumu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VBVIVIVI_TUMU, madd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_tumu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VBVISIVI_TUMU, madd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VBVUVUVU_TUMU, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VBVUSUVU_TUMU, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VBVUVUVU_TUMU, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VBVUSUVU_TUMU, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VBVUVUVU_TUMU, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VBVUSUVU_TUMU, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VBVUVUVU_TUMU, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VBVUSUVU_TUMU, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_tumu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VBVIVIVI_TUMU, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_tumu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VBVISIVI_TUMU, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_tumu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VBVIVIVI_TUMU, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_tumu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VBVISIVI_TUMU, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_tumu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VBVIVIVI_TUMU, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_tumu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VBVISIVI_TUMU, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_tumu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VBVIVIVI_TUMU, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_tumu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VBVISIVI_TUMU, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VBVUVUVU_TUMU, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VBVUSUVU_TUMU, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VBVUVUVU_TUMU, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VBVUSUVU_TUMU, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VBVUVUVU_TUMU, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VBVUSUVU_TUMU, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VBVUVUVU_TUMU, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VBVUSUVU_TUMU, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmacc_vv_int8m1_tama (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VBVIVIVI_TAMA, macc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_tama (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VBVISIVI_TAMA, macc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_tama (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VBVIVIVI_TAMA, macc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_tama (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VBVISIVI_TAMA, macc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_tama (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VBVIVIVI_TAMA, macc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_tama (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VBVISIVI_TAMA, macc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_tama (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VBVIVIVI_TAMA, macc_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_tama (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VBVISIVI_TAMA, macc_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VBVUVUVU_TAMA, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VBVUSUVU_TAMA, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VBVUVUVU_TAMA, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VBVUSUVU_TAMA, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VBVUVUVU_TAMA, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VBVUSUVU_TAMA, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VBVUVUVU_TAMA, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VBVUSUVU_TAMA, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_tama (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VBVIVIVI_TAMA, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_tama (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VBVISIVI_TAMA, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_tama (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VBVIVIVI_TAMA, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_tama (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VBVISIVI_TAMA, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_tama (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VBVIVIVI_TAMA, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_tama (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VBVISIVI_TAMA, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_tama (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VBVIVIVI_TAMA, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_tama (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VBVISIVI_TAMA, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VBVUVUVU_TAMA, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VBVUSUVU_TAMA, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VBVUVUVU_TAMA, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VBVUSUVU_TAMA, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VBVUVUVU_TAMA, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VBVUSUVU_TAMA, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VBVUVUVU_TAMA, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VBVUSUVU_TAMA, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_tama (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VBVIVIVI_TAMA, madd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_tama (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VBVISIVI_TAMA, madd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_tama (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VBVIVIVI_TAMA, madd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_tama (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VBVISIVI_TAMA, madd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_tama (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VBVIVIVI_TAMA, madd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_tama (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VBVISIVI_TAMA, madd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_tama (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VBVIVIVI_TAMA, madd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_tama (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VBVISIVI_TAMA, madd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VBVUVUVU_TAMA, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VBVUSUVU_TAMA, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VBVUVUVU_TAMA, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VBVUSUVU_TAMA, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VBVUVUVU_TAMA, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VBVUSUVU_TAMA, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VBVUVUVU_TAMA, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VBVUSUVU_TAMA, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_tama (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VBVIVIVI_TAMA, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_tama (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VBVISIVI_TAMA, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_tama (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VBVIVIVI_TAMA, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_tama (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VBVISIVI_TAMA, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_tama (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VBVIVIVI_TAMA, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_tama (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VBVISIVI_TAMA, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_tama (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VBVIVIVI_TAMA, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_tama (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VBVISIVI_TAMA, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VBVUVUVU_TAMA, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VBVUSUVU_TAMA, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VBVUVUVU_TAMA, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VBVUSUVU_TAMA, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VBVUVUVU_TAMA, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VBVUSUVU_TAMA, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VBVUVUVU_TAMA, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VBVUSUVU_TAMA, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmacc_vv_int8m1_tamu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VInt8VBVIVIVI_TAMU, macc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmacc_vx_int8m1_tamu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VInt8VBVISIVI_TAMU, macc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmacc_vv_int16m1_tamu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VInt16VBVIVIVI_TAMU, macc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmacc_vx_int16m1_tamu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VInt16VBVISIVI_TAMU, macc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmacc_vv_int32m1_tamu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VInt32VBVIVIVI_TAMU, macc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmacc_vx_int32m1_tamu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VInt32VBVISIVI_TAMU, macc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmacc_vv_int64m1_tamu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VInt64VBVIVIVI_TAMU, macc_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmacc_vx_int64m1_tamu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VInt64VBVISIVI_TAMU, macc_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmacc_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV8VUInt8VBVUVUVU_TAMU, macc_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmacc_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX8VUInt8VBVUSUVU_TAMU, macc_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmacc_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV16VUInt16VBVUVUVU_TAMU, macc_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmacc_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX16VUInt16VBVUSUVU_TAMU, macc_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmacc_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV32VUInt32VBVUVUVU_TAMU, macc_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmacc_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX32VUInt32VBVUSUVU_TAMU, macc_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmacc_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVV64VUInt64VBVUVUVU_TAMU, macc_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmacc_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaccVX64VUInt64VBVUSUVU_TAMU, macc_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsac_vv_int8m1_tamu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VInt8VBVIVIVI_TAMU, nmsac_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsac_vx_int8m1_tamu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VInt8VBVISIVI_TAMU, nmsac_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsac_vv_int16m1_tamu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VInt16VBVIVIVI_TAMU, nmsac_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsac_vx_int16m1_tamu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VInt16VBVISIVI_TAMU, nmsac_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsac_vv_int32m1_tamu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VInt32VBVIVIVI_TAMU, nmsac_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsac_vx_int32m1_tamu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VInt32VBVISIVI_TAMU, nmsac_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsac_vv_int64m1_tamu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VInt64VBVIVIVI_TAMU, nmsac_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsac_vx_int64m1_tamu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VInt64VBVISIVI_TAMU, nmsac_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsac_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV8VUInt8VBVUVUVU_TAMU, nmsac_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsac_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX8VUInt8VBVUSUVU_TAMU, nmsac_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsac_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV16VUInt16VBVUVUVU_TAMU, nmsac_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsac_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX16VUInt16VBVUSUVU_TAMU, nmsac_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsac_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV32VUInt32VBVUVUVU_TAMU, nmsac_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsac_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX32VUInt32VBVUSUVU_TAMU, nmsac_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsac_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVV64VUInt64VBVUVUVU_TAMU, nmsac_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsac_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsacVX64VUInt64VBVUSUVU_TAMU, nmsac_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vmadd_vv_int8m1_tamu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VInt8VBVIVIVI_TAMU, madd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmadd_vx_int8m1_tamu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VInt8VBVISIVI_TAMU, madd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vmadd_vv_int16m1_tamu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VInt16VBVIVIVI_TAMU, madd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmadd_vx_int16m1_tamu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VInt16VBVISIVI_TAMU, madd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vmadd_vv_int32m1_tamu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VInt32VBVIVIVI_TAMU, madd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmadd_vx_int32m1_tamu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VInt32VBVISIVI_TAMU, madd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vmadd_vv_int64m1_tamu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VInt64VBVIVIVI_TAMU, madd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmadd_vx_int64m1_tamu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VInt64VBVISIVI_TAMU, madd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vmadd_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV8VUInt8VBVUVUVU_TAMU, madd_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmadd_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX8VUInt8VBVUSUVU_TAMU, madd_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vmadd_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV16VUInt16VBVUVUVU_TAMU, madd_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmadd_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX16VUInt16VBVUSUVU_TAMU, madd_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vmadd_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV32VUInt32VBVUVUVU_TAMU, madd_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmadd_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX32VUInt32VBVUSUVU_TAMU, madd_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vmadd_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVV64VUInt64VBVUVUVU_TAMU, madd_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmadd_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(MaddVX64VUInt64VBVUSUVU_TAMU, madd_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)
// vint8m1_t vnmsub_vv_int8m1_tamu (vbool8_t mask, vint8m1_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VInt8VBVIVIVI_TAMU, nmsub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vnmsub_vx_int8m1_tamu (vbool8_t mask, vint8m1_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VInt8VBVISIVI_TAMU, nmsub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, ScalarInt8, OneDInt8)
// vint16m1_t vnmsub_vv_int16m1_tamu (vbool16_t mask, vint16m1_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VInt16VBVIVIVI_TAMU, nmsub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vnmsub_vx_int16m1_tamu (vbool16_t mask, vint16m1_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VInt16VBVISIVI_TAMU, nmsub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt16, OneDInt16)
// vint32m1_t vnmsub_vv_int32m1_tamu (vbool32_t mask, vint32m1_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VInt32VBVIVIVI_TAMU, nmsub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vnmsub_vx_int32m1_tamu (vbool32_t mask, vint32m1_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VInt32VBVISIVI_TAMU, nmsub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt32, OneDInt32)
// vint64m1_t vnmsub_vv_int64m1_tamu (vbool64_t mask, vint64m1_t vd, vint64m1_t vs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VInt64VBVIVIVI_TAMU, nmsub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vnmsub_vx_int64m1_tamu (vbool64_t mask, vint64m1_t vd, int64_t rs1, vint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VInt64VBVISIVI_TAMU, nmsub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt64, OneDInt64)
// vuint8m1_t vnmsub_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV8VUInt8VBVUVUVU_TAMU, nmsub_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vnmsub_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX8VUInt8VBVUSUVU_TAMU, nmsub_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, ScalarUInt8, OneDUInt8)
// vuint16m1_t vnmsub_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV16VUInt16VBVUVUVU_TAMU, nmsub_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vnmsub_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX16VUInt16VBVUSUVU_TAMU, nmsub_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt16, OneDUInt16)
// vuint32m1_t vnmsub_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV32VUInt32VBVUVUVU_TAMU, nmsub_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vnmsub_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX32VUInt32VBVUSUVU_TAMU, nmsub_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt32, OneDUInt32)
// vuint64m1_t vnmsub_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, vuint64m1_t vs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVV64VUInt64VBVUVUVU_TAMU, nmsub_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vnmsub_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t vd, uint64_t rs1, vuint64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(NmsubVX64VUInt64VBVUSUVU_TAMU, nmsub_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt64, OneDUInt64)

// vint16m2_t vwmacc_vv_int16m2_tu (vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VIVIVI_TU, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_tu (vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VISIVI_TU, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_tu (vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VIVIVI_TU, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_tu (vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VISIVI_TU, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_tu (vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VIVIVI_TU, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_tu (vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VISIVI_TU, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_tu (vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VUVUVU_TU, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_tu (vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VUSUVU_TU, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_tu (vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VUVUVU_TU, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_tu (vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VUSUVU_TU, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_tu (vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VUVUVU_TU, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_tu (vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VUSUVU_TU, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_tu (vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VIVIVU_TU, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_tu (vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VISIVU_TU, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_tu (vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VIVIVU_TU, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_tu (vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VISIVU_TU, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_tu (vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VIVIVU_TU, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_tu (vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VISIVU_TU, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_tu (vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VISUVI_TU, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_tu (vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VISUVI_TU, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_tu (vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VISUVI_TU, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, ScalarUInt32, OneDInt32)
// vint16m2_t vwmacc_vv_int16m2_ta (vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VIVIVI_TA, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_ta (vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VISIVI_TA, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_ta (vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VIVIVI_TA, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_ta (vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VISIVI_TA, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_ta (vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VIVIVI_TA, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_ta (vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VISIVI_TA, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_ta (vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VUVUVU_TA, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_ta (vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VUSUVU_TA, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt16, 3, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_ta (vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VUVUVU_TA, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_ta (vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VUSUVU_TA, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt32, 3, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_ta (vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VUVUVU_TA, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_ta (vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VUSUVU_TA, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDUInt64, 3, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_ta (vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VIVIVU_TA, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_ta (vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VISIVU_TA, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_ta (vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VIVIVU_TA, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_ta (vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VISIVU_TA, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_ta (vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VIVIVU_TA, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_ta (vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VISIVU_TA, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_ta (vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VISUVI_TA, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt16, 3, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_ta (vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VISUVI_TA, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt32, 3, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_ta (vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VISUVI_TA, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDInt64, 3, OneDInt64, ScalarUInt32, OneDInt32)
// vint16m2_t vwmacc_vv_int16m2_tuma (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VBVIVIVI_TUMA, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_tuma (vbool8_t mask, vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VBVISIVI_TUMA, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_tuma (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VBVIVIVI_TUMA, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_tuma (vbool16_t mask, vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VBVISIVI_TUMA, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_tuma (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VBVIVIVI_TUMA, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_tuma (vbool32_t mask, vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VBVISIVI_TUMA, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_tuma (vbool8_t mask, vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VBVUVUVU_TUMA, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_tuma (vbool8_t mask, vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VBVUSUVU_TUMA, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_tuma (vbool16_t mask, vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VBVUVUVU_TUMA, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_tuma (vbool16_t mask, vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VBVUSUVU_TUMA, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_tuma (vbool32_t mask, vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VBVUVUVU_TUMA, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_tuma (vbool32_t mask, vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VBVUSUVU_TUMA, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_tuma (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VBVIVIVU_TUMA, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_tuma (vbool8_t mask, vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VBVISIVU_TUMA, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_tuma (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VBVIVIVU_TUMA, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_tuma (vbool16_t mask, vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VBVISIVU_TUMA, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_tuma (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VBVIVIVU_TUMA, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_tuma (vbool32_t mask, vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VBVISIVU_TUMA, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_tuma (vbool8_t mask, vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VBVISUVI_TUMA, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_tuma (vbool16_t mask, vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VBVISUVI_TUMA, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_tuma (vbool32_t mask, vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VBVISUVI_TUMA, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarUInt32, OneDInt32)
// vint16m2_t vwmacc_vv_int16m2_tumu (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VBVIVIVI_TUMU, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_tumu (vbool8_t mask, vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VBVISIVI_TUMU, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_tumu (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VBVIVIVI_TUMU, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_tumu (vbool16_t mask, vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VBVISIVI_TUMU, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_tumu (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VBVIVIVI_TUMU, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_tumu (vbool32_t mask, vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VBVISIVI_TUMU, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_tumu (vbool8_t mask, vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VBVUVUVU_TUMU, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_tumu (vbool8_t mask, vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VBVUSUVU_TUMU, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_tumu (vbool16_t mask, vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VBVUVUVU_TUMU, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_tumu (vbool16_t mask, vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VBVUSUVU_TUMU, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_tumu (vbool32_t mask, vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VBVUVUVU_TUMU, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_tumu (vbool32_t mask, vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VBVUSUVU_TUMU, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_tumu (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VBVIVIVU_TUMU, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_tumu (vbool8_t mask, vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VBVISIVU_TUMU, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_tumu (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VBVIVIVU_TUMU, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_tumu (vbool16_t mask, vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VBVISIVU_TUMU, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_tumu (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VBVIVIVU_TUMU, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_tumu (vbool32_t mask, vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VBVISIVU_TUMU, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_tumu (vbool8_t mask, vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VBVISUVI_TUMU, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_tumu (vbool16_t mask, vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VBVISUVI_TUMU, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_tumu (vbool32_t mask, vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VBVISUVI_TUMU, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarUInt32, OneDInt32)
// vint16m2_t vwmacc_vv_int16m2_tama (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VBVIVIVI_TAMA, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_tama (vbool8_t mask, vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VBVISIVI_TAMA, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_tama (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VBVIVIVI_TAMA, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_tama (vbool16_t mask, vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VBVISIVI_TAMA, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_tama (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VBVIVIVI_TAMA, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_tama (vbool32_t mask, vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VBVISIVI_TAMA, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_tama (vbool8_t mask, vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VBVUVUVU_TAMA, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_tama (vbool8_t mask, vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VBVUSUVU_TAMA, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_tama (vbool16_t mask, vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VBVUVUVU_TAMA, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_tama (vbool16_t mask, vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VBVUSUVU_TAMA, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_tama (vbool32_t mask, vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VBVUVUVU_TAMA, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_tama (vbool32_t mask, vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VBVUSUVU_TAMA, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_tama (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VBVIVIVU_TAMA, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_tama (vbool8_t mask, vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VBVISIVU_TAMA, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_tama (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VBVIVIVU_TAMA, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_tama (vbool16_t mask, vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VBVISIVU_TAMA, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_tama (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VBVIVIVU_TAMA, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_tama (vbool32_t mask, vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VBVISIVU_TAMA, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_tama (vbool8_t mask, vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VBVISUVI_TAMA, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_tama (vbool16_t mask, vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VBVISUVI_TAMA, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_tama (vbool32_t mask, vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VBVISUVI_TAMA, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, ScalarUInt32, OneDInt32)
// vint16m2_t vwmacc_vv_int16m2_tamu (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV8VInt16VBVIVIVI_TAMU, wmacc_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDInt8)
// vint16m2_t vwmacc_vx_int16m2_tamu (vbool8_t mask, vint16m2_t vd, int8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX8VInt16VBVISIVI_TAMU, wmacc_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDInt8)
// vint32m2_t vwmacc_vv_int32m2_tamu (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV16VInt32VBVIVIVI_TAMU, wmacc_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDInt16)
// vint32m2_t vwmacc_vx_int32m2_tamu (vbool16_t mask, vint32m2_t vd, int16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX16VInt32VBVISIVI_TAMU, wmacc_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDInt16)
// vint64m2_t vwmacc_vv_int64m2_tamu (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVV32VInt64VBVIVIVI_TAMU, wmacc_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDInt32)
// vint64m2_t vwmacc_vx_int64m2_tamu (vbool32_t mask, vint64m2_t vd, int32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccVX32VInt64VBVISIVI_TAMU, wmacc_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDInt32)
// vuint16m2_t vwmaccu_vv_uint16m2_tamu (vbool8_t mask, vuint16m2_t vd, vuint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV8VUInt16VBVUVUVU_TAMU, wmaccu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt8, OneDUInt8)
// vuint16m2_t vwmaccu_vx_uint16m2_tamu (vbool8_t mask, vuint16m2_t vd, uint8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX8VUInt16VBVUSUVU_TAMU, wmaccu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, ScalarUInt8, OneDUInt8)
// vuint32m2_t vwmaccu_vv_uint32m2_tamu (vbool16_t mask, vuint32m2_t vd, vuint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV16VUInt32VBVUVUVU_TAMU, wmaccu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt16, OneDUInt16)
// vuint32m2_t vwmaccu_vx_uint32m2_tamu (vbool16_t mask, vuint32m2_t vd, uint16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX16VUInt32VBVUSUVU_TAMU, wmaccu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, ScalarUInt16, OneDUInt16)
// vuint64m2_t vwmaccu_vv_uint64m2_tamu (vbool32_t mask, vuint64m2_t vd, vuint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVV32VUInt64VBVUVUVU_TAMU, wmaccu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt32, OneDUInt32)
// vuint64m2_t vwmaccu_vx_uint64m2_tamu (vbool32_t mask, vuint64m2_t vd, uint32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccuVX32VUInt64VBVUSUVU_TAMU, wmaccu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, ScalarUInt32, OneDUInt32)
// vint16m2_t vwmaccsu_vv_int16m2_tamu (vbool8_t mask, vint16m2_t vd, vint8m1_t vs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV8VInt16VBVIVIVU_TAMU, wmaccsu_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt8, OneDUInt8)
// vint16m2_t vwmaccsu_vx_int16m2_tamu (vbool8_t mask, vint16m2_t vd, int8_t rs1, vuint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX8VInt16VBVISIVU_TAMU, wmaccsu_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarInt8, OneDUInt8)
// vint32m2_t vwmaccsu_vv_int32m2_tamu (vbool16_t mask, vint32m2_t vd, vint16m1_t vs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV16VInt32VBVIVIVU_TAMU, wmaccsu_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt16, OneDUInt16)
// vint32m2_t vwmaccsu_vx_int32m2_tamu (vbool16_t mask, vint32m2_t vd, int16_t rs1, vuint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX16VInt32VBVISIVU_TAMU, wmaccsu_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarInt16, OneDUInt16)
// vint64m2_t vwmaccsu_vv_int64m2_tamu (vbool32_t mask, vint64m2_t vd, vint32m1_t vs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVV32VInt64VBVIVIVU_TAMU, wmaccsu_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt32, OneDUInt32)
// vint64m2_t vwmaccsu_vx_int64m2_tamu (vbool32_t mask, vint64m2_t vd, int32_t rs1, vuint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccsuVX32VInt64VBVISIVU_TAMU, wmaccsu_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarInt32, OneDUInt32)
// vint16m2_t vwmaccus_vx_int16m2_tamu (vbool8_t mask, vint16m2_t vd, uint8_t rs1, vint8m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX8VInt16VBVISUVI_TAMU, wmaccus_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, ScalarUInt8, OneDInt8)
// vint32m2_t vwmaccus_vx_int32m2_tamu (vbool16_t mask, vint32m2_t vd, uint16_t rs1, vint16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX16VInt32VBVISUVI_TAMU, wmaccus_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, ScalarUInt16, OneDInt16)
// vint64m2_t vwmaccus_vx_int64m2_tamu (vbool32_t mask, vint64m2_t vd, uint32_t rs1, vint32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(WmaccusVX32VInt64VBVISUVI_TAMU, wmaccus_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, ScalarUInt32, OneDInt32)

// vint8m1_t vmerge_vvm_int8m1_tu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM8VInt8VBVIVIVI_TU, merge_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vmerge_vxm_int8m1_tu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM8VInt8VBVIVISI_TU, merge_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vmerge_vvm_int16m1_tu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VInt16VBVIVIVI_TU, merge_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vmerge_vxm_int16m1_tu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM16VInt16VBVIVISI_TU, merge_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vmerge_vvm_int32m1_tu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VInt32VBVIVIVI_TU, merge_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vmerge_vxm_int32m1_tu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM32VInt32VBVIVISI_TU, merge_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vmerge_vvm_int64m1_tu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VInt64VBVIVIVI_TU, merge_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vmerge_vxm_int64m1_tu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM64VInt64VBVIVISI_TU, merge_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vmerge_vvm_uint8m1_tu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM8VUInt8VBVUVUVU_TU, merge_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vmerge_vxm_uint8m1_tu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM8VUInt8VBVUVUSU_TU, merge_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmerge_vvm_uint16m1_tu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VUInt16VBVUVUVU_TU, merge_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vmerge_vxm_uint16m1_tu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM16VUInt16VBVUVUSU_TU, merge_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmerge_vvm_uint32m1_tu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VUInt32VBVUVUVU_TU, merge_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vmerge_vxm_uint32m1_tu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM32VUInt32VBVUVUSU_TU, merge_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmerge_vvm_uint64m1_tu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VUInt64VBVUVUVU_TU, merge_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vmerge_vxm_uint64m1_tu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM64VUInt64VBVUVUSU_TU, merge_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vmerge_vvm_int8m1_ta (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM8VInt8VBVIVI_TA, merge_vvm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vmerge_vxm_int8m1_ta (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM8VInt8VBVISI_TA, merge_vxm, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vmerge_vvm_int16m1_ta (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VInt16VBVIVI_TA, merge_vvm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vmerge_vxm_int16m1_ta (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM16VInt16VBVISI_TA, merge_vxm, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vmerge_vvm_int32m1_ta (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VInt32VBVIVI_TA, merge_vvm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vmerge_vxm_int32m1_ta (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM32VInt32VBVISI_TA, merge_vxm, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vmerge_vvm_int64m1_ta (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VInt64VBVIVI_TA, merge_vvm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vmerge_vxm_int64m1_ta (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM64VInt64VBVISI_TA, merge_vxm, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vmerge_vvm_uint8m1_ta (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM8VUInt8VBVUVU_TA, merge_vvm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vmerge_vxm_uint8m1_ta (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM8VUInt8VBVUSU_TA, merge_vxm, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmerge_vvm_uint16m1_ta (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VUInt16VBVUVU_TA, merge_vvm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vmerge_vxm_uint16m1_ta (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM16VUInt16VBVUSU_TA, merge_vxm, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmerge_vvm_uint32m1_ta (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VUInt32VBVUVU_TA, merge_vvm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vmerge_vxm_uint32m1_ta (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM32VUInt32VBVUSU_TA, merge_vxm, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmerge_vvm_uint64m1_ta (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VUInt64VBVUVU_TA, merge_vvm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vmerge_vxm_uint64m1_ta (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVXM64VUInt64VBVUSU_TA, merge_vxm, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)

// vint8m1_t vmv_v_v_int8m1_tu (vint8m1_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV8VInt8VIVI_TU, mv_v_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vmv_v_x_int8m1_tu (vint8m1_t merge, int8_t src, size_t vl);
CUSTOM_OP_TYPE(MvX8VInt8VISI_TU, mv_v_x, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vmv_v_v_int16m1_tu (vint16m1_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VInt16VIVI_TU, mv_v_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vmv_v_x_int16m1_tu (vint16m1_t merge, int16_t src, size_t vl);
CUSTOM_OP_TYPE(MvX16VInt16VISI_TU, mv_v_x, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vmv_v_v_int32m1_tu (vint32m1_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VInt32VIVI_TU, mv_v_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vmv_v_x_int32m1_tu (vint32m1_t merge, int32_t src, size_t vl);
CUSTOM_OP_TYPE(MvX32VInt32VISI_TU, mv_v_x, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vmv_v_v_int64m1_tu (vint64m1_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VInt64VIVI_TU, mv_v_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vmv_v_x_int64m1_tu (vint64m1_t merge, int64_t src, size_t vl);
CUSTOM_OP_TYPE(MvX64VInt64VISI_TU, mv_v_x, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vmv_v_v_uint8m1_tu (vuint8m1_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV8VUInt8VUVU_TU, mv_v_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vmv_v_x_uint8m1_tu (vuint8m1_t merge, uint8_t src, size_t vl);
CUSTOM_OP_TYPE(MvX8VUInt8VUSU_TU, mv_v_x, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vmv_v_v_uint16m1_tu (vuint16m1_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VUInt16VUVU_TU, mv_v_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vmv_v_x_uint16m1_tu (vuint16m1_t merge, uint16_t src, size_t vl);
CUSTOM_OP_TYPE(MvX16VUInt16VUSU_TU, mv_v_x, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vmv_v_v_uint32m1_tu (vuint32m1_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VUInt32VUVU_TU, mv_v_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vmv_v_x_uint32m1_tu (vuint32m1_t merge, uint32_t src, size_t vl);
CUSTOM_OP_TYPE(MvX32VUInt32VUSU_TU, mv_v_x, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vmv_v_v_uint64m1_tu (vuint64m1_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VUInt64VUVU_TU, mv_v_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vmv_v_x_uint64m1_tu (vuint64m1_t merge, uint64_t src, size_t vl);
CUSTOM_OP_TYPE(MvX64VUInt64VUSU_TU, mv_v_x, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vmv_v_v_int8m1_ta (vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV8VInt8VI_TA, mv_v_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint8m1_t vmv_v_x_int8m1_ta (int8_t src, size_t vl);
CUSTOM_OP_TYPE(MvX8VInt8SI_TA, mv_v_x, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 1, ScalarInt8)
// vint16m1_t vmv_v_v_int16m1_ta (vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VInt16VI_TA, mv_v_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint16m1_t vmv_v_x_int16m1_ta (int16_t src, size_t vl);
CUSTOM_OP_TYPE(MvX16VInt16SI_TA, mv_v_x, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, ScalarInt16)
// vint32m1_t vmv_v_v_int32m1_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VInt32VI_TA, mv_v_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint32m1_t vmv_v_x_int32m1_ta (int32_t src, size_t vl);
CUSTOM_OP_TYPE(MvX32VInt32SI_TA, mv_v_x, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, ScalarInt32)
// vint64m1_t vmv_v_v_int64m1_ta (vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VInt64VI_TA, mv_v_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vint64m1_t vmv_v_x_int64m1_ta (int64_t src, size_t vl);
CUSTOM_OP_TYPE(MvX64VInt64SI_TA, mv_v_x, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, ScalarInt64)
// vuint8m1_t vmv_v_v_uint8m1_ta (vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV8VUInt8VU_TA, mv_v_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint8m1_t vmv_v_x_uint8m1_ta (uint8_t src, size_t vl);
CUSTOM_OP_TYPE(MvX8VUInt8SU_TA, mv_v_x, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 1, ScalarUInt8)
// vuint16m1_t vmv_v_v_uint16m1_ta (vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VUInt16VU_TA, mv_v_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint16m1_t vmv_v_x_uint16m1_ta (uint16_t src, size_t vl);
CUSTOM_OP_TYPE(MvX16VUInt16SU_TA, mv_v_x, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, ScalarUInt16)
// vuint32m1_t vmv_v_v_uint32m1_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VUInt32VU_TA, mv_v_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint32m1_t vmv_v_x_uint32m1_ta (uint32_t src, size_t vl);
CUSTOM_OP_TYPE(MvX32VUInt32SU_TA, mv_v_x, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, ScalarUInt32)
// vuint64m1_t vmv_v_v_uint64m1_ta (vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VUInt64VU_TA, mv_v_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vuint64m1_t vmv_v_x_uint64m1_ta (uint64_t src, size_t vl);
CUSTOM_OP_TYPE(MvX64VUInt64SU_TA, mv_v_x, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, ScalarUInt64)

// vint8m1_t vneg_v_int8m1_tu (vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VIVI_TU, neg_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vneg_v_int16m1_tu (vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VIVI_TU, neg_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vneg_v_int32m1_tu (vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VIVI_TU, neg_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vneg_v_int64m1_tu (vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VIVI_TU, neg_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vint8m1_t vneg_v_int8m1_ta (vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VI_TA, neg_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vneg_v_int16m1_ta (vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VI_TA, neg_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vneg_v_int32m1_ta (vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VI_TA, neg_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vneg_v_int64m1_ta (vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VI_TA, neg_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vint8m1_t vneg_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VBVIVI_TUMA, neg_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vneg_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VBVIVI_TUMA, neg_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vneg_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VBVIVI_TUMA, neg_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vneg_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VBVIVI_TUMA, neg_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint8m1_t vneg_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VBVIVI_TUMU, neg_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vneg_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VBVIVI_TUMU, neg_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vneg_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VBVIVI_TUMU, neg_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vneg_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VBVIVI_TUMU, neg_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint8m1_t vneg_v_int8m1_tama (vbool8_t mask, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VBVI_TAMA, neg_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vneg_v_int16m1_tama (vbool16_t mask, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VBVI_TAMA, neg_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vneg_v_int32m1_tama (vbool32_t mask, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VBVI_TAMA, neg_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vneg_v_int64m1_tama (vbool64_t mask, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VBVI_TAMA, neg_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt64)
// vint8m1_t vneg_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV8VInt8VBVIVI_TAMU, neg_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vneg_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV16VInt16VBVIVI_TAMU, neg_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vneg_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV32VInt32VBVIVI_TAMU, neg_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vneg_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NegV64VInt64VBVIVI_TAMU, neg_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)

// vint8m1_t vnot_v_int8m1_tu (vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VIVI_TU, not_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vnot_v_int16m1_tu (vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VIVI_TU, not_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vnot_v_int32m1_tu (vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VIVI_TU, not_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vnot_v_int64m1_tu (vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VIVI_TU, not_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VUVU_TU, not_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VUVU_TU, not_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VUVU_TU, not_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VUVU_TU, not_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vnot_v_int8m1_ta (vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VI_TA, not_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vnot_v_int16m1_ta (vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VI_TA, not_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vnot_v_int32m1_ta (vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VI_TA, not_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vnot_v_int64m1_ta (vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VI_TA, not_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_ta (vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VU_TA, not_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_ta (vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VU_TA, not_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_ta (vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VU_TA, not_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_ta (vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VU_TA, not_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vnot_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VBVIVI_TUMA, not_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vnot_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VBVIVI_TUMA, not_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vnot_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VBVIVI_TUMA, not_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vnot_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VBVIVI_TUMA, not_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VBVUVU_TUMA, not_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VBVUVU_TUMA, not_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VBVUVU_TUMA, not_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VBVUVU_TUMA, not_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vnot_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VBVIVI_TUMU, not_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vnot_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VBVIVI_TUMU, not_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vnot_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VBVIVI_TUMU, not_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vnot_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VBVIVI_TUMU, not_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VBVUVU_TUMU, not_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VBVUVU_TUMU, not_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VBVUVU_TUMU, not_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VBVUVU_TUMU, not_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vnot_v_int8m1_tama (vbool8_t mask, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VBVI_TAMA, not_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vnot_v_int16m1_tama (vbool16_t mask, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VBVI_TAMA, not_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vnot_v_int32m1_tama (vbool32_t mask, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VBVI_TAMA, not_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vnot_v_int64m1_tama (vbool64_t mask, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VBVI_TAMA, not_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VBVU_TAMA, not_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VBVU_TAMA, not_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VBVU_TAMA, not_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VBVU_TAMA, not_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vnot_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VInt8VBVIVI_TAMU, not_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vnot_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VInt16VBVIVI_TAMU, not_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vnot_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VInt32VBVIVI_TAMU, not_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vnot_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VInt64VBVIVI_TAMU, not_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vnot_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV8VUInt8VBVUVU_TAMU, not_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vnot_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV16VUInt16VBVUVU_TAMU, not_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vnot_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV32VUInt32VBVUVU_TAMU, not_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vnot_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(NotV64VUInt64VBVUVU_TAMU, not_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)

// vint16m2_t vwcvt_x_x_v_i16m2_tu (vint16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VIVI_TU, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_tu (vuint16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VUVU_TU, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_tu (vint32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VIVI_TU, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_tu (vuint32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VUVU_TU, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_tu (vint64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VIVI_TU, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_tu (vuint64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VUVU_TU, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vint16m2_t vwcvt_x_x_v_i16m2_ta (vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VI_TA, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt16, 1, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_ta (vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VU_TA, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt16, 1, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_ta (vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VI_TA, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 1, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_ta (vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VU_TA, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 1, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VI_TA, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 1, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VU_TA, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 1, OneDUInt32)
// vint16m2_t vwcvt_x_x_v_i16m2_tuma (vbool8_t mask, vint16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VBVIVI_TUMA, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_tuma (vbool8_t mask, vuint16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VBVUVU_TUMA, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_tuma (vbool16_t mask, vint32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VBVIVI_TUMA, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_tuma (vbool16_t mask, vuint32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VBVUVU_TUMA, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_tuma (vbool32_t mask, vint64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VBVIVI_TUMA, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_tuma (vbool32_t mask, vuint64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VBVUVU_TUMA, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m2_t vwcvt_x_x_v_i16m2_tumu (vbool8_t mask, vint16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VBVIVI_TUMU, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_tumu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VBVUVU_TUMU, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_tumu (vbool16_t mask, vint32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VBVIVI_TUMU, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_tumu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VBVUVU_TUMU, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_tumu (vbool32_t mask, vint64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VBVIVI_TUMU, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_tumu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VBVUVU_TUMU, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m2_t vwcvt_x_x_v_i16m2_tama (vbool8_t mask, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VBVI_TAMA, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_tama (vbool8_t mask, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VBVU_TAMA, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_tama (vbool16_t mask, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VBVI_TAMA, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_tama (vbool16_t mask, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VBVU_TAMA, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_tama (vbool32_t mask, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VBVI_TAMA, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_tama (vbool32_t mask, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VBVU_TAMA, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt32)
// vint16m2_t vwcvt_x_x_v_i16m2_tamu (vbool8_t mask, vint16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV8VInt16VBVIVI_TAMU, wcvt_x_x_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vuint16m2_t vwcvtu_x_x_v_u16m2_tamu (vbool8_t mask, vuint16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV8VUInt16VBVUVU_TAMU, wcvtu_x_x_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vint32m2_t vwcvt_x_x_v_i32m2_tamu (vbool16_t mask, vint32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV16VInt32VBVIVI_TAMU, wcvt_x_x_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vuint32m2_t vwcvtu_x_x_v_u32m2_tamu (vbool16_t mask, vuint32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV16VUInt32VBVUVU_TAMU, wcvtu_x_x_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vint64m2_t vwcvt_x_x_v_i64m2_tamu (vbool32_t mask, vint64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtV32VInt64VBVIVI_TAMU, wcvt_x_x_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint64m2_t vwcvtu_x_x_v_u64m2_tamu (vbool32_t mask, vuint64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(WcvtuV32VUInt64VBVUVU_TAMU, wcvtu_x_x_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint8mf2_t vncvt_x_x_w_i8mf2_tu (vint8mf2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VIVI_TU, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_tu (vuint8mf2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VUVU_TU, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_tu (vint16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VIVI_TU, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_tu (vuint16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VUVU_TU, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_tu (vint32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VIVI_TU, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_tu (vuint32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VUVU_TU, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt64)
// vint8mf2_t vncvt_x_x_w_i8mf2_ta (vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VI_TA, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 1, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_ta (vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VU_TA, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 1, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VI_TA, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 1, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VU_TA, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 1, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_ta (vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VI_TA, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 1, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_ta (vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VU_TA, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 1, OneDUInt64)
// vint8mf2_t vncvt_x_x_w_i8mf2_tuma (vbool16_t mask, vint8mf2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VBVIVI_TUMA, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_tuma (vbool16_t mask, vuint8mf2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VBVUVU_TUMA, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_tuma (vbool32_t mask, vint16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VBVIVI_TUMA, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_tuma (vbool32_t mask, vuint16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VBVUVU_TUMA, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_tuma (vbool64_t mask, vint32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VBVIVI_TUMA, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_tuma (vbool64_t mask, vuint32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VBVUVU_TUMA, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
// vint8mf2_t vncvt_x_x_w_i8mf2_tumu (vbool16_t mask, vint8mf2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VBVIVI_TUMU, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_tumu (vbool16_t mask, vuint8mf2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VBVUVU_TUMU, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_tumu (vbool32_t mask, vint16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VBVIVI_TUMU, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_tumu (vbool32_t mask, vuint16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VBVUVU_TUMU, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_tumu (vbool64_t mask, vint32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VBVIVI_TUMU, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_tumu (vbool64_t mask, vuint32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VBVUVU_TUMU, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
// vint8mf2_t vncvt_x_x_w_i8mf2_tama (vbool16_t mask, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VBVI_TAMA, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_tama (vbool16_t mask, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VBVU_TAMA, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_tama (vbool32_t mask, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VBVI_TAMA, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_tama (vbool32_t mask, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VBVU_TAMA, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_tama (vbool64_t mask, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VBVI_TAMA, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_tama (vbool64_t mask, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VBVU_TAMA, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt64)
// vint8mf2_t vncvt_x_x_w_i8mf2_tamu (vbool16_t mask, vint8mf2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VInt8VBVIVI_TAMU, ncvt_x_x_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt16)
// vuint8mf2_t vncvt_x_x_w_u8mf2_tamu (vbool16_t mask, vuint8mf2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV16VUInt8VBVUVU_TAMU, ncvt_x_x_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
// vint16mf2_t vncvt_x_x_w_i16mf2_tamu (vbool32_t mask, vint16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VInt16VBVIVI_TAMU, ncvt_x_x_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt32)
// vuint16mf2_t vncvt_x_x_w_u16mf2_tamu (vbool32_t mask, vuint16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV32VUInt16VBVUVU_TAMU, ncvt_x_x_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
// vint32mf2_t vncvt_x_x_w_i32mf2_tamu (vbool64_t mask, vint32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VInt32VBVIVI_TAMU, ncvt_x_x_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt64)
// vuint32mf2_t vncvt_x_x_w_u32mf2_tamu (vbool64_t mask, vuint32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(NcvtV64VUInt32VBVUVU_TAMU, ncvt_x_x_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)

// vint8m1_t vsadd_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VIVIVI_TU, sadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VIVISI_TU, sadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VIVIVI_TU, sadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VIVISI_TU, sadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VIVIVI_TU, sadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VIVISI_TU, sadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VIVIVI_TU, sadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VIVISI_TU, sadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VUVUVU_TU, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VUVUSU_TU, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VUVUVU_TU, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VUVUSU_TU, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VUVUVU_TU, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VUVUSU_TU, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VUVUVU_TU, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VUVUSU_TU, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VIVIVI_TU, ssub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VIVISI_TU, ssub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VIVIVI_TU, ssub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VIVISI_TU, ssub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VIVIVI_TU, ssub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VIVISI_TU, ssub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VIVIVI_TU, ssub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VIVISI_TU, ssub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VUVUVU_TU, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VUVUSU_TU, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VUVUVU_TU, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VUVUSU_TU, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VUVUVU_TU, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VUVUSU_TU, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VUVUVU_TU, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VUVUSU_TU, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vsadd_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VIVI_TA, sadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VISI_TA, sadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VIVI_TA, sadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VISI_TA, sadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VIVI_TA, sadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VISI_TA, sadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VIVI_TA, sadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VISI_TA, sadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VUVU_TA, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VUSU_TA, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VUVU_TA, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VUSU_TA, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VUVU_TA, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VUSU_TA, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VUVU_TA, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VUSU_TA, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VIVI_TA, ssub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VISI_TA, ssub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VIVI_TA, ssub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VISI_TA, ssub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VIVI_TA, ssub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VISI_TA, ssub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VIVI_TA, ssub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VISI_TA, ssub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VUVU_TA, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VUSU_TA, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VUVU_TA, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VUSU_TA, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VUVU_TA, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VUSU_TA, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VUVU_TA, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VUSU_TA, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vsadd_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VBVIVIVI_TUMA, sadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VBVIVISI_TUMA, sadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VBVIVIVI_TUMA, sadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VBVIVISI_TUMA, sadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VBVIVIVI_TUMA, sadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VBVIVISI_TUMA, sadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VBVIVIVI_TUMA, sadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VBVIVISI_TUMA, sadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VBVUVUVU_TUMA, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VBVUVUSU_TUMA, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VBVUVUVU_TUMA, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VBVUVUSU_TUMA, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VBVUVUVU_TUMA, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VBVUVUSU_TUMA, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VBVUVUVU_TUMA, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VBVUVUSU_TUMA, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VBVIVIVI_TUMA, ssub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VBVIVISI_TUMA, ssub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VBVIVIVI_TUMA, ssub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VBVIVISI_TUMA, ssub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VBVIVIVI_TUMA, ssub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VBVIVISI_TUMA, ssub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VBVIVIVI_TUMA, ssub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VBVIVISI_TUMA, ssub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VBVUVUVU_TUMA, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VBVUVUSU_TUMA, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VBVUVUVU_TUMA, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VBVUVUSU_TUMA, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VBVUVUVU_TUMA, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VBVUVUSU_TUMA, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VBVUVUVU_TUMA, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VBVUVUSU_TUMA, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vsadd_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VBVIVIVI_TUMU, sadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VBVIVISI_TUMU, sadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VBVIVIVI_TUMU, sadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VBVIVISI_TUMU, sadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VBVIVIVI_TUMU, sadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VBVIVISI_TUMU, sadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VBVIVIVI_TUMU, sadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VBVIVISI_TUMU, sadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VBVUVUVU_TUMU, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VBVUVUSU_TUMU, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VBVUVUVU_TUMU, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VBVUVUSU_TUMU, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VBVUVUVU_TUMU, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VBVUVUSU_TUMU, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VBVUVUVU_TUMU, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VBVUVUSU_TUMU, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VBVIVIVI_TUMU, ssub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VBVIVISI_TUMU, ssub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VBVIVIVI_TUMU, ssub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VBVIVISI_TUMU, ssub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VBVIVIVI_TUMU, ssub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VBVIVISI_TUMU, ssub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VBVIVIVI_TUMU, ssub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VBVIVISI_TUMU, ssub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VBVUVUVU_TUMU, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VBVUVUSU_TUMU, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VBVUVUVU_TUMU, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VBVUVUSU_TUMU, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VBVUVUVU_TUMU, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VBVUVUSU_TUMU, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VBVUVUVU_TUMU, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VBVUVUSU_TUMU, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vsadd_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VBVIVI_TAMA, sadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VBVISI_TAMA, sadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VBVIVI_TAMA, sadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VBVISI_TAMA, sadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VBVIVI_TAMA, sadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VBVISI_TAMA, sadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VBVIVI_TAMA, sadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VBVISI_TAMA, sadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VBVUVU_TAMA, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VBVUSU_TAMA, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VBVUVU_TAMA, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VBVUSU_TAMA, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VBVUVU_TAMA, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VBVUSU_TAMA, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VBVUVU_TAMA, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VBVUSU_TAMA, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VBVIVI_TAMA, ssub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VBVISI_TAMA, ssub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VBVIVI_TAMA, ssub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VBVISI_TAMA, ssub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VBVIVI_TAMA, ssub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VBVISI_TAMA, ssub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VBVIVI_TAMA, ssub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VBVISI_TAMA, ssub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VBVUVU_TAMA, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VBVUSU_TAMA, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VBVUVU_TAMA, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VBVUSU_TAMA, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VBVUVU_TAMA, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VBVUSU_TAMA, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VBVUVU_TAMA, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VBVUSU_TAMA, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vsadd_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV8VInt8VBVIVIVI_TAMU, sadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsadd_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX8VInt8VBVIVISI_TAMU, sadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsadd_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV16VInt16VBVIVIVI_TAMU, sadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsadd_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX16VInt16VBVIVISI_TAMU, sadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsadd_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV32VInt32VBVIVIVI_TAMU, sadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsadd_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX32VInt32VBVIVISI_TAMU, sadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsadd_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVV64VInt64VBVIVIVI_TAMU, sadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsadd_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SaddVX64VInt64VBVIVISI_TAMU, sadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vsaddu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV8VUInt8VBVUVUVU_TAMU, saddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vsaddu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX8VUInt8VBVUVUSU_TAMU, saddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vsaddu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV16VUInt16VBVUVUVU_TAMU, saddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vsaddu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX16VUInt16VBVUVUSU_TAMU, saddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vsaddu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV32VUInt32VBVUVUVU_TAMU, saddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vsaddu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX32VUInt32VBVUVUSU_TAMU, saddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vsaddu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVV64VUInt64VBVUVUVU_TAMU, saddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vsaddu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SadduVX64VUInt64VBVUVUSU_TAMU, saddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vssub_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV8VInt8VBVIVIVI_TAMU, ssub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vssub_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX8VInt8VBVIVISI_TAMU, ssub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vssub_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV16VInt16VBVIVIVI_TAMU, ssub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vssub_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX16VInt16VBVIVISI_TAMU, ssub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vssub_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV32VInt32VBVIVIVI_TAMU, ssub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vssub_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX32VInt32VBVIVISI_TAMU, ssub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vssub_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVV64VInt64VBVIVIVI_TAMU, ssub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vssub_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubVX64VInt64VBVIVISI_TAMU, ssub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vssubu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV8VUInt8VBVUVUVU_TAMU, ssubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssubu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX8VUInt8VBVUVUSU_TAMU, ssubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vssubu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV16VUInt16VBVUVUVU_TAMU, ssubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssubu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX16VUInt16VBVUVUSU_TAMU, ssubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vssubu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV32VUInt32VBVUVUVU_TAMU, ssubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssubu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX32VUInt32VBVUVUSU_TAMU, ssubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vssubu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVV64VUInt64VBVUVUVU_TAMU, ssubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssubu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(SsubuVX64VUInt64VBVUVUSU_TAMU, ssubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vaadd_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VIVIVI_TU, aadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VIVISI_TU, aadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VIVIVI_TU, aadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VIVISI_TU, aadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VIVIVI_TU, aadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VIVISI_TU, aadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VIVIVI_TU, aadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VIVISI_TU, aadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VUVUVU_TU, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VUVUSU_TU, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VUVUVU_TU, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VUVUSU_TU, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VUVUVU_TU, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VUVUSU_TU, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VUVUVU_TU, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VUVUSU_TU, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VIVIVI_TU, asub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VIVISI_TU, asub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VIVIVI_TU, asub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VIVISI_TU, asub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VIVIVI_TU, asub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VIVISI_TU, asub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VIVIVI_TU, asub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VIVISI_TU, asub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VUVUVU_TU, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VUVUSU_TU, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VUVUVU_TU, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VUVUSU_TU, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VUVUVU_TU, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VUVUSU_TU, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VUVUVU_TU, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VUVUSU_TU, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vaadd_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VIVI_TA, aadd_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VISI_TA, aadd_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VIVI_TA, aadd_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VISI_TA, aadd_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VIVI_TA, aadd_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VISI_TA, aadd_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VIVI_TA, aadd_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VISI_TA, aadd_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VUVU_TA, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VUSU_TA, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VUVU_TA, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VUSU_TA, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VUVU_TA, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VUSU_TA, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VUVU_TA, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VUSU_TA, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VIVI_TA, asub_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VISI_TA, asub_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VIVI_TA, asub_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VISI_TA, asub_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VIVI_TA, asub_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VISI_TA, asub_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VIVI_TA, asub_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VISI_TA, asub_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VUVU_TA, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_ta (vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VUSU_TA, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VUVU_TA, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_ta (vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VUSU_TA, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VUVU_TA, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_ta (vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VUSU_TA, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VUVU_TA, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_ta (vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VUSU_TA, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUInt64)
// vint8m1_t vaadd_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VBVIVIVI_TUMA, aadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VBVIVISI_TUMA, aadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VBVIVIVI_TUMA, aadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VBVIVISI_TUMA, aadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VBVIVIVI_TUMA, aadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VBVIVISI_TUMA, aadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VBVIVIVI_TUMA, aadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VBVIVISI_TUMA, aadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VBVUVUVU_TUMA, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VBVUVUSU_TUMA, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VBVUVUVU_TUMA, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VBVUVUSU_TUMA, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VBVUVUVU_TUMA, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VBVUVUSU_TUMA, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VBVUVUVU_TUMA, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VBVUVUSU_TUMA, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VBVIVIVI_TUMA, asub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VBVIVISI_TUMA, asub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VBVIVIVI_TUMA, asub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VBVIVISI_TUMA, asub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VBVIVIVI_TUMA, asub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VBVIVISI_TUMA, asub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VBVIVIVI_TUMA, asub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VBVIVISI_TUMA, asub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VBVUVUVU_TUMA, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VBVUVUSU_TUMA, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VBVUVUVU_TUMA, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VBVUVUSU_TUMA, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VBVUVUVU_TUMA, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VBVUVUSU_TUMA, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VBVUVUVU_TUMA, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VBVUVUSU_TUMA, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vaadd_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VBVIVIVI_TUMU, aadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VBVIVISI_TUMU, aadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VBVIVIVI_TUMU, aadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VBVIVISI_TUMU, aadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VBVIVIVI_TUMU, aadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VBVIVISI_TUMU, aadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VBVIVIVI_TUMU, aadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VBVIVISI_TUMU, aadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VBVUVUVU_TUMU, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VBVUVUSU_TUMU, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VBVUVUVU_TUMU, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VBVUVUSU_TUMU, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VBVUVUVU_TUMU, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VBVUVUSU_TUMU, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VBVUVUVU_TUMU, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VBVUVUSU_TUMU, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VBVIVIVI_TUMU, asub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VBVIVISI_TUMU, asub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VBVIVIVI_TUMU, asub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VBVIVISI_TUMU, asub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VBVIVIVI_TUMU, asub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VBVIVISI_TUMU, asub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VBVIVIVI_TUMU, asub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VBVIVISI_TUMU, asub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VBVUVUVU_TUMU, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VBVUVUSU_TUMU, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VBVUVUVU_TUMU, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VBVUVUSU_TUMU, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VBVUVUVU_TUMU, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VBVUVUSU_TUMU, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VBVUVUVU_TUMU, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VBVUVUSU_TUMU, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vaadd_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VBVIVI_TAMA, aadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VBVISI_TAMA, aadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VBVIVI_TAMA, aadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VBVISI_TAMA, aadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VBVIVI_TAMA, aadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VBVISI_TAMA, aadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VBVIVI_TAMA, aadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VBVISI_TAMA, aadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VBVUVU_TAMA, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VBVUSU_TAMA, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VBVUVU_TAMA, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VBVUSU_TAMA, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VBVUVU_TAMA, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VBVUSU_TAMA, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VBVUVU_TAMA, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VBVUSU_TAMA, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VBVIVI_TAMA, asub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VBVISI_TAMA, asub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VBVIVI_TAMA, asub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VBVISI_TAMA, asub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VBVIVI_TAMA, asub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VBVISI_TAMA, asub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VBVIVI_TAMA, asub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VBVISI_TAMA, asub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VBVUVU_TAMA, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VBVUSU_TAMA, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VBVUVU_TAMA, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VBVUSU_TAMA, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VBVUVU_TAMA, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VBVUSU_TAMA, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VBVUVU_TAMA, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VBVUSU_TAMA, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUInt64)
// vint8m1_t vaadd_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV8VInt8VBVIVIVI_TAMU, aadd_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vaadd_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX8VInt8VBVIVISI_TAMU, aadd_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vaadd_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV16VInt16VBVIVIVI_TAMU, aadd_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vaadd_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX16VInt16VBVIVISI_TAMU, aadd_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vaadd_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV32VInt32VBVIVIVI_TAMU, aadd_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vaadd_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX32VInt32VBVIVISI_TAMU, aadd_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vaadd_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVV64VInt64VBVIVIVI_TAMU, aadd_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vaadd_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AaddVX64VInt64VBVIVISI_TAMU, aadd_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vaaddu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV8VUInt8VBVUVUVU_TAMU, aaddu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vaaddu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX8VUInt8VBVUVUSU_TAMU, aaddu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vaaddu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV16VUInt16VBVUVUVU_TAMU, aaddu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vaaddu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX16VUInt16VBVUVUSU_TAMU, aaddu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vaaddu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV32VUInt32VBVUVUVU_TAMU, aaddu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vaaddu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX32VUInt32VBVUVUSU_TAMU, aaddu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vaaddu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVV64VUInt64VBVUVUVU_TAMU, aaddu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vaaddu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AadduVX64VUInt64VBVUVUSU_TAMU, aaddu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)
// vint8m1_t vasub_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV8VInt8VBVIVIVI_TAMU, asub_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vasub_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX8VInt8VBVIVISI_TAMU, asub_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vasub_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV16VInt16VBVIVIVI_TAMU, asub_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vasub_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX16VInt16VBVIVISI_TAMU, asub_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vasub_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV32VInt32VBVIVIVI_TAMU, asub_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vasub_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX32VInt32VBVIVISI_TAMU, asub_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vasub_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVV64VInt64VBVIVIVI_TAMU, asub_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vasub_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubVX64VInt64VBVIVISI_TAMU, asub_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vuint8m1_t vasubu_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV8VUInt8VBVUVUVU_TAMU, asubu_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vasubu_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, uint8_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX8VUInt8VBVUVUSU_TAMU, asubu_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUInt8)
// vuint16m1_t vasubu_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV16VUInt16VBVUVUVU_TAMU, asubu_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vasubu_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, uint16_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX16VUInt16VBVUVUSU_TAMU, asubu_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUInt16)
// vuint32m1_t vasubu_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV32VUInt32VBVUVUVU_TAMU, asubu_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vasubu_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, uint32_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX32VUInt32VBVUVUSU_TAMU, asubu_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUInt32)
// vuint64m1_t vasubu_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVV64VUInt64VBVUVUVU_TAMU, asubu_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vasubu_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, uint64_t op2, size_t vl);
CUSTOM_OP_TYPE(AsubuVX64VUInt64VBVUVUSU_TAMU, asubu_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUInt64)

// vint8m1_t vsmul_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VIVIVI_TU, smul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VIVISI_TU, smul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VIVIVI_TU, smul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VIVISI_TU, smul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VIVIVI_TU, smul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VIVISI_TU, smul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VIVIVI_TU, smul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VIVISI_TU, smul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarInt64)
// vint8m1_t vsmul_vv_int8m1_ta (vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VIVI_TA, smul_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_ta (vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VISI_TA, smul_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_ta (vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VIVI_TA, smul_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_ta (vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VISI_TA, smul_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_ta (vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VIVI_TA, smul_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_ta (vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VISI_TA, smul_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_ta (vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VIVI_TA, smul_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_ta (vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VISI_TA, smul_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarInt64)
// vint8m1_t vsmul_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VBVIVIVI_TUMA, smul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VBVIVISI_TUMA, smul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VBVIVIVI_TUMA, smul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VBVIVISI_TUMA, smul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VBVIVIVI_TUMA, smul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VBVIVISI_TUMA, smul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VBVIVIVI_TUMA, smul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VBVIVISI_TUMA, smul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vint8m1_t vsmul_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VBVIVIVI_TUMU, smul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VBVIVISI_TUMU, smul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VBVIVIVI_TUMU, smul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VBVIVISI_TUMU, smul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VBVIVIVI_TUMU, smul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VBVIVISI_TUMU, smul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VBVIVIVI_TUMU, smul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VBVIVISI_TUMU, smul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)
// vint8m1_t vsmul_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VBVIVI_TAMA, smul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VBVISI_TAMA, smul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VBVIVI_TAMA, smul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VBVISI_TAMA, smul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VBVIVI_TAMA, smul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VBVISI_TAMA, smul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VBVIVI_TAMA, smul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VBVISI_TAMA, smul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarInt64)
// vint8m1_t vsmul_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vint8m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV8VInt8VBVIVIVI_TAMU, smul_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDInt8)
// vint8m1_t vsmul_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, int8_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX8VInt8VBVIVISI_TAMU, smul_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarInt8)
// vint16m1_t vsmul_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vint16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV16VInt16VBVIVIVI_TAMU, smul_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDInt16)
// vint16m1_t vsmul_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, int16_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX16VInt16VBVIVISI_TAMU, smul_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarInt16)
// vint32m1_t vsmul_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vint32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV32VInt32VBVIVIVI_TAMU, smul_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDInt32)
// vint32m1_t vsmul_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, int32_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX32VInt32VBVIVISI_TAMU, smul_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarInt32)
// vint64m1_t vsmul_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vint64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVV64VInt64VBVIVIVI_TAMU, smul_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDInt64)
// vint64m1_t vsmul_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, int64_t op2, size_t vl);
CUSTOM_OP_TYPE(SmulVX64VInt64VBVIVISI_TAMU, smul_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarInt64)

// vuint8m1_t vssrl_vv_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VUVUVU_TU, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_tu (vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VUVUSL_TU, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VUVUVU_TU, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_tu (vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VUVUSL_TU, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VUVUVU_TU, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_tu (vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VUVUSL_TU, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VUVUVU_TU, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_tu (vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VUVUSL_TU, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_tu (vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VIVIVU_TU, ssra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_tu (vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VIVISL_TU, ssra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_tu (vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VIVIVU_TU, ssra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_tu (vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VIVISL_TU, ssra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_tu (vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VIVIVU_TU, ssra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_tu (vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VIVISL_TU, ssra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_tu (vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VIVIVU_TU, ssra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_tu (vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VIVISL_TU, ssra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vssrl_vv_uint8m1_ta (vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VUVU_TA, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_ta (vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VUSL_TA, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_ta (vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VUVU_TA, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_ta (vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VUSL_TA, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_ta (vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VUVU_TA, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_ta (vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VUSL_TA, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_ta (vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VUVU_TA, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_ta (vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VUSL_TA, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_ta (vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VIVU_TA, ssra_vv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_ta (vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VISL_TA, ssra_vx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_ta (vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VIVU_TA, ssra_vv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_ta (vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VISL_TA, ssra_vx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_ta (vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VIVU_TA, ssra_vv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_ta (vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VISL_TA, ssra_vx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_ta (vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VIVU_TA, ssra_vv, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_ta (vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VISL_TA, ssra_vx, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vssrl_vv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VBVUVUVU_TUMA, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VBVUVUSL_TUMA, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VBVUVUVU_TUMA, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VBVUVUSL_TUMA, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VBVUVUVU_TUMA, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VBVUVUSL_TUMA, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VBVUVUVU_TUMA, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VBVUVUSL_TUMA, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VBVIVIVU_TUMA, ssra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VBVIVISL_TUMA, ssra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VBVIVIVU_TUMA, ssra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VBVIVISL_TUMA, ssra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VBVIVIVU_TUMA, ssra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VBVIVISL_TUMA, ssra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VBVIVIVU_TUMA, ssra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_tuma (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VBVIVISL_TUMA, ssra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vssrl_vv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VBVUVUVU_TUMU, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VBVUVUSL_TUMU, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VBVUVUVU_TUMU, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VBVUVUSL_TUMU, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VBVUVUVU_TUMU, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VBVUVUSL_TUMU, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VBVUVUVU_TUMU, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VBVUVUSL_TUMU, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VBVIVIVU_TUMU, ssra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VBVIVISL_TUMU, ssra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VBVIVIVU_TUMU, ssra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VBVIVISL_TUMU, ssra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VBVIVIVU_TUMU, ssra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VBVIVISL_TUMU, ssra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VBVIVIVU_TUMU, ssra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_tumu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VBVIVISL_TUMU, ssra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vssrl_vv_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VBVUVU_TAMA, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_tama (vbool8_t mask, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VBVUSL_TAMA, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VBVUVU_TAMA, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_tama (vbool16_t mask, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VBVUSL_TAMA, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VBVUVU_TAMA, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_tama (vbool32_t mask, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VBVUSL_TAMA, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VBVUVU_TAMA, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_tama (vbool64_t mask, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VBVUSL_TAMA, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_tama (vbool8_t mask, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VBVIVU_TAMA, ssra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_tama (vbool8_t mask, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VBVISL_TAMA, ssra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_tama (vbool16_t mask, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VBVIVU_TAMA, ssra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_tama (vbool16_t mask, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VBVISL_TAMA, ssra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_tama (vbool32_t mask, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VBVIVU_TAMA, ssra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_tama (vbool32_t mask, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VBVISL_TAMA, ssra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_tama (vbool64_t mask, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VBVIVU_TAMA, ssra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_tama (vbool64_t mask, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VBVISL_TAMA, ssra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vssrl_vv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV8VUInt8VBVUVUVU_TAMU, ssrl_vv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vssrl_vx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX8VUInt8VBVUVUSL_TAMU, ssrl_vx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarUIntXLen)
// vuint16m1_t vssrl_vv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV16VUInt16VBVUVUVU_TAMU, ssrl_vv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vssrl_vx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX16VUInt16VBVUVUSL_TAMU, ssrl_vx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarUIntXLen)
// vuint32m1_t vssrl_vv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV32VUInt32VBVUVUVU_TAMU, ssrl_vv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vssrl_vx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX32VUInt32VBVUVUSL_TAMU, ssrl_vx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarUIntXLen)
// vuint64m1_t vssrl_vv_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVV64VUInt64VBVUVUVU_TAMU, ssrl_vv, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vuint64m1_t vssrl_vx_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, vuint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsrlVX64VUInt64VBVUVUSL_TAMU, ssrl_vx, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vssra_vv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV8VInt8VBVIVIVU_TAMU, ssra_vv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vssra_vx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint8m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX8VInt8VBVIVISL_TAMU, ssra_vx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarUIntXLen)
// vint16m1_t vssra_vv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV16VInt16VBVIVIVU_TAMU, ssra_vv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vssra_vx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint16m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX16VInt16VBVIVISL_TAMU, ssra_vx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarUIntXLen)
// vint32m1_t vssra_vv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV32VInt32VBVIVIVU_TAMU, ssra_vv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vssra_vx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint32m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX32VInt32VBVIVISL_TAMU, ssra_vx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarUIntXLen)
// vint64m1_t vssra_vv_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, vuint64m1_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVV64VInt64VBVIVIVU_TAMU, ssra_vv, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vint64m1_t vssra_vx_int64m1_tamu (vbool64_t mask, vint64m1_t merge, vint64m1_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(SsraVX64VInt64VBVIVISL_TAMU, ssra_vx, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarUIntXLen)

// vint8m1_t vnclip_wv_int8m1_tu (vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VIVIVU_TU, nclip_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_tu (vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VIVISL_TU, nclip_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_tu (vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VIVIVU_TU, nclip_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_tu (vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VIVISL_TU, nclip_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_tu (vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VIVIVU_TU, nclip_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_tu (vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VIVISL_TU, nclip_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_tu (vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VUVUVU_TU, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_tu (vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VUVUSL_TU, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_tu (vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VUVUVU_TU, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_tu (vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VUVUSL_TU, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_tu (vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VUVUVU_TU, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_tu (vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VUVUSL_TU, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnclip_wv_int8m1_ta (vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VIVU_TA, nclip_wv, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 2, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_ta (vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VISL_TA, nclip_wx, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 2, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_ta (vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VIVU_TA, nclip_wv, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 2, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_ta (vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VISL_TA, nclip_wx, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 2, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_ta (vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VIVU_TA, nclip_wv, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 2, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_ta (vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VISL_TA, nclip_wx, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 2, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_ta (vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VUVU_TA, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 2, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_ta (vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VUSL_TA, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 2, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_ta (vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VUVU_TA, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 2, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_ta (vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VUSL_TA, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 2, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_ta (vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VUVU_TA, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 2, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_ta (vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VUSL_TA, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 2, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnclip_wv_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VBVIVIVU_TUMA, nclip_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_tuma (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VBVIVISL_TUMA, nclip_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VBVIVIVU_TUMA, nclip_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_tuma (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VBVIVISL_TUMA, nclip_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VBVIVIVU_TUMA, nclip_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_tuma (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VBVIVISL_TUMA, nclip_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VBVUVUVU_TUMA, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VBVUVUSL_TUMA, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VBVUVUVU_TUMA, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VBVUVUSL_TUMA, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VBVUVUVU_TUMA, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VBVUVUSL_TUMA, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnclip_wv_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VBVIVIVU_TUMU, nclip_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_tumu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VBVIVISL_TUMU, nclip_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VBVIVIVU_TUMU, nclip_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_tumu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VBVIVISL_TUMU, nclip_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VBVIVIVU_TUMU, nclip_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_tumu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VBVIVISL_TUMU, nclip_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VBVUVUVU_TUMU, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VBVUVUSL_TUMU, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VBVUVUVU_TUMU, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VBVUVUSL_TUMU, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VBVUVUVU_TUMU, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VBVUVUSL_TUMU, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnclip_wv_int8m1_tama (vbool8_t mask, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VBVIVU_TAMA, nclip_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_tama (vbool8_t mask, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VBVISL_TAMA, nclip_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_tama (vbool16_t mask, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VBVIVU_TAMA, nclip_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_tama (vbool16_t mask, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VBVISL_TAMA, nclip_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_tama (vbool32_t mask, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VBVIVU_TAMA, nclip_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_tama (vbool32_t mask, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VBVISL_TAMA, nclip_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_tama (vbool8_t mask, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VBVUVU_TAMA, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_tama (vbool8_t mask, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VBVUSL_TAMA, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_tama (vbool16_t mask, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VBVUVU_TAMA, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_tama (vbool16_t mask, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VBVUSL_TAMA, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_tama (vbool32_t mask, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VBVUVU_TAMA, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_tama (vbool32_t mask, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VBVUSL_TAMA, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt64, ScalarUIntXLen)
// vint8m1_t vnclip_wv_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV8VInt8VBVIVIVU_TAMU, nclip_wv, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, OneDUInt8)
// vint8m1_t vnclip_wx_int8m1_tamu (vbool8_t mask, vint8m1_t merge, vint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX8VInt8VBVIVISL_TAMU, nclip_wx, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt16, ScalarUIntXLen)
// vint16m1_t vnclip_wv_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV16VInt16VBVIVIVU_TAMU, nclip_wv, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, OneDUInt16)
// vint16m1_t vnclip_wx_int16m1_tamu (vbool16_t mask, vint16m1_t merge, vint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX16VInt16VBVIVISL_TAMU, nclip_wx, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt32, ScalarUIntXLen)
// vint32m1_t vnclip_wv_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWV32VInt32VBVIVIVU_TAMU, nclip_wv, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, OneDUInt32)
// vint32m1_t vnclip_wx_int32m1_tamu (vbool32_t mask, vint32m1_t merge, vint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipWX32VInt32VBVIVISL_TAMU, nclip_wx, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt64, ScalarUIntXLen)
// vuint8m1_t vnclipu_wv_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, vuint8m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV8VUInt8VBVUVUVU_TAMU, nclipu_wv, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, OneDUInt8)
// vuint8m1_t vnclipu_wx_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, vuint16m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX8VUInt8VBVUVUSL_TAMU, nclipu_wx, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt16, ScalarUIntXLen)
// vuint16m1_t vnclipu_wv_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, vuint16m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV16VUInt16VBVUVUVU_TAMU, nclipu_wv, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, OneDUInt16)
// vuint16m1_t vnclipu_wx_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, vuint32m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX16VUInt16VBVUVUSL_TAMU, nclipu_wx, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt32, ScalarUIntXLen)
// vuint32m1_t vnclipu_wv_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, vuint32m1_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWV32VUInt32VBVUVUVU_TAMU, nclipu_wv, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, OneDUInt32)
// vuint32m1_t vnclipu_wx_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, vuint64m2_t op1, size_t shift, size_t vl);
CUSTOM_OP_TYPE(NclipuWX32VUInt32VBVUVUSL_TAMU, nclipu_wx, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt64, ScalarUIntXLen)

// vfloat16m1_t vfadd_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VFVFVF_TU, fadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VFVFSF_TU, fadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VFVFVF_TU, fadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VFVFSF_TU, fadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VFVFVF_TU, fadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VFVFSF_TU, fadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VFVFVF_TU, fsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VFVFSF_TU, fsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VFVFVF_TU, fsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VFVFSF_TU, fsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VFVFVF_TU, fsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VFVFSF_TU, fsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VFVFSF_TU, frsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VFVFSF_TU, frsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VFVFSF_TU, frsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VFVF_TU, fneg_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VFVF_TU, fneg_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VFVF_TU, fneg_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfadd_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VFVF_TA, fadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VFSF_TA, fadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VFVF_TA, fadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VFSF_TA, fadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VFVF_TA, fadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VFSF_TA, fadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VFVF_TA, fsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VFSF_TA, fsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VFVF_TA, fsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VFSF_TA, fsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VFVF_TA, fsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VFSF_TA, fsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VFSF_TA, frsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VFSF_TA, frsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VFSF_TA, frsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VF_TA, fneg_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VF_TA, fneg_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VF_TA, fneg_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfadd_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VBVFVFVF_TUMA, fadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VBVFVFSF_TUMA, fadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VBVFVFVF_TUMA, fadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VBVFVFSF_TUMA, fadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VBVFVFVF_TUMA, fadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VBVFVFSF_TUMA, fadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VBVFVFVF_TUMA, fsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VBVFVFSF_TUMA, fsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VBVFVFVF_TUMA, fsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VBVFVFSF_TUMA, fsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VBVFVFVF_TUMA, fsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VBVFVFSF_TUMA, fsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VBVFVFSF_TUMA, frsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VBVFVFSF_TUMA, frsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VBVFVFSF_TUMA, frsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VBVFVF_TUMA, fneg_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VBVFVF_TUMA, fneg_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VBVFVF_TUMA, fneg_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfadd_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VBVFVFVF_TUMU, fadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VBVFVFSF_TUMU, fadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VBVFVFVF_TUMU, fadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VBVFVFSF_TUMU, fadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VBVFVFVF_TUMU, fadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VBVFVFSF_TUMU, fadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VBVFVFVF_TUMU, fsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VBVFVFSF_TUMU, fsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VBVFVFVF_TUMU, fsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VBVFVFSF_TUMU, fsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VBVFVFVF_TUMU, fsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VBVFVFSF_TUMU, fsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VBVFVFSF_TUMU, frsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VBVFVFSF_TUMU, frsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VBVFVFSF_TUMU, frsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VBVFVF_TUMU, fneg_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VBVFVF_TUMU, fneg_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VBVFVF_TUMU, fneg_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfadd_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VBVFVF_TAMA, fadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VBVFSF_TAMA, fadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VBVFVF_TAMA, fadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VBVFSF_TAMA, fadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VBVFVF_TAMA, fadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VBVFSF_TAMA, fadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VBVFVF_TAMA, fsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VBVFSF_TAMA, fsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VBVFVF_TAMA, fsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VBVFSF_TAMA, fsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VBVFVF_TAMA, fsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VBVFSF_TAMA, fsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VBVFSF_TAMA, frsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VBVFSF_TAMA, frsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VBVFSF_TAMA, frsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VBVF_TAMA, fneg_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VBVF_TAMA, fneg_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VBVF_TAMA, fneg_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfadd_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV16VFloat16VBVFVFVF_TAMU, fadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfadd_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF16VFloat16VBVFVFSF_TAMU, fadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfadd_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV32VFloat32VBVFVFVF_TAMU, fadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfadd_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF32VFloat32VBVFVFSF_TAMU, fadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfadd_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVV64VFloat64VBVFVFVF_TAMU, fadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfadd_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FaddVF64VFloat64VBVFVFSF_TAMU, fadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsub_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV16VFloat16VBVFVFVF_TAMU, fsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsub_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF16VFloat16VBVFVFSF_TAMU, fsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsub_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV32VFloat32VBVFVFVF_TAMU, fsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsub_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF32VFloat32VBVFVFSF_TAMU, fsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsub_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVV64VFloat64VBVFVFVF_TAMU, fsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsub_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsubVF64VFloat64VBVFVFSF_TAMU, fsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrsub_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF16VFloat16VBVFVFSF_TAMU, frsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrsub_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF32VFloat32VBVFVFSF_TAMU, frsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrsub_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrsubVF64VFloat64VBVFVFSF_TAMU, frsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfneg_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV16VFloat16VBVFVF_TAMU, fneg_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfneg_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV32VFloat32VBVFVF_TAMU, fneg_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfneg_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FnegV64VFloat64VBVFVF_TAMU, fneg_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

// vfloat16m1_t vfmul_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VFVFVF_TU, fmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VFVFSF_TU, fmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VFVFVF_TU, fmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VFVFSF_TU, fmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VFVFVF_TU, fmul_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VFVFSF_TU, fmul_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VFVFVF_TU, fdiv_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VFVFSF_TU, fdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VFVFVF_TU, fdiv_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VFVFSF_TU, fdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VFVFVF_TU, fdiv_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VFVFSF_TU, fdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VFVFSF_TU, frdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VFVFSF_TU, frdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VFVFSF_TU, frdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmul_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VFVF_TA, fmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VFSF_TA, fmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VFVF_TA, fmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VFSF_TA, fmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VFVF_TA, fmul_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VFSF_TA, fmul_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VFVF_TA, fdiv_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VFSF_TA, fdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VFVF_TA, fdiv_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VFSF_TA, fdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VFVF_TA, fdiv_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VFSF_TA, fdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VFSF_TA, frdiv_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VFSF_TA, frdiv_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VFSF_TA, frdiv_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmul_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VBVFVFVF_TUMA, fmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VBVFVFSF_TUMA, fmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VBVFVFVF_TUMA, fmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VBVFVFSF_TUMA, fmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VBVFVFVF_TUMA, fmul_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VBVFVFSF_TUMA, fmul_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VBVFVFVF_TUMA, fdiv_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VBVFVFSF_TUMA, fdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VBVFVFVF_TUMA, fdiv_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VBVFVFSF_TUMA, fdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VBVFVFVF_TUMA, fdiv_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VBVFVFSF_TUMA, fdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VBVFVFSF_TUMA, frdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VBVFVFSF_TUMA, frdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VBVFVFSF_TUMA, frdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmul_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VBVFVFVF_TUMU, fmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VBVFVFSF_TUMU, fmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VBVFVFVF_TUMU, fmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VBVFVFSF_TUMU, fmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VBVFVFVF_TUMU, fmul_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VBVFVFSF_TUMU, fmul_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VBVFVFVF_TUMU, fdiv_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VBVFVFSF_TUMU, fdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VBVFVFVF_TUMU, fdiv_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VBVFVFSF_TUMU, fdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VBVFVFVF_TUMU, fdiv_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VBVFVFSF_TUMU, fdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VBVFVFSF_TUMU, frdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VBVFVFSF_TUMU, frdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VBVFVFSF_TUMU, frdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmul_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VBVFVF_TAMA, fmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VBVFSF_TAMA, fmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VBVFVF_TAMA, fmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VBVFSF_TAMA, fmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VBVFVF_TAMA, fmul_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VBVFSF_TAMA, fmul_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VBVFVF_TAMA, fdiv_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VBVFSF_TAMA, fdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VBVFVF_TAMA, fdiv_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VBVFSF_TAMA, fdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VBVFVF_TAMA, fdiv_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VBVFSF_TAMA, fdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VBVFSF_TAMA, frdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VBVFSF_TAMA, frdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VBVFSF_TAMA, frdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmul_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV16VFloat16VBVFVFVF_TAMU, fmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmul_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF16VFloat16VBVFVFSF_TAMU, fmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmul_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV32VFloat32VBVFVFVF_TAMU, fmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmul_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF32VFloat32VBVFVFSF_TAMU, fmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmul_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVV64VFloat64VBVFVFVF_TAMU, fmul_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmul_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmulVF64VFloat64VBVFVFSF_TAMU, fmul_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfdiv_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV16VFloat16VBVFVFVF_TAMU, fdiv_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfdiv_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF16VFloat16VBVFVFSF_TAMU, fdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfdiv_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV32VFloat32VBVFVFVF_TAMU, fdiv_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfdiv_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF32VFloat32VBVFVFSF_TAMU, fdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfdiv_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVV64VFloat64VBVFVFVF_TAMU, fdiv_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfdiv_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FdivVF64VFloat64VBVFVFSF_TAMU, fdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfrdiv_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF16VFloat16VBVFVFSF_TAMU, frdiv_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfrdiv_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF32VFloat32VBVFVFSF_TAMU, frdiv_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfrdiv_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FrdivVF64VFloat64VBVFVFSF_TAMU, frdiv_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat32m2_t vfwadd_vv_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VFVFVF_TU, fwadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VFVFSF_TU, fwadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_tu (vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VFVFVF_TU, fwadd_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_tu (vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VFVFSF_TU, fwadd_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VFVFVF_TU, fwadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VFVFSF_TU, fwadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_tu (vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VFVFVF_TU, fwadd_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_tu (vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VFVFSF_TU, fwadd_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VFVFVF_TU, fwsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VFVFSF_TU, fwsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_tu (vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VFVFVF_TU, fwsub_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_tu (vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VFVFSF_TU, fwsub_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VFVFVF_TU, fwsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VFVFSF_TU, fwsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_tu (vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VFVFVF_TU, fwsub_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_tu (vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VFVFSF_TU, fwsub_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwadd_vv_float32m2_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VFVF_TA, fwadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VFSF_TA, fwadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_ta (vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VFVF_TA, fwadd_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_ta (vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VFSF_TA, fwadd_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VFVF_TA, fwadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VFSF_TA, fwadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_ta (vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VFVF_TA, fwadd_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_ta (vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VFSF_TA, fwadd_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VFVF_TA, fwsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VFSF_TA, fwsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_ta (vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VFVF_TA, fwsub_wv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_ta (vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VFSF_TA, fwsub_wf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VFVF_TA, fwsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VFSF_TA, fwsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_ta (vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VFVF_TA, fwsub_wv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_ta (vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VFSF_TA, fwsub_wf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwadd_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VBVFVFVF_TUMA, fwadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VBVFVFSF_TUMA, fwadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VBVFVFVF_TUMA, fwadd_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VBVFVFSF_TUMA, fwadd_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VBVFVFVF_TUMA, fwadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VBVFVFSF_TUMA, fwadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VBVFVFVF_TUMA, fwadd_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VBVFVFSF_TUMA, fwadd_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VBVFVFVF_TUMA, fwsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VBVFVFSF_TUMA, fwsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VBVFVFVF_TUMA, fwsub_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VBVFVFSF_TUMA, fwsub_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VBVFVFVF_TUMA, fwsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VBVFVFSF_TUMA, fwsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VBVFVFVF_TUMA, fwsub_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VBVFVFSF_TUMA, fwsub_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwadd_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VBVFVFVF_TUMU, fwadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VBVFVFSF_TUMU, fwadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VBVFVFVF_TUMU, fwadd_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VBVFVFSF_TUMU, fwadd_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VBVFVFVF_TUMU, fwadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VBVFVFSF_TUMU, fwadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VBVFVFVF_TUMU, fwadd_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VBVFVFSF_TUMU, fwadd_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VBVFVFVF_TUMU, fwsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VBVFVFSF_TUMU, fwsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VBVFVFVF_TUMU, fwsub_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VBVFVFSF_TUMU, fwsub_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VBVFVFVF_TUMU, fwsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VBVFVFSF_TUMU, fwsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VBVFVFVF_TUMU, fwsub_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VBVFVFSF_TUMU, fwsub_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwadd_vv_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VBVFVF_TAMA, fwadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VBVFSF_TAMA, fwadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_tama (vbool16_t mask, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VBVFVF_TAMA, fwadd_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_tama (vbool16_t mask, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VBVFSF_TAMA, fwadd_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VBVFVF_TAMA, fwadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VBVFSF_TAMA, fwadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_tama (vbool32_t mask, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VBVFVF_TAMA, fwadd_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_tama (vbool32_t mask, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VBVFSF_TAMA, fwadd_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VBVFVF_TAMA, fwsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VBVFSF_TAMA, fwsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_tama (vbool16_t mask, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VBVFVF_TAMA, fwsub_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_tama (vbool16_t mask, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VBVFSF_TAMA, fwsub_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VBVFVF_TAMA, fwsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VBVFSF_TAMA, fwsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_tama (vbool32_t mask, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VBVFVF_TAMA, fwsub_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_tama (vbool32_t mask, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VBVFSF_TAMA, fwsub_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwadd_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV16VFloat32VBVFVFVF_TAMU, fwadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwadd_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF16VFloat32VBVFVFSF_TAMU, fwadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwadd_wv_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV16VFloat32VBVFVFVF_TAMU, fwadd_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwadd_wf_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF16VFloat32VBVFVFSF_TAMU, fwadd_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwadd_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVV32VFloat64VBVFVFVF_TAMU, fwadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwadd_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddVF32VFloat64VBVFVFSF_TAMU, fwadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwadd_wv_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWV32VFloat64VBVFVFVF_TAMU, fwadd_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwadd_wf_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwaddWF32VFloat64VBVFVFSF_TAMU, fwadd_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)
// vfloat32m2_t vfwsub_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV16VFloat32VBVFVFVF_TAMU, fwsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwsub_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF16VFloat32VBVFVFSF_TAMU, fwsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat32m2_t vfwsub_wv_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV16VFloat32VBVFVFVF_TAMU, fwsub_wv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat16)
// vfloat32m2_t vfwsub_wf_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat32m2_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF16VFloat32VBVFVFSF_TAMU, fwsub_wf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat16)
// vfloat64m2_t vfwsub_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVV32VFloat64VBVFVFVF_TAMU, fwsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwsub_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubVF32VFloat64VBVFVFSF_TAMU, fwsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat64m2_t vfwsub_wv_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWV32VFloat64VBVFVFVF_TAMU, fwsub_wv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat32)
// vfloat64m2_t vfwsub_wf_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat64m2_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwsubWF32VFloat64VBVFVFSF_TAMU, fwsub_wf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat32)

// vfloat32m2_t vfwmul_vv_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VFVFVF_TU, fwmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_tu (vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VFVFSF_TU, fwmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VFVFVF_TU, fwmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_tu (vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VFVFSF_TU, fwmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat32m2_t vfwmul_vv_float32m2_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VFVF_TA, fwmul_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VFSF_TA, fwmul_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 2, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VFVF_TA, fwmul_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VFSF_TA, fwmul_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 2, OneDFloat32, ScalarFloat32)
// vfloat32m2_t vfwmul_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VBVFVFVF_TUMA, fwmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VBVFVFSF_TUMA, fwmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VBVFVFVF_TUMA, fwmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VBVFVFSF_TUMA, fwmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat32m2_t vfwmul_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VBVFVFVF_TUMU, fwmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VBVFVFSF_TUMU, fwmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VBVFVFVF_TUMU, fwmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VBVFVFSF_TUMU, fwmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)
// vfloat32m2_t vfwmul_vv_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VBVFVF_TAMA, fwmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VBVFSF_TAMA, fwmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VBVFVF_TAMA, fwmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VBVFSF_TAMA, fwmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat32m2_t vfwmul_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV16VFloat32VBVFVFVF_TAMU, fwmul_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmul_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF16VFloat32VBVFVFSF_TAMU, fwmul_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, ScalarFloat16)
// vfloat64m2_t vfwmul_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVV32VFloat64VBVFVFVF_TAMU, fwmul_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmul_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FwmulVF32VFloat64VBVFVFSF_TAMU, fwmul_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, ScalarFloat32)

// vfloat16m1_t vfmacc_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VFVFVF_TU, fmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VFSFVF_TU, fmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VFVFVF_TU, fmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VFSFVF_TU, fmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VFVFVF_TU, fmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VFSFVF_TU, fmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VFVFVF_TU, fnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VFSFVF_TU, fnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VFVFVF_TU, fnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VFSFVF_TU, fnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VFVFVF_TU, fnmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VFSFVF_TU, fnmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VFVFVF_TU, fmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VFSFVF_TU, fmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VFVFVF_TU, fmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VFSFVF_TU, fmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VFVFVF_TU, fmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VFSFVF_TU, fmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VFVFVF_TU, fnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VFSFVF_TU, fnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VFVFVF_TU, fnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VFSFVF_TU, fnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VFVFVF_TU, fnmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VFSFVF_TU, fnmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VFVFVF_TU, fmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VFSFVF_TU, fmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VFVFVF_TU, fmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VFSFVF_TU, fmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VFVFVF_TU, fmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VFSFVF_TU, fmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VFVFVF_TU, fnmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VFSFVF_TU, fnmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VFVFVF_TU, fnmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VFSFVF_TU, fnmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VFVFVF_TU, fnmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VFSFVF_TU, fnmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VFVFVF_TU, fmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VFSFVF_TU, fmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VFVFVF_TU, fmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VFSFVF_TU, fmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VFVFVF_TU, fmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VFSFVF_TU, fmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_tu (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VFVFVF_TU, fnmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_tu (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VFSFVF_TU, fnmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_tu (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VFVFVF_TU, fnmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_tu (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VFSFVF_TU, fnmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_tu (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VFVFVF_TU, fnmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_tu (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VFSFVF_TU, fnmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmacc_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VFVFVF_TA, fmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VFSFVF_TA, fmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VFVFVF_TA, fmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VFSFVF_TA, fmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VFVFVF_TA, fmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VFSFVF_TA, fmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VFVFVF_TA, fnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VFSFVF_TA, fnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VFVFVF_TA, fnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VFSFVF_TA, fnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VFVFVF_TA, fnmacc_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VFSFVF_TA, fnmacc_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VFVFVF_TA, fmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VFSFVF_TA, fmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VFVFVF_TA, fmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VFSFVF_TA, fmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VFVFVF_TA, fmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VFSFVF_TA, fmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VFVFVF_TA, fnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VFSFVF_TA, fnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VFVFVF_TA, fnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VFSFVF_TA, fnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VFVFVF_TA, fnmsac_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VFSFVF_TA, fnmsac_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VFVFVF_TA, fmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VFSFVF_TA, fmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VFVFVF_TA, fmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VFSFVF_TA, fmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VFVFVF_TA, fmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VFSFVF_TA, fmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VFVFVF_TA, fnmadd_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VFSFVF_TA, fnmadd_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VFVFVF_TA, fnmadd_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VFSFVF_TA, fnmadd_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VFVFVF_TA, fnmadd_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VFSFVF_TA, fnmadd_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VFVFVF_TA, fmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VFSFVF_TA, fmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VFVFVF_TA, fmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VFSFVF_TA, fmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VFVFVF_TA, fmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VFSFVF_TA, fmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_ta (vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VFVFVF_TA, fnmsub_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_ta (vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VFSFVF_TA, fnmsub_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat16, 3, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_ta (vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VFVFVF_TA, fnmsub_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_ta (vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VFSFVF_TA, fnmsub_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_ta (vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VFVFVF_TA, fnmsub_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_ta (vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VFSFVF_TA, fnmsub_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmacc_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VBVFVFVF_TUMA, fmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VBVFSFVF_TUMA, fmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VBVFVFVF_TUMA, fmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VBVFSFVF_TUMA, fmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VBVFVFVF_TUMA, fmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VBVFSFVF_TUMA, fmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VBVFVFVF_TUMA, fnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VBVFSFVF_TUMA, fnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VBVFVFVF_TUMA, fnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VBVFSFVF_TUMA, fnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VBVFVFVF_TUMA, fnmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VBVFSFVF_TUMA, fnmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VBVFVFVF_TUMA, fmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VBVFSFVF_TUMA, fmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VBVFVFVF_TUMA, fmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VBVFSFVF_TUMA, fmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VBVFVFVF_TUMA, fmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VBVFSFVF_TUMA, fmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VBVFVFVF_TUMA, fnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VBVFSFVF_TUMA, fnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VBVFVFVF_TUMA, fnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VBVFSFVF_TUMA, fnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VBVFVFVF_TUMA, fnmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VBVFSFVF_TUMA, fnmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VBVFVFVF_TUMA, fmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VBVFSFVF_TUMA, fmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VBVFVFVF_TUMA, fmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VBVFSFVF_TUMA, fmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VBVFVFVF_TUMA, fmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VBVFSFVF_TUMA, fmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VBVFVFVF_TUMA, fnmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VBVFSFVF_TUMA, fnmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VBVFVFVF_TUMA, fnmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VBVFSFVF_TUMA, fnmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VBVFVFVF_TUMA, fnmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VBVFSFVF_TUMA, fnmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VBVFVFVF_TUMA, fmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VBVFSFVF_TUMA, fmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VBVFVFVF_TUMA, fmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VBVFSFVF_TUMA, fmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VBVFVFVF_TUMA, fmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VBVFSFVF_TUMA, fmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VBVFVFVF_TUMA, fnmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VBVFSFVF_TUMA, fnmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VBVFVFVF_TUMA, fnmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VBVFSFVF_TUMA, fnmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VBVFVFVF_TUMA, fnmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VBVFSFVF_TUMA, fnmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmacc_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VBVFVFVF_TUMU, fmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VBVFSFVF_TUMU, fmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VBVFVFVF_TUMU, fmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VBVFSFVF_TUMU, fmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VBVFVFVF_TUMU, fmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VBVFSFVF_TUMU, fmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VBVFVFVF_TUMU, fnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VBVFSFVF_TUMU, fnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VBVFVFVF_TUMU, fnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VBVFSFVF_TUMU, fnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VBVFVFVF_TUMU, fnmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VBVFSFVF_TUMU, fnmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VBVFVFVF_TUMU, fmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VBVFSFVF_TUMU, fmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VBVFVFVF_TUMU, fmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VBVFSFVF_TUMU, fmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VBVFVFVF_TUMU, fmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VBVFSFVF_TUMU, fmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VBVFVFVF_TUMU, fnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VBVFSFVF_TUMU, fnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VBVFVFVF_TUMU, fnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VBVFSFVF_TUMU, fnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VBVFVFVF_TUMU, fnmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VBVFSFVF_TUMU, fnmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VBVFVFVF_TUMU, fmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VBVFSFVF_TUMU, fmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VBVFVFVF_TUMU, fmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VBVFSFVF_TUMU, fmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VBVFVFVF_TUMU, fmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VBVFSFVF_TUMU, fmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VBVFVFVF_TUMU, fnmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VBVFSFVF_TUMU, fnmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VBVFVFVF_TUMU, fnmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VBVFSFVF_TUMU, fnmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VBVFVFVF_TUMU, fnmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VBVFSFVF_TUMU, fnmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VBVFVFVF_TUMU, fmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VBVFSFVF_TUMU, fmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VBVFVFVF_TUMU, fmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VBVFSFVF_TUMU, fmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VBVFVFVF_TUMU, fmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VBVFSFVF_TUMU, fmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VBVFVFVF_TUMU, fnmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VBVFSFVF_TUMU, fnmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VBVFVFVF_TUMU, fnmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VBVFSFVF_TUMU, fnmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VBVFVFVF_TUMU, fnmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VBVFSFVF_TUMU, fnmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmacc_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VBVFVFVF_TAMA, fmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VBVFSFVF_TAMA, fmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VBVFVFVF_TAMA, fmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VBVFSFVF_TAMA, fmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VBVFVFVF_TAMA, fmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VBVFSFVF_TAMA, fmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VBVFVFVF_TAMA, fnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VBVFSFVF_TAMA, fnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VBVFVFVF_TAMA, fnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VBVFSFVF_TAMA, fnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VBVFVFVF_TAMA, fnmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VBVFSFVF_TAMA, fnmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VBVFVFVF_TAMA, fmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VBVFSFVF_TAMA, fmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VBVFVFVF_TAMA, fmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VBVFSFVF_TAMA, fmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VBVFVFVF_TAMA, fmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VBVFSFVF_TAMA, fmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VBVFVFVF_TAMA, fnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VBVFSFVF_TAMA, fnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VBVFVFVF_TAMA, fnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VBVFSFVF_TAMA, fnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VBVFVFVF_TAMA, fnmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VBVFSFVF_TAMA, fnmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VBVFVFVF_TAMA, fmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VBVFSFVF_TAMA, fmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VBVFVFVF_TAMA, fmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VBVFSFVF_TAMA, fmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VBVFVFVF_TAMA, fmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VBVFSFVF_TAMA, fmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VBVFVFVF_TAMA, fnmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VBVFSFVF_TAMA, fnmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VBVFVFVF_TAMA, fnmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VBVFSFVF_TAMA, fnmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VBVFVFVF_TAMA, fnmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VBVFSFVF_TAMA, fnmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VBVFVFVF_TAMA, fmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VBVFSFVF_TAMA, fmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VBVFVFVF_TAMA, fmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VBVFSFVF_TAMA, fmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VBVFVFVF_TAMA, fmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VBVFSFVF_TAMA, fmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VBVFVFVF_TAMA, fnmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VBVFSFVF_TAMA, fnmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VBVFVFVF_TAMA, fnmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VBVFSFVF_TAMA, fnmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VBVFVFVF_TAMA, fnmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VBVFSFVF_TAMA, fnmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmacc_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV16VFloat16VBVFVFVF_TAMU, fmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmacc_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF16VFloat16VBVFSFVF_TAMU, fmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmacc_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV32VFloat32VBVFVFVF_TAMU, fmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmacc_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF32VFloat32VBVFSFVF_TAMU, fmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmacc_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVV64VFloat64VBVFVFVF_TAMU, fmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmacc_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaccVF64VFloat64VBVFSFVF_TAMU, fmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmacc_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV16VFloat16VBVFVFVF_TAMU, fnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmacc_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF16VFloat16VBVFSFVF_TAMU, fnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmacc_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV32VFloat32VBVFVFVF_TAMU, fnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmacc_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF32VFloat32VBVFSFVF_TAMU, fnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmacc_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVV64VFloat64VBVFVFVF_TAMU, fnmacc_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmacc_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaccVF64VFloat64VBVFSFVF_TAMU, fnmacc_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsac_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV16VFloat16VBVFVFVF_TAMU, fmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsac_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF16VFloat16VBVFSFVF_TAMU, fmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsac_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV32VFloat32VBVFVFVF_TAMU, fmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsac_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF32VFloat32VBVFSFVF_TAMU, fmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsac_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVV64VFloat64VBVFVFVF_TAMU, fmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsac_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsacVF64VFloat64VBVFSFVF_TAMU, fmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsac_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV16VFloat16VBVFVFVF_TAMU, fnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsac_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF16VFloat16VBVFSFVF_TAMU, fnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsac_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV32VFloat32VBVFVFVF_TAMU, fnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsac_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF32VFloat32VBVFSFVF_TAMU, fnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsac_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVV64VFloat64VBVFVFVF_TAMU, fnmsac_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsac_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsacVF64VFloat64VBVFSFVF_TAMU, fnmsac_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmadd_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV16VFloat16VBVFVFVF_TAMU, fmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmadd_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF16VFloat16VBVFSFVF_TAMU, fmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmadd_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV32VFloat32VBVFVFVF_TAMU, fmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmadd_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF32VFloat32VBVFSFVF_TAMU, fmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmadd_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVV64VFloat64VBVFVFVF_TAMU, fmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmadd_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmaddVF64VFloat64VBVFSFVF_TAMU, fmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmadd_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV16VFloat16VBVFVFVF_TAMU, fnmadd_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmadd_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF16VFloat16VBVFSFVF_TAMU, fnmadd_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmadd_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV32VFloat32VBVFVFVF_TAMU, fnmadd_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmadd_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF32VFloat32VBVFSFVF_TAMU, fnmadd_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmadd_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVV64VFloat64VBVFVFVF_TAMU, fnmadd_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmadd_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmaddVF64VFloat64VBVFSFVF_TAMU, fnmadd_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfmsub_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV16VFloat16VBVFVFVF_TAMU, fmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmsub_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF16VFloat16VBVFSFVF_TAMU, fmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfmsub_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV32VFloat32VBVFVFVF_TAMU, fmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmsub_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF32VFloat32VBVFSFVF_TAMU, fmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfmsub_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVV64VFloat64VBVFVFVF_TAMU, fmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmsub_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FmsubVF64VFloat64VBVFSFVF_TAMU, fmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)
// vfloat16m1_t vfnmsub_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV16VFloat16VBVFVFVF_TAMU, fnmsub_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfnmsub_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t vd, float16_t rs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF16VFloat16VBVFSFVF_TAMU, fnmsub_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, ScalarFloat16, OneDFloat16)
// vfloat32m1_t vfnmsub_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV32VFloat32VBVFVFVF_TAMU, fnmsub_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfnmsub_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t vd, float32_t rs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF32VFloat32VBVFSFVF_TAMU, fnmsub_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat32, OneDFloat32)
// vfloat64m1_t vfnmsub_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, vfloat64m1_t vs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVV64VFloat64VBVFVFVF_TAMU, fnmsub_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfnmsub_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t vd, float64_t rs1, vfloat64m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FnmsubVF64VFloat64VBVFSFVF_TAMU, fnmsub_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat64, OneDFloat64)

// vfloat32m2_t vfwmacc_vv_float32m2_tu (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VFVFVF_TU, fwmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_tu (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VFSFVF_TU, fwmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_tu (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VFVFVF_TU, fwmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_tu (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VFSFVF_TU, fwmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_tu (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VFVFVF_TU, fwnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_tu (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VFSFVF_TU, fwnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_tu (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VFVFVF_TU, fwnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_tu (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VFSFVF_TU, fwnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_tu (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VFVFVF_TU, fwmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_tu (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VFSFVF_TU, fwmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_tu (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VFVFVF_TU, fwmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_tu (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VFSFVF_TU, fwmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_tu (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VFVFVF_TU, fwnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_tu (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VFSFVF_TU, fwnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_tu (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VFVFVF_TU, fwnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_tu (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VFSFVF_TU, fwnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmacc_vv_float32m2_ta (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VFVFVF_TA, fwmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_ta (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VFSFVF_TA, fwmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_ta (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VFVFVF_TA, fwmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_ta (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VFSFVF_TA, fwmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_ta (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VFVFVF_TA, fwnmacc_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_ta (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VFSFVF_TA, fwnmacc_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_ta (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VFVFVF_TA, fwnmacc_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_ta (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VFSFVF_TA, fwnmacc_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_ta (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VFVFVF_TA, fwmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_ta (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VFSFVF_TA, fwmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_ta (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VFVFVF_TA, fwmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_ta (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VFSFVF_TA, fwmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_ta (vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VFVFVF_TA, fwnmsac_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_ta (vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VFSFVF_TA, fwnmsac_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat32, 3, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_ta (vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VFVFVF_TA, fwnmsac_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_ta (vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VFSFVF_TA, fwnmsac_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | MulAddOperation | TailAgnostic, OneDFloat64, 3, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmacc_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VBVFVFVF_TUMA, fwmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VBVFSFVF_TUMA, fwmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VBVFVFVF_TUMA, fwmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VBVFSFVF_TUMA, fwmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VBVFVFVF_TUMA, fwnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VBVFSFVF_TUMA, fwnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VBVFVFVF_TUMA, fwnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VBVFSFVF_TUMA, fwnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VBVFVFVF_TUMA, fwmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VBVFSFVF_TUMA, fwmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VBVFVFVF_TUMA, fwmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VBVFSFVF_TUMA, fwmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VBVFVFVF_TUMA, fwnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_tuma (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VBVFSFVF_TUMA, fwnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VBVFVFVF_TUMA, fwnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_tuma (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VBVFSFVF_TUMA, fwnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmacc_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VBVFVFVF_TUMU, fwmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VBVFSFVF_TUMU, fwmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VBVFVFVF_TUMU, fwmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VBVFSFVF_TUMU, fwmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VBVFVFVF_TUMU, fwnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VBVFSFVF_TUMU, fwnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VBVFVFVF_TUMU, fwnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VBVFSFVF_TUMU, fwnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VBVFVFVF_TUMU, fwmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VBVFSFVF_TUMU, fwmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VBVFVFVF_TUMU, fwmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VBVFSFVF_TUMU, fwmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VBVFVFVF_TUMU, fwnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_tumu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VBVFSFVF_TUMU, fwnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VBVFVFVF_TUMU, fwnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_tumu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VBVFSFVF_TUMU, fwnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmacc_vv_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VBVFVFVF_TAMA, fwmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VBVFSFVF_TAMA, fwmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VBVFVFVF_TAMA, fwmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VBVFSFVF_TAMA, fwmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VBVFVFVF_TAMA, fwnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VBVFSFVF_TAMA, fwnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VBVFVFVF_TAMA, fwnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VBVFSFVF_TAMA, fwnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VBVFVFVF_TAMA, fwmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VBVFSFVF_TAMA, fwmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VBVFVFVF_TAMA, fwmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VBVFSFVF_TAMA, fwmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VBVFVFVF_TAMA, fwnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_tama (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VBVFSFVF_TAMA, fwnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VBVFVFVF_TAMA, fwnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_tama (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VBVFSFVF_TAMA, fwnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmacc_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV16VFloat32VBVFVFVF_TAMU, fwmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmacc_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF16VFloat32VBVFSFVF_TAMU, fwmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmacc_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVV32VFloat64VBVFVFVF_TAMU, fwmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmacc_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmaccVF32VFloat64VBVFSFVF_TAMU, fwmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmacc_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV16VFloat32VBVFVFVF_TAMU, fwnmacc_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmacc_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF16VFloat32VBVFSFVF_TAMU, fwnmacc_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmacc_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVV32VFloat64VBVFVFVF_TAMU, fwnmacc_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmacc_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmaccVF32VFloat64VBVFSFVF_TAMU, fwnmacc_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwmsac_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV16VFloat32VBVFVFVF_TAMU, fwmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwmsac_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF16VFloat32VBVFSFVF_TAMU, fwmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwmsac_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVV32VFloat64VBVFVFVF_TAMU, fwmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwmsac_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwmsacVF32VFloat64VBVFSFVF_TAMU, fwmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)
// vfloat32m2_t vfwnmsac_vv_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, vfloat16m1_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV16VFloat32VBVFVFVF_TAMU, fwnmsac_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat16, OneDFloat16)
// vfloat32m2_t vfwnmsac_vf_float32m2_tamu (vbool16_t mask, vfloat32m2_t vd, float16_t vs1, vfloat16m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF16VFloat32VBVFSFVF_TAMU, fwnmsac_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, ScalarFloat16, OneDFloat16)
// vfloat64m2_t vfwnmsac_vv_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, vfloat32m1_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVV32VFloat64VBVFVFVF_TAMU, fwnmsac_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat32, OneDFloat32)
// vfloat64m2_t vfwnmsac_vf_float64m2_tamu (vbool32_t mask, vfloat64m2_t vd, float32_t vs1, vfloat32m1_t vs2, size_t vl);
CUSTOM_OP_TYPE(FwnmsacVF32VFloat64VBVFSFVF_TAMU, fwnmsac_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | MulAddOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, ScalarFloat32, OneDFloat32)

// vfloat16m1_t vfsqrt_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VFVF_TU, fsqrt_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VFVF_TU, fsqrt_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VFVF_TU, fsqrt_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfsqrt_v_float16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VF_TA, fsqrt_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VF_TA, fsqrt_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VF_TA, fsqrt_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfsqrt_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VBVFVF_TUMA, fsqrt_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VBVFVF_TUMA, fsqrt_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VBVFVF_TUMA, fsqrt_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfsqrt_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VBVFVF_TUMU, fsqrt_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VBVFVF_TUMU, fsqrt_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VBVFVF_TUMU, fsqrt_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfsqrt_v_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VBVF_TAMA, fsqrt_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VBVF_TAMA, fsqrt_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VBVF_TAMA, fsqrt_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfsqrt_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV16VFloat16VBVFVF_TAMU, fsqrt_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfsqrt_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV32VFloat32VBVFVF_TAMU, fsqrt_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfsqrt_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FsqrtV64VFloat64VBVFVF_TAMU, fsqrt_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VFVF_TU, frsqrt7_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VFVF_TU, frsqrt7_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VFVF_TU, frsqrt7_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VF_TA, frsqrt7_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VF_TA, frsqrt7_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VF_TA, frsqrt7_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VBVFVF_TUMA, frsqrt7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VBVFVF_TUMA, frsqrt7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VBVFVF_TUMA, frsqrt7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VBVFVF_TUMU, frsqrt7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VBVFVF_TUMU, frsqrt7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VBVFVF_TUMU, frsqrt7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VBVF_TAMA, frsqrt7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VBVF_TAMA, frsqrt7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VBVF_TAMA, frsqrt7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfrsqrt7_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V16VFloat16VBVFVF_TAMU, frsqrt7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrsqrt7_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V32VFloat32VBVFVF_TAMU, frsqrt7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrsqrt7_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frsqrt7V64VFloat64VBVFVF_TAMU, frsqrt7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

// vfloat16m1_t vfrec7_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VFVF_TU, frec7_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VFVF_TU, frec7_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VFVF_TU, frec7_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrec7_v_float16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VF_TA, frec7_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VF_TA, frec7_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VF_TA, frec7_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfrec7_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VBVFVF_TUMA, frec7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VBVFVF_TUMA, frec7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VBVFVF_TUMA, frec7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrec7_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VBVFVF_TUMU, frec7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VBVFVF_TUMU, frec7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VBVFVF_TUMU, frec7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfrec7_v_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VBVF_TAMA, frec7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VBVF_TAMA, frec7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VBVF_TAMA, frec7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfrec7_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V16VFloat16VBVFVF_TAMU, frec7_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfrec7_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V32VFloat32VBVFVF_TAMU, frec7_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfrec7_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(Frec7V64VFloat64VBVFVF_TAMU, frec7_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

// vfloat16m1_t vfmin_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VFVFVF_TU, fmin_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VFVFSF_TU, fmin_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VFVFVF_TU, fmin_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VFVFSF_TU, fmin_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VFVFVF_TU, fmin_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VFVFSF_TU, fmin_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VFVFVF_TU, fmax_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VFVFSF_TU, fmax_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VFVFVF_TU, fmax_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VFVFSF_TU, fmax_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VFVFVF_TU, fmax_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VFVFSF_TU, fmax_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmin_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VFVF_TA, fmin_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VFSF_TA, fmin_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VFVF_TA, fmin_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VFSF_TA, fmin_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VFVF_TA, fmin_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VFSF_TA, fmin_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VFVF_TA, fmax_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VFSF_TA, fmax_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VFVF_TA, fmax_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VFSF_TA, fmax_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VFVF_TA, fmax_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VFSF_TA, fmax_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmin_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VBVFVFVF_TUMA, fmin_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VBVFVFSF_TUMA, fmin_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VBVFVFVF_TUMA, fmin_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VBVFVFSF_TUMA, fmin_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VBVFVFVF_TUMA, fmin_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VBVFVFSF_TUMA, fmin_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VBVFVFVF_TUMA, fmax_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VBVFVFSF_TUMA, fmax_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VBVFVFVF_TUMA, fmax_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VBVFVFSF_TUMA, fmax_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VBVFVFVF_TUMA, fmax_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VBVFVFSF_TUMA, fmax_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmin_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VBVFVFVF_TUMU, fmin_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VBVFVFSF_TUMU, fmin_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VBVFVFVF_TUMU, fmin_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VBVFVFSF_TUMU, fmin_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VBVFVFVF_TUMU, fmin_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VBVFVFSF_TUMU, fmin_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VBVFVFVF_TUMU, fmax_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VBVFVFSF_TUMU, fmax_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VBVFVFVF_TUMU, fmax_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VBVFVFSF_TUMU, fmax_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VBVFVFVF_TUMU, fmax_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VBVFVFSF_TUMU, fmax_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmin_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VBVFVF_TAMA, fmin_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VBVFSF_TAMA, fmin_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VBVFVF_TAMA, fmin_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VBVFSF_TAMA, fmin_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VBVFVF_TAMA, fmin_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VBVFSF_TAMA, fmin_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VBVFVF_TAMA, fmax_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VBVFSF_TAMA, fmax_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VBVFVF_TAMA, fmax_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VBVFSF_TAMA, fmax_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VBVFVF_TAMA, fmax_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VBVFSF_TAMA, fmax_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmin_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV16VFloat16VBVFVFVF_TAMU, fmin_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmin_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF16VFloat16VBVFVFSF_TAMU, fmin_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmin_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV32VFloat32VBVFVFVF_TAMU, fmin_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmin_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF32VFloat32VBVFVFSF_TAMU, fmin_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmin_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVV64VFloat64VBVFVFVF_TAMU, fmin_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmin_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FminVF64VFloat64VBVFVFSF_TAMU, fmin_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfmax_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV16VFloat16VBVFVFVF_TAMU, fmax_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmax_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF16VFloat16VBVFVFSF_TAMU, fmax_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfmax_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV32VFloat32VBVFVFVF_TAMU, fmax_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmax_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF32VFloat32VBVFVFSF_TAMU, fmax_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfmax_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVV64VFloat64VBVFVFVF_TAMU, fmax_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmax_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmaxVF64VFloat64VBVFVFSF_TAMU, fmax_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)

// vfloat16m1_t vfsgnj_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VFVFVF_TU, fsgnj_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VFVFSF_TU, fsgnj_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VFVFVF_TU, fsgnj_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VFVFSF_TU, fsgnj_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VFVFVF_TU, fsgnj_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VFVFSF_TU, fsgnj_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VFVFVF_TU, fsgnjn_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VFVFSF_TU, fsgnjn_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VFVFVF_TU, fsgnjn_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VFVFSF_TU, fsgnjn_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VFVFVF_TU, fsgnjn_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VFVFSF_TU, fsgnjn_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VFVFVF_TU, fsgnjx_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VFVFSF_TU, fsgnjx_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VFVFVF_TU, fsgnjx_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VFVFSF_TU, fsgnjx_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VFVFVF_TU, fsgnjx_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VFVFSF_TU, fsgnjx_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnj_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VFVF_TA, fsgnj_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VFSF_TA, fsgnj_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VFVF_TA, fsgnj_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VFSF_TA, fsgnj_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VFVF_TA, fsgnj_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VFSF_TA, fsgnj_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VFVF_TA, fsgnjn_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VFSF_TA, fsgnjn_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VFVF_TA, fsgnjn_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VFSF_TA, fsgnjn_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VFVF_TA, fsgnjn_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VFSF_TA, fsgnjn_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_ta (vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VFVF_TA, fsgnjx_vv, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_ta (vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VFSF_TA, fsgnjx_vf, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_ta (vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VFVF_TA, fsgnjx_vv, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_ta (vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VFSF_TA, fsgnjx_vf, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_ta (vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VFVF_TA, fsgnjx_vv, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_ta (vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VFSF_TA, fsgnjx_vf, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnj_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VBVFVFVF_TUMA, fsgnj_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VBVFVFSF_TUMA, fsgnj_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VBVFVFVF_TUMA, fsgnj_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VBVFVFSF_TUMA, fsgnj_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VBVFVFVF_TUMA, fsgnj_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VBVFVFSF_TUMA, fsgnj_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VBVFVFVF_TUMA, fsgnjn_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VBVFVFSF_TUMA, fsgnjn_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VBVFVFVF_TUMA, fsgnjn_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VBVFVFSF_TUMA, fsgnjn_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VBVFVFVF_TUMA, fsgnjn_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VBVFVFSF_TUMA, fsgnjn_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VBVFVFVF_TUMA, fsgnjx_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VBVFVFSF_TUMA, fsgnjx_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VBVFVFVF_TUMA, fsgnjx_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VBVFVFSF_TUMA, fsgnjx_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VBVFVFVF_TUMA, fsgnjx_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VBVFVFSF_TUMA, fsgnjx_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnj_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VBVFVFVF_TUMU, fsgnj_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VBVFVFSF_TUMU, fsgnj_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VBVFVFVF_TUMU, fsgnj_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VBVFVFSF_TUMU, fsgnj_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VBVFVFVF_TUMU, fsgnj_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VBVFVFSF_TUMU, fsgnj_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VBVFVFVF_TUMU, fsgnjn_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VBVFVFSF_TUMU, fsgnjn_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VBVFVFVF_TUMU, fsgnjn_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VBVFVFSF_TUMU, fsgnjn_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VBVFVFVF_TUMU, fsgnjn_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VBVFVFSF_TUMU, fsgnjn_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VBVFVFVF_TUMU, fsgnjx_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VBVFVFSF_TUMU, fsgnjx_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VBVFVFVF_TUMU, fsgnjx_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VBVFVFSF_TUMU, fsgnjx_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VBVFVFVF_TUMU, fsgnjx_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VBVFVFSF_TUMU, fsgnjx_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnj_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VBVFVF_TAMA, fsgnj_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VBVFSF_TAMA, fsgnj_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VBVFVF_TAMA, fsgnj_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VBVFSF_TAMA, fsgnj_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VBVFVF_TAMA, fsgnj_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VBVFSF_TAMA, fsgnj_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VBVFVF_TAMA, fsgnjn_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VBVFSF_TAMA, fsgnjn_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VBVFVF_TAMA, fsgnjn_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VBVFSF_TAMA, fsgnjn_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VBVFVF_TAMA, fsgnjn_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VBVFSF_TAMA, fsgnjn_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VBVFVF_TAMA, fsgnjx_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VBVFSF_TAMA, fsgnjx_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VBVFVF_TAMA, fsgnjx_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VBVFSF_TAMA, fsgnjx_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VBVFVF_TAMA, fsgnjx_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VBVFSF_TAMA, fsgnjx_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnj_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV16VFloat16VBVFVFVF_TAMU, fsgnj_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnj_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF16VFloat16VBVFVFSF_TAMU, fsgnj_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnj_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV32VFloat32VBVFVFVF_TAMU, fsgnj_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnj_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF32VFloat32VBVFVFSF_TAMU, fsgnj_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnj_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVV64VFloat64VBVFVFVF_TAMU, fsgnj_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnj_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjVF64VFloat64VBVFVFSF_TAMU, fsgnj_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjn_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV16VFloat16VBVFVFVF_TAMU, fsgnjn_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjn_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF16VFloat16VBVFVFSF_TAMU, fsgnjn_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjn_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV32VFloat32VBVFVFVF_TAMU, fsgnjn_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjn_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF32VFloat32VBVFVFSF_TAMU, fsgnjn_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjn_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVV64VFloat64VBVFVFVF_TAMU, fsgnjn_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjn_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjnVF64VFloat64VBVFVFSF_TAMU, fsgnjn_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfsgnjx_vv_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV16VFloat16VBVFVFVF_TAMU, fsgnjx_vv, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfsgnjx_vf_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF16VFloat16VBVFVFSF_TAMU, fsgnjx_vf, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vfsgnjx_vv_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV32VFloat32VBVFVFVF_TAMU, fsgnjx_vv, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfsgnjx_vf_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF32VFloat32VBVFVFSF_TAMU, fsgnjx_vf, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vfsgnjx_vv_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVV64VFloat64VBVFVFVF_TAMU, fsgnjx_vv, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfsgnjx_vf_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FsgnjxVF64VFloat64VBVFVFSF_TAMU, fsgnjx_vf, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vfabs_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VFVF_TU, fabs_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VFVF_TU, fabs_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VFVF_TU, fabs_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfabs_v_float16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VF_TA, fabs_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VF_TA, fabs_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VF_TA, fabs_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfabs_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VBVFVF_TUMA, fabs_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VBVFVF_TUMA, fabs_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VBVFVF_TUMA, fabs_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfabs_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VBVFVF_TUMU, fabs_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VBVFVF_TUMU, fabs_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VBVFVF_TUMU, fabs_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfabs_v_float16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VBVF_TAMA, fabs_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VBVF_TAMA, fabs_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VBVF_TAMA, fabs_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfabs_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV16VFloat16VBVFVF_TAMU, fabs_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfabs_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV32VFloat32VBVFVF_TAMU, fabs_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfabs_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FabsV64VFloat64VBVFVF_TAMU, fabs_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

// vbool16_t vmfeq_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV16VBoolVBVFVF_MA, mfeq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfeq_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF16VBoolVBVFSF_MA, mfeq_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfeq_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV32VBoolVBVFVF_MA, mfeq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfeq_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF32VBoolVBVFSF_MA, mfeq_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfeq_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV64VBoolVBVFVF_MA, mfeq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfeq_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF64VBoolVBVFSF_MA, mfeq_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfne_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV16VBoolVBVFVF_MA, mfne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfne_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF16VBoolVBVFSF_MA, mfne_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfne_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV32VBoolVBVFVF_MA, mfne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfne_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF32VBoolVBVFSF_MA, mfne_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfne_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV64VBoolVBVFVF_MA, mfne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfne_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF64VBoolVBVFSF_MA, mfne_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmflt_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV16VBoolVBVFVF_MA, mflt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmflt_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF16VBoolVBVFSF_MA, mflt_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmflt_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV32VBoolVBVFVF_MA, mflt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmflt_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF32VBoolVBVFSF_MA, mflt_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmflt_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV64VBoolVBVFVF_MA, mflt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmflt_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF64VBoolVBVFSF_MA, mflt_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfle_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV16VBoolVBVFVF_MA, mfle_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfle_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF16VBoolVBVFSF_MA, mfle_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfle_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV32VBoolVBVFVF_MA, mfle_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfle_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF32VBoolVBVFSF_MA, mfle_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfle_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV64VBoolVBVFVF_MA, mfle_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfle_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF64VBoolVBVFSF_MA, mfle_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfgt_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV16VBoolVBVFVF_MA, mfgt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfgt_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF16VBoolVBVFSF_MA, mfgt_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfgt_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV32VBoolVBVFVF_MA, mfgt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfgt_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF32VBoolVBVFSF_MA, mfgt_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfgt_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV64VBoolVBVFVF_MA, mfgt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfgt_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF64VBoolVBVFSF_MA, mfgt_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfge_vv_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV16VBoolVBVFVF_MA, mfge_vv, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfge_vf_float16m1_b16_ma (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF16VBoolVBVFSF_MA, mfge_vf, 16, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfge_vv_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV32VBoolVBVFVF_MA, mfge_vv, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfge_vf_float32m1_b32_ma (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF32VBoolVBVFSF_MA, mfge_vf, 32, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfge_vv_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV64VBoolVBVFVF_MA, mfge_vv, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfge_vf_float64m1_b64_ma (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF64VBoolVBVFSF_MA, mfge_vf, 64, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | MaskAgnostic, OneDBool, 3, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfeq_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV16VBoolVBVBVFVF_MU, mfeq_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfeq_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF16VBoolVBVBVFSF_MU, mfeq_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfeq_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV32VBoolVBVBVFVF_MU, mfeq_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfeq_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF32VBoolVBVBVFSF_MU, mfeq_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfeq_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVV64VBoolVBVBVFVF_MU, mfeq_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfeq_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfeqVF64VBoolVBVBVFSF_MU, mfeq_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfne_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV16VBoolVBVBVFVF_MU, mfne_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfne_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF16VBoolVBVBVFSF_MU, mfne_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfne_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV32VBoolVBVBVFVF_MU, mfne_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfne_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF32VBoolVBVBVFSF_MU, mfne_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfne_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVV64VBoolVBVBVFVF_MU, mfne_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfne_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfneVF64VBoolVBVBVFSF_MU, mfne_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmflt_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV16VBoolVBVBVFVF_MU, mflt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmflt_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF16VBoolVBVBVFSF_MU, mflt_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmflt_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV32VBoolVBVBVFVF_MU, mflt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmflt_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF32VBoolVBVBVFSF_MU, mflt_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmflt_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVV64VBoolVBVBVFVF_MU, mflt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmflt_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfltVF64VBoolVBVBVFSF_MU, mflt_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfle_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV16VBoolVBVBVFVF_MU, mfle_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfle_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF16VBoolVBVBVFSF_MU, mfle_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfle_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV32VBoolVBVBVFVF_MU, mfle_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfle_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF32VBoolVBVBVFSF_MU, mfle_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfle_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVV64VBoolVBVBVFVF_MU, mfle_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfle_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfleVF64VBoolVBVBVFSF_MU, mfle_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfgt_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV16VBoolVBVBVFVF_MU, mfgt_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfgt_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF16VBoolVBVBVFSF_MU, mfgt_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfgt_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV32VBoolVBVBVFVF_MU, mfgt_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfgt_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF32VBoolVBVBVFSF_MU, mfgt_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfgt_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVV64VBoolVBVBVFVF_MU, mfgt_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfgt_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgtVF64VBoolVBVBVFSF_MU, mfgt_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)
// vbool16_t vmfge_vv_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV16VBoolVBVBVFVF_MU, mfge_vv, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, OneDFloat16)
// vbool16_t vmfge_vf_float16m1_b16_mu (vbool16_t mask, vbool16_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF16VBoolVBVBVFSF_MU, mfge_vf, 16, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat16, ScalarFloat16)
// vbool32_t vmfge_vv_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV32VBoolVBVBVFVF_MU, mfge_vv, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, OneDFloat32)
// vbool32_t vmfge_vf_float32m1_b32_mu (vbool32_t mask, vbool32_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF32VBoolVBVBVFSF_MU, mfge_vf, 32, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat32, ScalarFloat32)
// vbool64_t vmfge_vv_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVV64VBoolVBVBVFVF_MU, mfge_vv, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, OneDFloat64)
// vbool64_t vmfge_vf_float64m1_b64_mu (vbool64_t mask, vbool64_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(MfgeVF64VBoolVBVBVFSF_MU, mfge_vf, 64, BOOL, HaveVLParameter | MaskedOperation | MaskUndisturbed, OneDBool, 4, OneDBool, OneDBool, OneDFloat64, ScalarFloat64)

// vuint16m1_t vfclass_v_u16m1_tu (vuint16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VUVF_TU, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_tu (vuint32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VUVF_TU, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_tu (vuint64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VUVF_TU, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDFloat64)
// vuint16m1_t vfclass_v_u16m1_ta (vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VF_TA, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_ta (vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VF_TA, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_ta (vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VF_TA, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDFloat64)
// vuint16m1_t vfclass_v_u16m1_tuma (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VBVUVF_TUMA, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_tuma (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VBVUVF_TUMA, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_tuma (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VBVUVF_TUMA, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vuint16m1_t vfclass_v_u16m1_tumu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VBVUVF_TUMU, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_tumu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VBVUVF_TUMU, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_tumu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VBVUVF_TUMU, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vuint16m1_t vfclass_v_u16m1_tama (vbool16_t mask, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VBVF_TAMA, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_tama (vbool32_t mask, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VBVF_TAMA, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_tama (vbool64_t mask, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VBVF_TAMA, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDFloat64)
// vuint16m1_t vfclass_v_u16m1_tamu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV16VUInt16VBVUVF_TAMU, fclass_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint32m1_t vfclass_v_u32m1_tamu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV32VUInt32VBVUVF_TAMU, fclass_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint64m1_t vfclass_v_u64m1_tamu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t op1, size_t vl);
CUSTOM_OP_TYPE(FclassV64VUInt64VBVUVF_TAMU, fclass_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)

// vfloat16m1_t vmerge_vvm_float16m1_tu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VFloat16VBVFVFVF_TU, merge_vvm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmerge_vfm_float16m1_tu (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM16VFloat16VBVFVFSF_TU, fmerge_vfm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vmerge_vvm_float32m1_tu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VFloat32VBVFVFVF_TU, merge_vvm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmerge_vfm_float32m1_tu (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM32VFloat32VBVFVFSF_TU, fmerge_vfm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vmerge_vvm_float64m1_tu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VFloat64VBVFVFVF_TU, merge_vvm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmerge_vfm_float64m1_tu (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM64VFloat64VBVFVFSF_TU, fmerge_vfm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vmerge_vvm_float16m1_ta (vbool16_t mask, vfloat16m1_t op1, vfloat16m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM16VFloat16VBVFVF_TA, merge_vvm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmerge_vfm_float16m1_ta (vbool16_t mask, vfloat16m1_t op1, float16_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM16VFloat16VBVFSF_TA, fmerge_vfm, 16, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vmerge_vvm_float32m1_ta (vbool32_t mask, vfloat32m1_t op1, vfloat32m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM32VFloat32VBVFVF_TA, merge_vvm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmerge_vfm_float32m1_ta (vbool32_t mask, vfloat32m1_t op1, float32_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM32VFloat32VBVFSF_TA, fmerge_vfm, 32, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vmerge_vvm_float64m1_ta (vbool64_t mask, vfloat64m1_t op1, vfloat64m1_t op2, size_t vl);
CUSTOM_OP_TYPE(MergeVVM64VFloat64VBVFVF_TA, merge_vvm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmerge_vfm_float64m1_ta (vbool64_t mask, vfloat64m1_t op1, float64_t op2, size_t vl);
CUSTOM_OP_TYPE(FmergeVFM64VFloat64VBVFSF_TA, fmerge_vfm, 64, FLOAT, HaveVLParameter | NonmaskedOperation | MergeOperation | TailAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarFloat64)

// vfloat16m1_t vmv_v_v_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VFloat16VFVF_TU, mv_v_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat16m1_t vfmv_v_f_float16m1_tu (vfloat16m1_t merge, float16_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF16VFloat16VFSF_TU, fmv_v_f, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, ScalarFloat16)
// vfloat32m1_t vmv_v_v_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VFloat32VFVF_TU, mv_v_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat32m1_t vfmv_v_f_float32m1_tu (vfloat32m1_t merge, float32_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF32VFloat32VFSF_TU, fmv_v_f, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, ScalarFloat32)
// vfloat64m1_t vmv_v_v_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VFloat64VFVF_TU, mv_v_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat64m1_t vfmv_v_f_float64m1_tu (vfloat64m1_t merge, float64_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF64VFloat64VFSF_TU, fmv_v_f, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, ScalarFloat64)
// vfloat16m1_t vmv_v_v_float16m1_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV16VFloat16VF_TA, mv_v_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat16m1_t vfmv_v_f_float16m1_ta (float16_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF16VFloat16SF_TA, fmv_v_f, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, ScalarFloat16)
// vfloat32m1_t vmv_v_v_float32m1_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV32VFloat32VF_TA, mv_v_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat32m1_t vfmv_v_f_float32m1_ta (float32_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF32VFloat32SF_TA, fmv_v_f, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, ScalarFloat32)
// vfloat64m1_t vmv_v_v_float64m1_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(MvV64VFloat64VF_TA, mv_v_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat64m1_t vfmv_v_f_float64m1_ta (float64_t src, size_t vl);
CUSTOM_OP_TYPE(FmvF64VFloat64SF_TA, fmv_v_f, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, ScalarFloat64)

// vint16m1_t vfcvt_x_f_v_i16m1_tu (vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VIVF_TU, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_tu (vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VIVF_TU, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_tu (vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VUVF_TU, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_tu (vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VUVF_TU, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_tu (vfloat16m1_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VFVI_TU, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_tu (vfloat16m1_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VFVU_TU, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_tu (vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VIVF_TU, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_tu (vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VIVF_TU, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_tu (vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VUVF_TU, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_tu (vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VUVF_TU, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_tu (vfloat32m1_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VFVI_TU, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_tu (vfloat32m1_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VFVU_TU, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_tu (vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VIVF_TU, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_tu (vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VIVF_TU, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_tu (vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VUVF_TU, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_tu (vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VUVF_TU, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_tu (vfloat64m1_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VFVI_TU, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_tu (vfloat64m1_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VFVU_TU, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDUInt64)
// vint16m1_t vfcvt_x_f_v_i16m1_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VF_TA, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VF_TA, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt16, 1, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VF_TA, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VF_TA, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_ta (vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VI_TA, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_ta (vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VU_TA, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat16, 1, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VF_TA, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VF_TA, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt32, 1, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VF_TA, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VF_TA, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VI_TA, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VU_TA, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat32, 1, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VF_TA, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VF_TA, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDInt64, 1, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VF_TA, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VF_TA, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_ta (vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VI_TA, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_ta (vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VU_TA, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDFloat64, 1, OneDUInt64)
// vint16m1_t vfcvt_x_f_v_i16m1_tuma (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VBVIVF_TUMA, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_tuma (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VBVIVF_TUMA, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_tuma (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VBVUVF_TUMA, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_tuma (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VBVUVF_TUMA, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVI_TUMA, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_tuma (vbool16_t mask, vfloat16m1_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVU_TUMA, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_tuma (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VBVIVF_TUMA, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_tuma (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VBVIVF_TUMA, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_tuma (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VBVUVF_TUMA, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_tuma (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VBVUVF_TUMA, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVI_TUMA, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_tuma (vbool32_t mask, vfloat32m1_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVU_TUMA, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_tuma (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VBVIVF_TUMA, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_tuma (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VBVIVF_TUMA, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_tuma (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VBVUVF_TUMA, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_tuma (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VBVUVF_TUMA, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVI_TUMA, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_tuma (vbool64_t mask, vfloat64m1_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVU_TUMA, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)
// vint16m1_t vfcvt_x_f_v_i16m1_tumu (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VBVIVF_TUMU, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_tumu (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VBVIVF_TUMU, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_tumu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VBVUVF_TUMU, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_tumu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VBVUVF_TUMU, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVI_TUMU, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_tumu (vbool16_t mask, vfloat16m1_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVU_TUMU, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_tumu (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VBVIVF_TUMU, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_tumu (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VBVIVF_TUMU, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_tumu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VBVUVF_TUMU, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_tumu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VBVUVF_TUMU, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVI_TUMU, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_tumu (vbool32_t mask, vfloat32m1_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVU_TUMU, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_tumu (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VBVIVF_TUMU, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_tumu (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VBVIVF_TUMU, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_tumu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VBVUVF_TUMU, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_tumu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VBVUVF_TUMU, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVI_TUMU, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_tumu (vbool64_t mask, vfloat64m1_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVU_TUMU, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)
// vint16m1_t vfcvt_x_f_v_i16m1_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VBVF_TAMA, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VBVF_TAMA, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VBVF_TAMA, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VBVF_TAMA, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_tama (vbool16_t mask, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVI_TAMA, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_tama (vbool16_t mask, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVU_TAMA, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VBVF_TAMA, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VBVF_TAMA, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VBVF_TAMA, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VBVF_TAMA, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_tama (vbool32_t mask, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVI_TAMA, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_tama (vbool32_t mask, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVU_TAMA, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VBVF_TAMA, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VBVF_TAMA, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VBVF_TAMA, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VBVF_TAMA, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_tama (vbool64_t mask, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVI_TAMA, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_tama (vbool64_t mask, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVU_TAMA, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDUInt64)
// vint16m1_t vfcvt_x_f_v_i16m1_tamu (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VInt16VBVIVF_TAMU, fcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vint16m1_t vfcvt_rtz_x_f_v_i16m1_tamu (vbool16_t mask, vint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VInt16VBVIVF_TAMU, fcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat16)
// vuint16m1_t vfcvt_xu_f_v_u16m1_tamu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VUInt16VBVUVF_TAMU, fcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vuint16m1_t vfcvt_rtz_xu_f_v_u16m1_tamu (vbool16_t mask, vuint16m1_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV16VUInt16VBVUVF_TAMU, fcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat16)
// vfloat16m1_t vfcvt_f_x_v_f16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVI_TAMU, fcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt16)
// vfloat16m1_t vfcvt_f_xu_v_f16m1_tamu (vbool16_t mask, vfloat16m1_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV16VFloat16VBVFVU_TAMU, fcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
// vint32m1_t vfcvt_x_f_v_i32m1_tamu (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VInt32VBVIVF_TAMU, fcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vint32m1_t vfcvt_rtz_x_f_v_i32m1_tamu (vbool32_t mask, vint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VInt32VBVIVF_TAMU, fcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat32)
// vuint32m1_t vfcvt_xu_f_v_u32m1_tamu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VUInt32VBVUVF_TAMU, fcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vuint32m1_t vfcvt_rtz_xu_f_v_u32m1_tamu (vbool32_t mask, vuint32m1_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV32VUInt32VBVUVF_TAMU, fcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat32)
// vfloat32m1_t vfcvt_f_x_v_f32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVI_TAMU, fcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt32)
// vfloat32m1_t vfcvt_f_xu_v_f32m1_tamu (vbool32_t mask, vfloat32m1_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV32VFloat32VBVFVU_TAMU, fcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
// vint64m1_t vfcvt_x_f_v_i64m1_tamu (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VInt64VBVIVF_TAMU, fcvt_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vint64m1_t vfcvt_rtz_x_f_v_i64m1_tamu (vbool64_t mask, vint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VInt64VBVIVF_TAMU, fcvt_rtz_x_f_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat64)
// vuint64m1_t vfcvt_xu_f_v_u64m1_tamu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VUInt64VBVUVF_TAMU, fcvt_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vuint64m1_t vfcvt_rtz_xu_f_v_u64m1_tamu (vbool64_t mask, vuint64m1_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fcvt_rtzV64VUInt64VBVUVF_TAMU, fcvt_rtz_xu_f_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat64)
// vfloat64m1_t vfcvt_f_x_v_f64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVI_TAMU, fcvt_f_x_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt64)
// vfloat64m1_t vfcvt_f_xu_v_f64m1_tamu (vbool64_t mask, vfloat64m1_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FcvtV64VFloat64VBVFVU_TAMU, fcvt_f_xu_v, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)

// vfloat16m2_t vfwcvt_f_x_v_f16m2_tu (vfloat16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VFVI_TU, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_tu (vfloat16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VFVU_TU, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_tu (vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VIVF_TU, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_tu (vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VIVF_TU, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_tu (vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VUVF_TU, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_tu (vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VUVF_TU, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_tu (vfloat32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VFVI_TU, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_tu (vfloat32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VFVU_TU, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_tu (vfloat32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VFVF_TU, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_tu (vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VIVF_TU, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_tu (vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VIVF_TU, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_tu (vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VUVF_TU, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_tu (vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VUVF_TU, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_tu (vfloat64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VFVI_TU, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_tu (vfloat64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VFVU_TU, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_tu (vfloat64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VFVF_TU, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat32)
// vfloat16m2_t vfwcvt_f_x_v_f16m2_ta (vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VI_TA, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat16, 1, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_ta (vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VU_TA, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat16, 1, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VF_TA, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 1, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VF_TA, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt32, 1, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VF_TA, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 1, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VF_TA, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt32, 1, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_ta (vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VI_TA, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 1, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_ta (vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VU_TA, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 1, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VF_TA, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat32, 1, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VF_TA, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 1, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VF_TA, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDInt64, 1, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VF_TA, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 1, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VF_TA, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDUInt64, 1, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VI_TA, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 1, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VU_TA, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 1, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VF_TA, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | WideningOperation | TailAgnostic, OneDFloat64, 1, OneDFloat32)
// vfloat16m2_t vfwcvt_f_x_v_f16m2_tuma (vbool8_t mask, vfloat16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVI_TUMA, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_tuma (vbool8_t mask, vfloat16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVU_TUMA, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_tuma (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VBVIVF_TUMA, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_tuma (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VBVIVF_TUMA, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_tuma (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VBVUVF_TUMA, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_tuma (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VBVUVF_TUMA, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVI_TUMA, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVU_TUMA, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_tuma (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVF_TUMA, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_tuma (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VBVIVF_TUMA, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_tuma (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VBVIVF_TUMA, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_tuma (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VBVUVF_TUMA, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_tuma (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VBVUVF_TUMA, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVI_TUMA, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVU_TUMA, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_tuma (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVF_TUMA, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat16m2_t vfwcvt_f_x_v_f16m2_tumu (vbool8_t mask, vfloat16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVI_TUMU, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_tumu (vbool8_t mask, vfloat16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVU_TUMU, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_tumu (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VBVIVF_TUMU, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_tumu (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VBVIVF_TUMU, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_tumu (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VBVUVF_TUMU, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_tumu (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VBVUVF_TUMU, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVI_TUMU, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVU_TUMU, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_tumu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVF_TUMU, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_tumu (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VBVIVF_TUMU, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_tumu (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VBVIVF_TUMU, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_tumu (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VBVUVF_TUMU, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_tumu (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VBVUVF_TUMU, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVI_TUMU, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVU_TUMU, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_tumu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVF_TUMU, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat16m2_t vfwcvt_f_x_v_f16m2_tama (vbool8_t mask, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVI_TAMA, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_tama (vbool8_t mask, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVU_TAMA, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VBVF_TAMA, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VBVF_TAMA, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VBVF_TAMA, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VBVF_TAMA, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_tama (vbool16_t mask, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVI_TAMA, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_tama (vbool16_t mask, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVU_TAMA, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVF_TAMA, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VBVF_TAMA, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VBVF_TAMA, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VBVF_TAMA, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VBVF_TAMA, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_tama (vbool32_t mask, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVI_TAMA, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_tama (vbool32_t mask, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVU_TAMA, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVF_TAMA, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | WideningOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat32)
// vfloat16m2_t vfwcvt_f_x_v_f16m2_tamu (vbool8_t mask, vfloat16m2_t merge, vint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVI_TAMU, fwcvt_f_x_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt8)
// vfloat16m2_t vfwcvt_f_xu_v_f16m2_tamu (vbool8_t mask, vfloat16m2_t merge, vuint8m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV8VFloat16VBVFVU_TAMU, fwcvt_f_xu_v, 8, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
// vint32m2_t vfwcvt_x_f_v_i32m2_tamu (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VInt32VBVIVF_TAMU, fwcvt_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vint32m2_t vfwcvt_rtz_x_f_v_i32m2_tamu (vbool16_t mask, vint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VInt32VBVIVF_TAMU, fwcvt_rtz_x_f_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat16)
// vuint32m2_t vfwcvt_xu_f_v_u32m2_tamu (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VUInt32VBVUVF_TAMU, fwcvt_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vuint32m2_t vfwcvt_rtz_xu_f_v_u32m2_tamu (vbool16_t mask, vuint32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV16VUInt32VBVUVF_TAMU, fwcvt_rtz_xu_f_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat16)
// vfloat32m2_t vfwcvt_f_x_v_f32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVI_TAMU, fwcvt_f_x_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt16)
// vfloat32m2_t vfwcvt_f_xu_v_f32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vuint16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVU_TAMU, fwcvt_f_xu_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
// vfloat32m2_t vfwcvt_f_f_v_f32m2_tamu (vbool16_t mask, vfloat32m2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV16VFloat32VBVFVF_TAMU, fwcvt_f_f_v, 16, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vint64m2_t vfwcvt_x_f_v_i64m2_tamu (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VInt64VBVIVF_TAMU, fwcvt_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vint64m2_t vfwcvt_rtz_x_f_v_i64m2_tamu (vbool32_t mask, vint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VInt64VBVIVF_TAMU, fwcvt_rtz_x_f_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDFloat32)
// vuint64m2_t vfwcvt_xu_f_v_u64m2_tamu (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VUInt64VBVUVF_TAMU, fwcvt_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vuint64m2_t vfwcvt_rtz_xu_f_v_u64m2_tamu (vbool32_t mask, vuint64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fwcvt_rtzV32VUInt64VBVUVF_TAMU, fwcvt_rtz_xu_f_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDFloat32)
// vfloat64m2_t vfwcvt_f_x_v_f64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVI_TAMU, fwcvt_f_x_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDInt32)
// vfloat64m2_t vfwcvt_f_xu_v_f64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVU_TAMU, fwcvt_f_xu_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
// vfloat64m2_t vfwcvt_f_f_v_f64m2_tamu (vbool32_t mask, vfloat64m2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FwcvtV32VFloat64VBVFVF_TAMU, fwcvt_f_f_v, 32, FLOAT, HaveVLParameter | MaskedOperation | WideningOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)

// vint8mf2_t vfncvt_x_f_w_i8mf2_tu (vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VIVF_TU, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_tu (vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VIVF_TU, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_tu (vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VUVF_TU, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_tu (vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VUVF_TU, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_tu (vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VIVF_TU, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_tu (vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VIVF_TU, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_tu (vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VUVF_TU, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_tu (vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VUVF_TU, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_tu (vfloat16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VFVI_TU, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_tu (vfloat16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VFVU_TU, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_tu (vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VFVF_TU, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_tu (vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VFVF_TU, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_tu (vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VIVF_TU, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_tu (vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VIVF_TU, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_tu (vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VUVF_TU, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_tu (vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VUVF_TU, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_tu (vfloat32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VFVI_TU, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_tu (vfloat32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VFVU_TU, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_tu (vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VFVF_TU, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_tu (vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VFVF_TU, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat64)
// vint8mf2_t vfncvt_x_f_w_i8mf2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VF_TA, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 1, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VF_TA, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt8, 1, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VF_TA, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 1, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_ta (vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VF_TA, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt8, 1, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VF_TA, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 1, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VF_TA, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt16, 1, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VF_TA, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 1, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VF_TA, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt16, 1, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_ta (vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VI_TA, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat16, 1, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_ta (vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VU_TA, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat16, 1, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VF_TA, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat16, 1, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_ta (vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VF_TA, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat16, 1, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VF_TA, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 1, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VF_TA, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDInt32, 1, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VF_TA, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 1, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VF_TA, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDUInt32, 1, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_ta (vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VI_TA, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat32, 1, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_ta (vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VU_TA, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat32, 1, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VF_TA, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat32, 1, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_ta (vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VF_TA, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | NonmaskedOperation | NarrowingOperation | TailAgnostic, OneDFloat32, 1, OneDFloat64)
// vint8mf2_t vfncvt_x_f_w_i8mf2_tuma (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VBVIVF_TUMA, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_tuma (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VBVIVF_TUMA, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_tuma (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VBVUVF_TUMA, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_tuma (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VBVUVF_TUMA, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_tuma (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VBVIVF_TUMA, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_tuma (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VBVIVF_TUMA, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_tuma (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VBVUVF_TUMA, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_tuma (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VBVUVF_TUMA, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_tuma (vbool32_t mask, vfloat16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVI_TUMA, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_tuma (vbool32_t mask, vfloat16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVU_TUMA, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_tuma (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVF_TUMA, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_tuma (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VBVFVF_TUMA, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_tuma (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VBVIVF_TUMA, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_tuma (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VBVIVF_TUMA, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_tuma (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VBVUVF_TUMA, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_tuma (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VBVUVF_TUMA, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_tuma (vbool64_t mask, vfloat32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVI_TUMA, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_tuma (vbool64_t mask, vfloat32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVU_TUMA, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_tuma (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVF_TUMA, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_tuma (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VBVFVF_TUMA, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
// vint8mf2_t vfncvt_x_f_w_i8mf2_tumu (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VBVIVF_TUMU, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_tumu (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VBVIVF_TUMU, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_tumu (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VBVUVF_TUMU, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_tumu (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VBVUVF_TUMU, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_tumu (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VBVIVF_TUMU, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_tumu (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VBVIVF_TUMU, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_tumu (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VBVUVF_TUMU, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_tumu (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VBVUVF_TUMU, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_tumu (vbool32_t mask, vfloat16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVI_TUMU, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_tumu (vbool32_t mask, vfloat16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVU_TUMU, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_tumu (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVF_TUMU, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_tumu (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VBVFVF_TUMU, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_tumu (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VBVIVF_TUMU, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_tumu (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VBVIVF_TUMU, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_tumu (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VBVUVF_TUMU, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_tumu (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VBVUVF_TUMU, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_tumu (vbool64_t mask, vfloat32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVI_TUMU, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_tumu (vbool64_t mask, vfloat32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVU_TUMU, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_tumu (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVF_TUMU, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_tumu (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VBVFVF_TUMU, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
// vint8mf2_t vfncvt_x_f_w_i8mf2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VBVF_TAMA, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VBVF_TAMA, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VBVF_TAMA, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_tama (vbool16_t mask, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VBVF_TAMA, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VBVF_TAMA, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VBVF_TAMA, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VBVF_TAMA, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VBVF_TAMA, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_tama (vbool32_t mask, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVI_TAMA, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_tama (vbool32_t mask, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVU_TAMA, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVF_TAMA, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_tama (vbool32_t mask, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VBVF_TAMA, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VBVF_TAMA, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VBVF_TAMA, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VBVF_TAMA, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VBVF_TAMA, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_tama (vbool64_t mask, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVI_TAMA, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_tama (vbool64_t mask, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVU_TAMA, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVF_TAMA, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_tama (vbool64_t mask, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VBVF_TAMA, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | NarrowingOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat64)
// vint8mf2_t vfncvt_x_f_w_i8mf2_tamu (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VInt8VBVIVF_TAMU, fncvt_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vint8mf2_t vfncvt_rtz_x_f_w_i8mf2_tamu (vbool16_t mask, vint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VInt8VBVIVF_TAMU, fncvt_rtz_x_f_w, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDFloat16)
// vuint8mf2_t vfncvt_xu_f_w_u8mf2_tamu (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV16VUInt8VBVUVF_TAMU, fncvt_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vuint8mf2_t vfncvt_rtz_xu_f_w_u8mf2_tamu (vbool16_t mask, vuint8mf2_t merge, vfloat16m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV16VUInt8VBVUVF_TAMU, fncvt_rtz_xu_f_w, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDFloat16)
// vint16mf2_t vfncvt_x_f_w_i16mf2_tamu (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VInt16VBVIVF_TAMU, fncvt_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vint16mf2_t vfncvt_rtz_x_f_w_i16mf2_tamu (vbool32_t mask, vint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VInt16VBVIVF_TAMU, fncvt_rtz_x_f_w, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDFloat32)
// vuint16mf2_t vfncvt_xu_f_w_u16mf2_tamu (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VUInt16VBVUVF_TAMU, fncvt_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vuint16mf2_t vfncvt_rtz_xu_f_w_u16mf2_tamu (vbool32_t mask, vuint16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV32VUInt16VBVUVF_TAMU, fncvt_rtz_xu_f_w, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDFloat32)
// vfloat16mf2_t vfncvt_f_x_w_f16mf2_tamu (vbool32_t mask, vfloat16mf2_t merge, vint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVI_TAMU, fncvt_f_x_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDInt32)
// vfloat16mf2_t vfncvt_f_xu_w_f16mf2_tamu (vbool32_t mask, vfloat16mf2_t merge, vuint32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVU_TAMU, fncvt_f_xu_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
// vfloat16mf2_t vfncvt_f_f_w_f16mf2_tamu (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV32VFloat16VBVFVF_TAMU, fncvt_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vfloat16mf2_t vfncvt_rod_f_f_w_f16mf2_tamu (vbool32_t mask, vfloat16mf2_t merge, vfloat32m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV32VFloat16VBVFVF_TAMU, fncvt_rod_f_f_w, 32, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat32)
// vint32mf2_t vfncvt_x_f_w_i32mf2_tamu (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VInt32VBVIVF_TAMU, fncvt_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vint32mf2_t vfncvt_rtz_x_f_w_i32mf2_tamu (vbool64_t mask, vint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VInt32VBVIVF_TAMU, fncvt_rtz_x_f_w, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDFloat64)
// vuint32mf2_t vfncvt_xu_f_w_u32mf2_tamu (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VUInt32VBVUVF_TAMU, fncvt_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vuint32mf2_t vfncvt_rtz_xu_f_w_u32mf2_tamu (vbool64_t mask, vuint32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rtzV64VUInt32VBVUVF_TAMU, fncvt_rtz_xu_f_w, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDFloat64)
// vfloat32mf2_t vfncvt_f_x_w_f32mf2_tamu (vbool64_t mask, vfloat32mf2_t merge, vint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVI_TAMU, fncvt_f_x_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDInt64)
// vfloat32mf2_t vfncvt_f_xu_w_f32mf2_tamu (vbool64_t mask, vfloat32mf2_t merge, vuint64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVU_TAMU, fncvt_f_xu_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
// vfloat32mf2_t vfncvt_f_f_w_f32mf2_tamu (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(FncvtV64VFloat32VBVFVF_TAMU, fncvt_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)
// vfloat32mf2_t vfncvt_rod_f_f_w_f32mf2_tamu (vbool64_t mask, vfloat32mf2_t merge, vfloat64m1_t src, size_t vl);
CUSTOM_OP_TYPE(Fncvt_rodV64VFloat32VBVFVF_TAMU, fncvt_rod_f_f_w, 64, FLOAT, HaveVLParameter | MaskedOperation | NarrowingOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat64)

// vbool8_t vmsbf_m_b8_ma (vbool8_t mask, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsbfM0VBool8VBVB_MA, msbf_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation | NoMaskedOff | MaskAgnostic, OneDBool, 2, OneDBool, OneDBool)
// vbool8_t vmsbf_m_b8_mu (vbool8_t mask, vbool8_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsbfM0VBool8VBVBVB_MU, msbf_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation | MaskUndisturbed, OneDBool, 3, OneDBool, OneDBool, OneDBool)
// vbool8_t vmsif_m_b8_ma (vbool8_t mask, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsifM0VBool8VBVB_MA, msif_m, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | LogicalMaskOperation | MaskAgnostic, OneDBool, 2, OneDBool, OneDBool)
// vbool8_t vmsif_m_b8_mu (vbool8_t mask, vbool8_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsifM0VBool8VBVBVB_MU, msif_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation | MaskUndisturbed, OneDBool, 3, OneDBool, OneDBool, OneDBool)
// vbool8_t vmsof_m_b8_ma (vbool8_t mask, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsofM0VBool8VBVB_MA, msof_m, 8, BOOL, HaveVLParameter | MaskedOperation | NoMaskedOff | LogicalMaskOperation | MaskAgnostic, OneDBool, 2, OneDBool, OneDBool)
// vbool8_t vmsof_m_b8_mu (vbool8_t mask, vbool8_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(MsofM0VBool8VBVBVB_MU, msof_m, 8, BOOL, HaveVLParameter | MaskedOperation | LogicalMaskOperation | MaskUndisturbed, OneDBool, 3, OneDBool, OneDBool, OneDBool)

// vuint8m1_t viota_m_u8m1_tu (vuint8m1_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VUVB_TU, iota_m, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDBool)
// vuint16m1_t viota_m_u16m1_tu (vuint16m1_t merge, vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VUVB_TU, iota_m, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDBool)
// vuint32m1_t viota_m_u32m1_tu (vuint32m1_t merge, vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VUVB_TU, iota_m, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDBool)
// vuint64m1_t viota_m_u64m1_tu (vuint64m1_t merge, vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VUVB_TU, iota_m, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDBool)
// vuint8m1_t viota_m_u8m1_ta (vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VB_TA, iota_m, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 1, OneDBool)
// vuint16m1_t viota_m_u16m1_ta (vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VB_TA, iota_m, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 1, OneDBool)
// vuint32m1_t viota_m_u32m1_ta (vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VB_TA, iota_m, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 1, OneDBool)
// vuint64m1_t viota_m_u64m1_ta (vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VB_TA, iota_m, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 1, OneDBool)
// vuint8m1_t viota_m_u8m1_tuma (vbool8_t mask, vuint8m1_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VBVUVB_TUMA, iota_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDBool)
// vuint16m1_t viota_m_u16m1_tuma (vbool16_t mask, vuint16m1_t merge, vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VBVUVB_TUMA, iota_m, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDBool)
// vuint32m1_t viota_m_u32m1_tuma (vbool32_t mask, vuint32m1_t merge, vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VBVUVB_TUMA, iota_m, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDBool)
// vuint64m1_t viota_m_u64m1_tuma (vbool64_t mask, vuint64m1_t merge, vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VBVUVB_TUMA, iota_m, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDBool)
// vuint8m1_t viota_m_u8m1_tumu (vbool8_t mask, vuint8m1_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VBVUVB_TUMU, iota_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDBool)
// vuint16m1_t viota_m_u16m1_tumu (vbool16_t mask, vuint16m1_t merge, vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VBVUVB_TUMU, iota_m, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDBool)
// vuint32m1_t viota_m_u32m1_tumu (vbool32_t mask, vuint32m1_t merge, vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VBVUVB_TUMU, iota_m, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDBool)
// vuint64m1_t viota_m_u64m1_tumu (vbool64_t mask, vuint64m1_t merge, vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VBVUVB_TUMU, iota_m, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDBool)
// vuint8m1_t viota_m_u8m1_tama (vbool8_t mask, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VBVB_TAMA, iota_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDBool)
// vuint16m1_t viota_m_u16m1_tama (vbool16_t mask, vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VBVB_TAMA, iota_m, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDBool)
// vuint32m1_t viota_m_u32m1_tama (vbool32_t mask, vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VBVB_TAMA, iota_m, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDBool)
// vuint64m1_t viota_m_u64m1_tama (vbool64_t mask, vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VBVB_TAMA, iota_m, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDBool)
// vuint8m1_t viota_m_u8m1_tamu (vbool8_t mask, vuint8m1_t merge, vbool8_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM8VUInt8VBVUVB_TAMU, iota_m, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDBool)
// vuint16m1_t viota_m_u16m1_tamu (vbool16_t mask, vuint16m1_t merge, vbool16_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM16VUInt16VBVUVB_TAMU, iota_m, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDBool)
// vuint32m1_t viota_m_u32m1_tamu (vbool32_t mask, vuint32m1_t merge, vbool32_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM32VUInt32VBVUVB_TAMU, iota_m, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDBool)
// vuint64m1_t viota_m_u64m1_tamu (vbool64_t mask, vuint64m1_t merge, vbool64_t op1, size_t vl);
CUSTOM_OP_TYPE(IotaM64VUInt64VBVUVB_TAMU, iota_m, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDBool)

// vuint8m1_t vid_v_u8m1_tu (vuint8m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8VU_TU, id_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vid_v_u16m1_tu (vuint16m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16VU_TU, id_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vid_v_u32m1_tu (vuint32m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32VU_TU, id_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vid_v_u64m1_tu (vuint64m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64VU_TU, id_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailUndisturbed, OneDUInt64, 1, OneDUInt64)
// vuint8m1_t vid_v_u8m1_ta (size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8_TA, id_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt8, 0, )
// vuint16m1_t vid_v_u16m1_ta (size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16_TA, id_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt16, 0, )
// vuint32m1_t vid_v_u32m1_ta (size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32_TA, id_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt32, 0, )
// vuint64m1_t vid_v_u64m1_ta (size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64_TA, id_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | TailAgnostic, OneDUInt64, 0, )
// vuint8m1_t vid_v_u8m1_tuma (vbool8_t mask, vuint8m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8VBVU_TUMA, id_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vid_v_u16m1_tuma (vbool16_t mask, vuint16m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16VBVU_TUMA, id_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vid_v_u32m1_tuma (vbool32_t mask, vuint32m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32VBVU_TUMA, id_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vid_v_u64m1_tuma (vbool64_t mask, vuint64m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64VBVU_TUMA, id_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt64)
// vuint8m1_t vid_v_u8m1_tumu (vbool8_t mask, vuint8m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8VBVU_TUMU, id_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vid_v_u16m1_tumu (vbool16_t mask, vuint16m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16VBVU_TUMU, id_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vid_v_u32m1_tumu (vbool32_t mask, vuint32m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32VBVU_TUMU, id_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vid_v_u64m1_tumu (vbool64_t mask, vuint64m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64VBVU_TUMU, id_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 2, OneDBool, OneDUInt64)
// vuint8m1_t vid_v_u8m1_tama (vbool8_t mask, size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8VB_TAMA, id_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt8, 1, OneDBool)
// vuint16m1_t vid_v_u16m1_tama (vbool16_t mask, size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16VB_TAMA, id_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt16, 1, OneDBool)
// vuint32m1_t vid_v_u32m1_tama (vbool32_t mask, size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32VB_TAMA, id_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt32, 1, OneDBool)
// vuint64m1_t vid_v_u64m1_tama (vbool64_t mask, size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64VB_TAMA, id_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | TailAgnostic | MaskAgnostic, OneDUInt64, 1, OneDBool)
// vuint8m1_t vid_v_u8m1_tamu (vbool8_t mask, vuint8m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM8VUInt8VBVU_TAMU, id_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vid_v_u16m1_tamu (vbool16_t mask, vuint16m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM16VUInt16VBVU_TAMU, id_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vid_v_u32m1_tamu (vbool32_t mask, vuint32m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM32VUInt32VBVU_TAMU, id_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vid_v_u64m1_tamu (vbool64_t mask, vuint64m1_t merge, size_t vl);
CUSTOM_OP_TYPE(IdM64VUInt64VBVU_TAMU, id_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 2, OneDBool, OneDUInt64)

// vint8m1_t vredsum_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SInt8VIVI_TU, redsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredsum_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SInt16VIVI_TU, redsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredsum_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SInt32VIVI_TU, redsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredsum_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SInt64VIVI_TU, redsum_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredsum_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SUInt8VUVU_TU, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredsum_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SUInt16VUVU_TU, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredsum_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SUInt32VUVU_TU, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredsum_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SUInt64VUVU_TU, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredmax_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS8SInt8VIVI_TU, redmax_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredmax_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS16SInt16VIVI_TU, redmax_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredmax_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS32SInt32VIVI_TU, redmax_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredmax_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS64SInt64VIVI_TU, redmax_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredmaxu_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VUVU_TU, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredmaxu_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VUVU_TU, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredmaxu_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VUVU_TU, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredmaxu_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VUVU_TU, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredmin_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS8SInt8VIVI_TU, redmin_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredmin_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS16SInt16VIVI_TU, redmin_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredmin_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS32SInt32VIVI_TU, redmin_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredmin_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS64SInt64VIVI_TU, redmin_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredminu_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS8SUInt8VUVU_TU, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredminu_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS16SUInt16VUVU_TU, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredminu_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS32SUInt32VUVU_TU, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredminu_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS64SUInt64VUVU_TU, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredand_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SInt8VIVI_TU, redand_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredand_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SInt16VIVI_TU, redand_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredand_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SInt32VIVI_TU, redand_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredand_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SInt64VIVI_TU, redand_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredand_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SUInt8VUVU_TU, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredand_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SUInt16VUVU_TU, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredand_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SUInt32VUVU_TU, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredand_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SUInt64VUVU_TU, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredor_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SInt8VIVI_TU, redor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredor_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SInt16VIVI_TU, redor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredor_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SInt32VIVI_TU, redor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredor_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SInt64VIVI_TU, redor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredor_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SUInt8VUVU_TU, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredor_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SUInt16VUVU_TU, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredor_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SUInt32VUVU_TU, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredor_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SUInt64VUVU_TU, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredxor_vs_int8m1_int8m1_tu (vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SInt8VIVI_TU, redxor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vredxor_vs_int16m1_int16m1_tu (vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SInt16VIVI_TU, redxor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vredxor_vs_int32m1_int32m1_tu (vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SInt32VIVI_TU, redxor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vredxor_vs_int64m1_int64m1_tu (vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SInt64VIVI_TU, redxor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vredxor_vs_uint8m1_uint8m1_tu (vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SUInt8VUVU_TU, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vredxor_vs_uint16m1_uint16m1_tu (vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SUInt16VUVU_TU, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vredxor_vs_uint32m1_uint32m1_tu (vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SUInt32VUVU_TU, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vredxor_vs_uint64m1_uint64m1_tu (vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SUInt64VUVU_TU, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vint8m1_t vredsum_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SInt8VI_TA, redsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredsum_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SInt16VI_TA, redsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredsum_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SInt32VI_TA, redsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredsum_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SInt64VI_TA, redsum_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredsum_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SUInt8VU_TA, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredsum_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SUInt16VU_TA, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredsum_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SUInt32VU_TA, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredsum_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SUInt64VU_TA, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vredmax_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS8SInt8VI_TA, redmax_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredmax_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS16SInt16VI_TA, redmax_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredmax_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS32SInt32VI_TA, redmax_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredmax_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS64SInt64VI_TA, redmax_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredmaxu_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VU_TA, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredmaxu_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VU_TA, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredmaxu_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VU_TA, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredmaxu_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VU_TA, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vredmin_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS8SInt8VI_TA, redmin_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredmin_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS16SInt16VI_TA, redmin_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredmin_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS32SInt32VI_TA, redmin_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredmin_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS64SInt64VI_TA, redmin_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredminu_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS8SUInt8VU_TA, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredminu_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS16SUInt16VU_TA, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredminu_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS32SUInt32VU_TA, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredminu_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS64SUInt64VU_TA, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vredand_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SInt8VI_TA, redand_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredand_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SInt16VI_TA, redand_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredand_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SInt32VI_TA, redand_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredand_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SInt64VI_TA, redand_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredand_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SUInt8VU_TA, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredand_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SUInt16VU_TA, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredand_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SUInt32VU_TA, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredand_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SUInt64VU_TA, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vredor_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SInt8VI_TA, redor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredor_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SInt16VI_TA, redor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredor_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SInt32VI_TA, redor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredor_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SInt64VI_TA, redor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredor_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SUInt8VU_TA, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredor_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SUInt16VU_TA, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredor_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SUInt32VU_TA, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredor_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SUInt64VU_TA, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vint8m1_t vredxor_vs_int8m1_int8m1_ta (vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SInt8VI_TA, redxor_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vredxor_vs_int16m1_int16m1_ta (vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SInt16VI_TA, redxor_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vredxor_vs_int32m1_int32m1_ta (vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SInt32VI_TA, redxor_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vredxor_vs_int64m1_int64m1_ta (vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SInt64VI_TA, redxor_vs, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vredxor_vs_uint8m1_uint8m1_ta (vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SUInt8VU_TA, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vredxor_vs_uint16m1_uint16m1_ta (vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SUInt16VU_TA, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vredxor_vs_uint32m1_uint32m1_ta (vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SUInt32VU_TA, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vredxor_vs_uint64m1_uint64m1_ta (vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SUInt64VU_TA, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)

// vint8m1_t vredsum_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SInt8VBVIVI_TUM, redsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredsum_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SInt16VBVIVI_TUM, redsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredsum_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SInt32VBVIVI_TUM, redsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredsum_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SInt64VBVIVI_TUM, redsum_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredsum_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SUInt8VBVUVU_TUM, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredsum_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SUInt16VBVUVU_TUM, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredsum_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SUInt32VBVUVU_TUM, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredsum_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SUInt64VBVUVU_TUM, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredmax_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS8SInt8VBVIVI_TUM, redmax_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredmax_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS16SInt16VBVIVI_TUM, redmax_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredmax_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS32SInt32VBVIVI_TUM, redmax_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredmax_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS64SInt64VBVIVI_TUM, redmax_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredmaxu_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VBVUVU_TUM, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredmaxu_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VBVUVU_TUM, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredmaxu_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VBVUVU_TUM, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredmaxu_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VBVUVU_TUM, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredmin_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS8SInt8VBVIVI_TUM, redmin_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredmin_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS16SInt16VBVIVI_TUM, redmin_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredmin_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS32SInt32VBVIVI_TUM, redmin_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredmin_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS64SInt64VBVIVI_TUM, redmin_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredminu_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS8SUInt8VBVUVU_TUM, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredminu_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS16SUInt16VBVUVU_TUM, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredminu_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS32SUInt32VBVUVU_TUM, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredminu_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS64SUInt64VBVUVU_TUM, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredand_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SInt8VBVIVI_TUM, redand_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredand_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SInt16VBVIVI_TUM, redand_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredand_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SInt32VBVIVI_TUM, redand_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredand_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SInt64VBVIVI_TUM, redand_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredand_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SUInt8VBVUVU_TUM, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredand_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SUInt16VBVUVU_TUM, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredand_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SUInt32VBVUVU_TUM, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredand_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SUInt64VBVUVU_TUM, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredor_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SInt8VBVIVI_TUM, redor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredor_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SInt16VBVIVI_TUM, redor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed |ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredor_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SInt32VBVIVI_TUM, redor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed |ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredor_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SInt64VBVIVI_TUM, redor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed |ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredor_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SUInt8VBVUVU_TUM, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed |ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredor_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SUInt16VBVUVU_TUM, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredor_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SUInt32VBVUVU_TUM, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredor_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SUInt64VBVUVU_TUM, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredxor_vs_int8m1_int8m1_tum (vbool8_t mask, vint8m1_t merge, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SInt8VBVIVI_TUM, redxor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vredxor_vs_int16m1_int16m1_tum (vbool16_t mask, vint16m1_t merge, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SInt16VBVIVI_TUM, redxor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vredxor_vs_int32m1_int32m1_tum (vbool32_t mask, vint32m1_t merge, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SInt32VBVIVI_TUM, redxor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vredxor_vs_int64m1_int64m1_tum (vbool64_t mask, vint64m1_t merge, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SInt64VBVIVI_TUM, redxor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vredxor_vs_uint8m1_uint8m1_tum (vbool8_t mask, vuint8m1_t merge, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SUInt8VBVUVU_TUM, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vredxor_vs_uint16m1_uint16m1_tum (vbool16_t mask, vuint16m1_t merge, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SUInt16VBVUVU_TUM, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vredxor_vs_uint32m1_uint32m1_tum (vbool32_t mask, vuint32m1_t merge, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SUInt32VBVUVU_TUM, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vredxor_vs_uint64m1_uint64m1_tum (vbool64_t mask, vuint64m1_t merge, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SUInt64VBVUVU_TUM, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vint8m1_t vredsum_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SInt8VBVI_TAM, redsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredsum_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SInt16VBVI_TAM, redsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredsum_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SInt32VBVI_TAM, redsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredsum_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SInt64VBVI_TAM, redsum_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredsum_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS8SUInt8VBVU_TAM, redsum_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredsum_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS16SUInt16VBVU_TAM, redsum_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredsum_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS32SUInt32VBVU_TAM, redsum_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredsum_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedsumVS64SUInt64VBVU_TAM, redsum_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vredmax_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS8SInt8VBVI_TAM, redmax_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredmax_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS16SInt16VBVI_TAM, redmax_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredmax_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS32SInt32VBVI_TAM, redmax_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredmax_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxVS64SInt64VBVI_TAM, redmax_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredmaxu_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS8SUInt8VBVU_TAM, redmaxu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredmaxu_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS16SUInt16VBVU_TAM, redmaxu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredmaxu_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS32SUInt32VBVU_TAM, redmaxu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredmaxu_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedmaxuVS64SUInt64VBVU_TAM, redmaxu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vredmin_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS8SInt8VBVI_TAM, redmin_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredmin_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS16SInt16VBVI_TAM, redmin_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredmin_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS32SInt32VBVI_TAM, redmin_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredmin_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminVS64SInt64VBVI_TAM, redmin_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredminu_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS8SUInt8VBVU_TAM, redminu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredminu_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS16SUInt16VBVU_TAM, redminu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredminu_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS32SUInt32VBVU_TAM, redminu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredminu_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedminuVS64SUInt64VBVU_TAM, redminu_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vredand_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SInt8VBVI_TAM, redand_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredand_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SInt16VBVI_TAM, redand_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredand_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SInt32VBVI_TAM, redand_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredand_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SInt64VBVI_TAM, redand_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredand_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS8SUInt8VBVU_TAM, redand_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredand_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS16SUInt16VBVU_TAM, redand_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredand_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS32SUInt32VBVU_TAM, redand_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredand_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedandVS64SUInt64VBVU_TAM, redand_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vredor_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SInt8VBVI_TAM, redor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredor_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SInt16VBVI_TAM, redor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredor_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SInt32VBVI_TAM, redor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredor_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SInt64VBVI_TAM, redor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredor_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS8SUInt8VBVU_TAM, redor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredor_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS16SUInt16VBVU_TAM, redor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredor_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS32SUInt32VBVU_TAM, redor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredor_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedorVS64SUInt64VBVU_TAM, redor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)
// vint8m1_t vredxor_vs_int8m1_int8m1_tam (vbool8_t mask, vint8m1_t vector, vint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SInt8VBVI_TAM, redxor_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vredxor_vs_int16m1_int16m1_tam (vbool16_t mask, vint16m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SInt16VBVI_TAM, redxor_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vredxor_vs_int32m1_int32m1_tam (vbool32_t mask, vint32m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SInt32VBVI_TAM, redxor_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vredxor_vs_int64m1_int64m1_tam (vbool64_t mask, vint64m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SInt64VBVI_TAM, redxor_vs, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vredxor_vs_uint8m1_uint8m1_tam (vbool8_t mask, vuint8m1_t vector, vuint8m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS8SUInt8VBVU_TAM, redxor_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vredxor_vs_uint16m1_uint16m1_tam (vbool16_t mask, vuint16m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS16SUInt16VBVU_TAM, redxor_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vredxor_vs_uint32m1_uint32m1_tam (vbool32_t mask, vuint32m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS32SUInt32VBVU_TAM, redxor_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vredxor_vs_uint64m1_uint64m1_tam (vbool64_t mask, vuint64m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(RedxorVS64SUInt64VBVU_TAM, redxor_vs, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic |ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt64)

// vint16m1_t vwredsum_vs_int8m1_int16m1_tu (vint16m1_t merge, vint8m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS8SInt16VIVI_TU, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt8)
// vint32m1_t vwredsum_vs_int16m1_int32m1_tu (vint32m1_t merge, vint16m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS16SInt32VIVI_TU, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt16)
// vint64m1_t vwredsum_vs_int32m1_int64m1_tu (vint64m1_t merge, vint32m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS32SInt64VIVI_TU, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt32)
// vuint16m1_t vwredsumu_vs_uint8m1_uint16m1_tu (vuint16m1_t merge, vuint8m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VUVU_TU, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint32m1_t vwredsumu_vs_uint16m1_uint32m1_tu (vuint32m1_t merge, vuint16m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VUVU_TU, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint64m1_t vwredsumu_vs_uint32m1_uint64m1_tu (vuint64m1_t merge, vuint32m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VUVU_TU, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vint16m1_t vwredsum_vs_int8m1_int16m1_ta (vint8m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS8SInt16VI_TA, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt16, 1, OneDInt8)
// vint32m1_t vwredsum_vs_int16m1_int32m1_ta (vint16m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS16SInt32VI_TA, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt32, 1, OneDInt16)
// vint64m1_t vwredsum_vs_int32m1_int64m1_ta (vint32m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS32SInt64VI_TA, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDInt64, 1, OneDInt32)
// vuint16m1_t vwredsumu_vs_uint8m1_uint16m1_ta (vuint8m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VU_TA, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt16, 1, OneDUInt8)
// vuint32m1_t vwredsumu_vs_uint16m1_uint32m1_ta (vuint16m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VU_TA, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt32, 1, OneDUInt16)
// vuint64m1_t vwredsumu_vs_uint32m1_uint64m1_ta (vuint32m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VU_TA, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDUInt64, 1, OneDUInt32)

// vint16m1_t vwredsum_vs_int8m1_int16m1_tum (vbool8_t mask, vint16m1_t merge, vint8m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS8SInt16VBVIVI_TUM, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt16, 3, OneDBool, OneDInt16, OneDInt8)
// vint32m1_t vwredsum_vs_int16m1_int32m1_tum (vbool16_t mask, vint32m1_t merge, vint16m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS16SInt32VBVIVI_TUM, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt32, 3, OneDBool, OneDInt32, OneDInt16)
// vint64m1_t vwredsum_vs_int32m1_int64m1_tum (vbool32_t mask, vint64m1_t merge, vint32m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS32SInt64VBVIVI_TUM, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDInt64, 3, OneDBool, OneDInt64, OneDInt32)
// vuint16m1_t vwredsumu_vs_uint8m1_uint16m1_tum (vbool8_t mask, vuint16m1_t merge, vuint8m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VBVUVU_TUM, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint32m1_t vwredsumu_vs_uint16m1_uint32m1_tum (vbool16_t mask, vuint32m1_t merge, vuint16m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VBVUVU_TUM, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint64m1_t vwredsumu_vs_uint32m1_uint64m1_tum (vbool32_t mask, vuint64m1_t merge, vuint32m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VBVUVU_TUM, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vint16m1_t vwredsum_vs_int8m1_int16m1_tam (vbool8_t mask, vint8m1_t vector, vint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS8SInt16VBVI_TAM, wredsum_vs, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt16, 2, OneDBool, OneDInt8)
// vint32m1_t vwredsum_vs_int16m1_int32m1_tam (vbool16_t mask, vint16m1_t vector, vint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS16SInt32VBVI_TAM, wredsum_vs, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt32, 2, OneDBool, OneDInt16)
// vint64m1_t vwredsum_vs_int32m1_int64m1_tam (vbool32_t mask, vint32m1_t vector, vint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumVS32SInt64VBVI_TAM, wredsum_vs, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDInt64, 2, OneDBool, OneDInt32)
// vuint16m1_t vwredsumu_vs_uint8m1_uint16m1_tam (vbool8_t mask, vuint8m1_t vector, vuint16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS8SUInt16VBVU_TAM, wredsumu_vs, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt16, 2, OneDBool, OneDUInt8)
// vuint32m1_t vwredsumu_vs_uint16m1_uint32m1_tam (vbool16_t mask, vuint16m1_t vector, vuint32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS16SUInt32VBVU_TAM, wredsumu_vs, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt32, 2, OneDBool, OneDUInt16)
// vuint64m1_t vwredsumu_vs_uint32m1_uint64m1_tam (vbool32_t mask, vuint32m1_t vector, vuint64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(WredsumuVS32SUInt64VBVU_TAM, wredsumu_vs, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDUInt64, 2, OneDBool, OneDUInt32)

// vfloat16m1_t vfredosum_vs_float16m1_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS16SFloat16VFVF_TU, fredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredosum_vs_float32m1_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS32SFloat32VFVF_TU, fredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredosum_vs_float64m1_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS64SFloat64VFVF_TU, fredosum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredusum_vs_float16m1_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS16SFloat16VFVF_TU, fredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredusum_vs_float32m1_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS32SFloat32VFVF_TU, fredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredusum_vs_float64m1_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS64SFloat64VFVF_TU, fredusum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredmax_vs_float16m1_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VFVF_TU, fredmax_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredmax_vs_float32m1_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VFVF_TU, fredmax_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredmax_vs_float64m1_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VFVF_TU, fredmax_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredmin_vs_float16m1_float16m1_tu (vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS16SFloat16VFVF_TU, fredmin_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredmin_vs_float32m1_float32m1_tu (vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS32SFloat32VFVF_TU, fredmin_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredmin_vs_float64m1_float64m1_tu (vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS64SFloat64VFVF_TU, fredmin_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredosum_vs_float16m1_float16m1_ta (vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS16SFloat16VF_TA, fredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfredosum_vs_float32m1_float32m1_ta (vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS32SFloat32VF_TA, fredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfredosum_vs_float64m1_float64m1_ta (vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS64SFloat64VF_TA, fredosum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfredusum_vs_float16m1_float16m1_ta (vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS16SFloat16VF_TA, fredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfredusum_vs_float32m1_float32m1_ta (vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS32SFloat32VF_TA, fredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfredusum_vs_float64m1_float64m1_ta (vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS64SFloat64VF_TA, fredusum_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfredmax_vs_float16m1_float16m1_ta (vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VF_TA, fredmax_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfredmax_vs_float32m1_float32m1_ta (vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VF_TA, fredmax_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfredmax_vs_float64m1_float64m1_ta (vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VF_TA, fredmax_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfredmin_vs_float16m1_float16m1_ta (vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS16SFloat16VF_TA, fredmin_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vfredmin_vs_float32m1_float32m1_ta (vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS32SFloat32VF_TA, fredmin_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vfredmin_vs_float64m1_float64m1_ta (vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS64SFloat64VF_TA, fredmin_vs, 64, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vfloat16m1_t vfredosum_vs_float16m1_float16m1_tum (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS16SFloat16VBVFVF_TUM, fredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredosum_vs_float32m1_float32m1_tum (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS32SFloat32VBVFVF_TUM, fredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredosum_vs_float64m1_float64m1_tum (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS64SFloat64VBVFVF_TUM, fredosum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredusum_vs_float16m1_float16m1_tum (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS16SFloat16VBVFVF_TUM, fredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredusum_vs_float32m1_float32m1_tum (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS32SFloat32VBVFVF_TUM, fredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredusum_vs_float64m1_float64m1_tum (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS64SFloat64VBVFVF_TUM, fredusum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredmax_vs_float16m1_float16m1_tum (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VBVFVF_TUM, fredmax_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredmax_vs_float32m1_float32m1_tum (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VBVFVF_TUM, fredmax_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredmax_vs_float64m1_float64m1_tum (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VBVFVF_TUM, fredmax_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredmin_vs_float16m1_float16m1_tum (vbool16_t mask, vfloat16m1_t merge, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS16SFloat16VBVFVF_TUM, fredmin_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vfredmin_vs_float32m1_float32m1_tum (vbool32_t mask, vfloat32m1_t merge, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS32SFloat32VBVFVF_TUM, fredmin_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vfredmin_vs_float64m1_float64m1_tum (vbool64_t mask, vfloat64m1_t merge, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS64SFloat64VBVFVF_TUM, fredmin_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vfloat16m1_t vfredosum_vs_float16m1_float16m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS16SFloat16VBVF_TAM, fredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfredosum_vs_float32m1_float32m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS32SFloat32VBVF_TAM, fredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfredosum_vs_float64m1_float64m1_tam (vbool64_t mask, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredosumVS64SFloat64VBVF_TAM, fredosum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfredusum_vs_float16m1_float16m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS16SFloat16VBVF_TAM, fredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfredusum_vs_float32m1_float32m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS32SFloat32VBVF_TAM, fredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfredusum_vs_float64m1_float64m1_tam (vbool64_t mask, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredusumVS64SFloat64VBVF_TAM, fredusum_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfredmax_vs_float16m1_float16m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS16SFloat16VBVF_TAM, fredmax_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfredmax_vs_float32m1_float32m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS32SFloat32VBVF_TAM, fredmax_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfredmax_vs_float64m1_float64m1_tam (vbool64_t mask, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredmaxVS64SFloat64VBVF_TAM, fredmax_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat64)
// vfloat16m1_t vfredmin_vs_float16m1_float16m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat16m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS16SFloat16VBVF_TAM, fredmin_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vfredmin_vs_float32m1_float32m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS32SFloat32VBVF_TAM, fredmin_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vfredmin_vs_float64m1_float64m1_tam (vbool64_t mask, vfloat64m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FredminVS64SFloat64VBVF_TAM, fredmin_vs, 64, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat64)

// vfloat32m1_t vfwredosum_vs_float16m1_float32m1_tu (vfloat32m1_t merge, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS16SFloat32VFVF_TU, fwredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat16)
// vfloat64m1_t vfwredosum_vs_float32m1_float64m1_tu (vfloat64m1_t merge, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VFVF_TU, fwredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat32)
// vfloat32m1_t vfwredusum_vs_float16m1_float32m1_tu (vfloat32m1_t merge, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VFVF_TU, fwredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat16)
// vfloat64m1_t vfwredusum_vs_float32m1_float64m1_tu (vfloat64m1_t merge, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VFVF_TU, fwredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat32)
// vfloat32m1_t vfwredosum_vs_float16m1_float32m1_ta (vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS16SFloat32VF_TA, fwredosum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat16)
// vfloat64m1_t vfwredosum_vs_float32m1_float64m1_ta (vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VF_TA, fwredosum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat32)
// vfloat32m1_t vfwredusum_vs_float16m1_float32m1_ta (vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VF_TA, fwredusum_vs, 16, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat32, 1, OneDFloat16)
// vfloat64m1_t vfwredusum_vs_float32m1_float64m1_ta (vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VF_TA, fwredusum_vs, 32, FLOAT, HaveVLParameter | NonmaskedOperation | ReductionOperation | TailAgnostic, OneDFloat64, 1, OneDFloat32)

// vfloat32m1_t vfwredosum_vs_float16m1_float32m1_tum (vbool16_t mask, vfloat32m1_t merge, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS16SFloat32VBVFVF_TUM, fwredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vfloat64m1_t vfwredosum_vs_float32m1_float64m1_tum (vbool32_t mask, vfloat64m1_t merge, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VBVFVF_TUM, fwredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat32m1_t vfwredusum_vs_float16m1_float32m1_tum (vbool16_t mask, vfloat32m1_t merge, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VBVFVF_TUM, fwredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat16)
// vfloat64m1_t vfwredusum_vs_float32m1_float64m1_tum (vbool32_t mask, vfloat64m1_t merge, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VBVFVF_TUM, fwredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailUndisturbed | ReductionOperation, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat32)
// vfloat32m1_t vfwredosum_vs_float16m1_float32m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS16SFloat32VBVF_TAM, fwredosum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat16)
// vfloat64m1_t vfwredosum_vs_float32m1_float64m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredosumVS32SFloat64VBVF_TAM, fwredosum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat32)
// vfloat32m1_t vfwredusum_vs_float16m1_float32m1_tam (vbool16_t mask, vfloat16m1_t vector, vfloat32m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS16SFloat32VBVF_TAM, fwredusum_vs, 16, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat32, 2, OneDBool, OneDFloat16)
// vfloat64m1_t vfwredusum_vs_float32m1_float64m1_tam (vbool32_t mask, vfloat32m1_t vector, vfloat64m1_t scalar, size_t vl);
CUSTOM_OP_TYPE(FwredusumVS32SFloat64VBVF_TAM, fwredusum_vs, 32, FLOAT, HaveVLParameter | MaskedOperation | TailAgnostic | ReductionOperation, OneDFloat64, 2, OneDBool, OneDFloat32)

// vint8m1_t vle8_v_int8m1_tu (vint8m1_t merge, const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8VISI_TU, le8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 2, OneDInt8, OneDInt8)
// vint16m1_t vle16_v_int16m1_tu (vint16m1_t merge, const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16VISI_TU, le16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 2, OneDInt16, OneDInt16)
// vint32m1_t vle32_v_int32m1_tu (vint32m1_t merge, const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32VISI_TU, le32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 2, OneDInt32, OneDInt32)
// vint64m1_t vle64_v_int64m1_tu (vint64m1_t merge, const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64VISI_TU, le64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 2, OneDInt64, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8VUSU_TU, le8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16VUSU_TU, le16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32VUSU_TU, le32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64VUSU_TU, le64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16VFSF_TU, le16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 2, OneDFloat16, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32VFSF_TU, le32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 2, OneDFloat32, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64VFSF_TU, le64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 2, OneDFloat64, OneDFloat64)
// vint8m1_t vle8_v_int8m1_ta (const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8SI_TA, le8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 1, OneDInt8)
// vint16m1_t vle16_v_int16m1_ta (const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16SI_TA, le16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 1, OneDInt16)
// vint32m1_t vle32_v_int32m1_ta (const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32SI_TA, le32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 1, OneDInt32)
// vint64m1_t vle64_v_int64m1_ta (const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64SI_TA, le64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 1, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_ta (const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8SU_TA, le8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 1, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_ta (const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16SU_TA, le16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 1, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_ta (const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32SU_TA, le32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 1, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_ta (const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64SU_TA, le64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 1, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_ta (const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16SF_TA, le16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 1, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_ta (const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32SF_TA, le32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 1, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_ta (const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64SF_TA, le64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 1, OneDFloat64)
// vint8m1_t vle8_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8VBVISI_TUMA, le8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vle16_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16VBVISI_TUMA, le16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vle32_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32VBVISI_TUMA, le32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vle64_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64VBVISI_TUMA, le64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8VBVUSU_TUMA, le8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16VBVUSU_TUMA, le16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32VBVUSU_TUMA, le32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64VBVUSU_TUMA, le64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16VBVFSF_TUMA, le16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32VBVFSF_TUMA, le32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64VBVFSF_TUMA, le64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vint8m1_t vle8_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8VBVISI_TUMU, le8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vle16_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16VBVISI_TUMU, le16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vle32_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32VBVISI_TUMU, le32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vle64_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64VBVISI_TUMU, le64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8VBVUSU_TUMU, le8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16VBVUSU_TUMU, le16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32VBVUSU_TUMU, le32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64VBVUSU_TUMU, le64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16VBVFSF_TUMU, le16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32VBVFSF_TUMU, le32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64VBVFSF_TUMU, le64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)
// vint8m1_t vle8_v_int8m1_tama (vbool8_t mask, const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8VBSI_TAMA, le8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 2, OneDBool, OneDInt8)
// vint16m1_t vle16_v_int16m1_tama (vbool16_t mask, const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16VBSI_TAMA, le16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 2, OneDBool, OneDInt16)
// vint32m1_t vle32_v_int32m1_tama (vbool32_t mask, const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32VBSI_TAMA, le32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 2, OneDBool, OneDInt32)
// vint64m1_t vle64_v_int64m1_tama (vbool64_t mask, const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64VBSI_TAMA, le64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 2, OneDBool, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8VBSU_TAMA, le8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 2, OneDBool, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16VBSU_TAMA, le16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 2, OneDBool, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32VBSU_TAMA, le32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 2, OneDBool, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64VBSU_TAMA, le64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 2, OneDBool, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_tama (vbool16_t mask, const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16VBSF_TAMA, le16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 2, OneDBool, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_tama (vbool32_t mask, const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32VBSF_TAMA, le32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 2, OneDBool, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_tama (vbool64_t mask, const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64VBSF_TAMA, le64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 2, OneDBool, OneDFloat64)
// vint8m1_t vle8_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VInt8VBVISI_TAMU, le8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 3, OneDBool, OneDInt8, OneDInt8)
// vint16m1_t vle16_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VInt16VBVISI_TAMU, le16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 3, OneDBool, OneDInt16, OneDInt16)
// vint32m1_t vle32_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VInt32VBVISI_TAMU, le32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 3, OneDBool, OneDInt32, OneDInt32)
// vint64m1_t vle64_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VInt64VBVISI_TAMU, le64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 3, OneDBool, OneDInt64, OneDInt64)
// vuint8m1_t vle8_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle8X8VUInt8VBVUSU_TAMU, le8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint16m1_t vle16_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VUInt16VBVUSU_TAMU, le16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint32m1_t vle32_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VUInt32VBVUSU_TAMU, le32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint64m1_t vle64_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VUInt64VBVUSU_TAMU, le64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vfloat16m1_t vle16_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle16X16VFloat16VBVFSF_TAMU, le16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 3, OneDBool, OneDFloat16, OneDFloat16)
// vfloat32m1_t vle32_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle32X32VFloat32VBVFSF_TAMU, le32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 3, OneDBool, OneDFloat32, OneDFloat32)
// vfloat64m1_t vle64_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, size_t vl);
CUSTOM_OP_TYPE(Vle64X64VFloat64VBVFSF_TAMU, le64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 3, OneDBool, OneDFloat64, OneDFloat64)

// vint8m1_t vlse8_v_int8m1_tu (vint8m1_t merge, const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8VISISI_TU, lse8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_tu (vint16m1_t merge, const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16VISISI_TU, lse16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_tu (vint32m1_t merge, const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32VISISI_TU, lse32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_tu (vint64m1_t merge, const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64VISISI_TU, lse64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VUSUSI_TU, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VUSUSI_TU, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VUSUSI_TU, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VUSUSI_TU, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VFSFSI_TU, lse16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VFSFSI_TU, lse32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VFSFSI_TU, lse64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, ScalarIntXLen)
// vint8m1_t vlse8_v_int8m1_ta (const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8SISI_TA, lse8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_ta (const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16SISI_TA, lse16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_ta (const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32SISI_TA, lse32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_ta (const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64SISI_TA, lse64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_ta (const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8SUSI_TA, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_ta (const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16SUSI_TA, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_ta (const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32SUSI_TA, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_ta (const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64SUSI_TA, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_ta (const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16SFSI_TA, lse16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_ta (const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32SFSI_TA, lse32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_ta (const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64SFSI_TA, lse64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, ScalarIntXLen)
// vint8m1_t vlse8_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8VBVISISI_TUMA, lse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16VBVISISI_TUMA, lse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32VBVISISI_TUMA, lse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64VBVISISI_TUMA, lse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VBVUSUSI_TUMA, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VBVUSUSI_TUMA, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VBVUSUSI_TUMA, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VBVUSUSI_TUMA, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VBVFSFSI_TUMA, lse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VBVFSFSI_TUMA, lse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VBVFSFSI_TUMA, lse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarIntXLen)
// vint8m1_t vlse8_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8VBVISISI_TUMU, lse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16VBVISISI_TUMU, lse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32VBVISISI_TUMU, lse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64VBVISISI_TUMU, lse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VBVUSUSI_TUMU, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VBVUSUSI_TUMU, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VBVUSUSI_TUMU, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VBVUSUSI_TUMU, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VBVFSFSI_TUMU, lse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VBVFSFSI_TUMU, lse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VBVFSFSI_TUMU, lse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarIntXLen)
// vint8m1_t vlse8_v_int8m1_tama (vbool8_t mask, const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8VBSISI_TAMA, lse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_tama (vbool16_t mask, const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16VBSISI_TAMA, lse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_tama (vbool32_t mask, const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32VBSISI_TAMA, lse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_tama (vbool64_t mask, const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64VBSISI_TAMA, lse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VBSUSI_TAMA, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VBSUSI_TAMA, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VBSUSI_TAMA, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VBSUSI_TAMA, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_tama (vbool16_t mask, const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VBSFSI_TAMA, lse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_tama (vbool32_t mask, const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VBSFSI_TAMA, lse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_tama (vbool64_t mask, const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VBSFSI_TAMA, lse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, ScalarIntXLen)
// vint8m1_t vlse8_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VInt8VBVISISI_TAMU, lse8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, ScalarIntXLen)
// vint16m1_t vlse16_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VInt16VBVISISI_TAMU, lse16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, ScalarIntXLen)
// vint32m1_t vlse32_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VInt32VBVISISI_TAMU, lse32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, ScalarIntXLen)
// vint64m1_t vlse64_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VInt64VBVISISI_TAMU, lse64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, ScalarIntXLen)
// vuint8m1_t vlse8_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse8XX8VUInt8VBVUSUSI_TAMU, lse8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, ScalarIntXLen)
// vuint16m1_t vlse16_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VUInt16VBVUSUSI_TAMU, lse16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, ScalarIntXLen)
// vuint32m1_t vlse32_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VUInt32VBVUSUSI_TAMU, lse32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, ScalarIntXLen)
// vuint64m1_t vlse64_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VUInt64VBVUSUSI_TAMU, lse64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, ScalarIntXLen)
// vfloat16m1_t vlse16_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse16XX16VFloat16VBVFSFSI_TAMU, lse16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, ScalarIntXLen)
// vfloat32m1_t vlse32_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse32XX32VFloat32VBVFSFSI_TAMU, lse32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, ScalarIntXLen)
// vfloat64m1_t vlse64_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, ptrdiff_t bstride, size_t vl);
CUSTOM_OP_TYPE(Vlse64XX64VFloat64VBVFSFSI_TAMU, lse64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, ScalarIntXLen)

// vint8m1_t vloxei8_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8VISIVU_TU, loxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8VISIVU_TU, loxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8VISIVU_TU, loxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8VISIVU_TU, loxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16VISIVU_TU, loxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16VISIVU_TU, loxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16VISIVU_TU, loxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16VISIVU_TU, loxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32VISIVU_TU, loxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32VISIVU_TU, loxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32VISIVU_TU, loxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32VISIVU_TU, loxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64VISIVU_TU, loxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64VISIVU_TU, loxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64VISIVU_TU, loxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64VISIVU_TU, loxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VUSUVU_TU, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VUSUVU_TU, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VUSUVU_TU, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VUSUVU_TU, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VUSUVU_TU, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VUSUVU_TU, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VUSUVU_TU, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VUSUVU_TU, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VUSUVU_TU, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VUSUVU_TU, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VUSUVU_TU, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VUSUVU_TU, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VUSUVU_TU, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VUSUVU_TU, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VUSUVU_TU, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VUSUVU_TU, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VFSFVU_TU, loxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VFSFVU_TU, loxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VFSFVU_TU, loxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VFSFVU_TU, loxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VFSFVU_TU, loxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VFSFVU_TU, loxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VFSFVU_TU, loxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VFSFVU_TU, loxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VFSFVU_TU, loxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VFSFVU_TU, loxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VFSFVU_TU, loxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VFSFVU_TU, loxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8VISIVU_TU, luxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8VISIVU_TU, luxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8VISIVU_TU, luxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_tu (vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8VISIVU_TU, luxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt8, 3, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16VISIVU_TU, luxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16VISIVU_TU, luxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16VISIVU_TU, luxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_tu (vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16VISIVU_TU, luxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt16, 3, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32VISIVU_TU, luxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32VISIVU_TU, luxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32VISIVU_TU, luxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_tu (vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32VISIVU_TU, luxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt32, 3, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64VISIVU_TU, luxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64VISIVU_TU, luxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64VISIVU_TU, luxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_tu (vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64VISIVU_TU, luxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDInt64, 3, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VUSUVU_TU, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VUSUVU_TU, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VUSUVU_TU, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_tu (vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VUSUVU_TU, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt8, 3, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VUSUVU_TU, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VUSUVU_TU, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VUSUVU_TU, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_tu (vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VUSUVU_TU, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt16, 3, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VUSUVU_TU, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VUSUVU_TU, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VUSUVU_TU, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_tu (vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VUSUVU_TU, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt32, 3, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VUSUVU_TU, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VUSUVU_TU, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VUSUVU_TU, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_tu (vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VUSUVU_TU, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDUInt64, 3, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VFSFVU_TU, luxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VFSFVU_TU, luxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VFSFVU_TU, luxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_tu (vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VFSFVU_TU, luxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat16, 3, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VFSFVU_TU, luxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VFSFVU_TU, luxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VFSFVU_TU, luxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_tu (vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VFSFVU_TU, luxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat32, 3, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VFSFVU_TU, luxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VFSFVU_TU, luxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VFSFVU_TU, luxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_tu (vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VFSFVU_TU, luxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailUndisturbed, OneDFloat64, 3, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vloxei8_v_int8m1_ta (const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8SIVU_TA, loxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_ta (const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8SIVU_TA, loxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_ta (const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8SIVU_TA, loxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_ta (const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8SIVU_TA, loxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_ta (const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16SIVU_TA, loxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_ta (const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16SIVU_TA, loxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_ta (const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16SIVU_TA, loxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_ta (const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16SIVU_TA, loxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_ta (const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32SIVU_TA, loxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_ta (const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32SIVU_TA, loxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_ta (const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32SIVU_TA, loxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_ta (const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32SIVU_TA, loxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_ta (const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64SIVU_TA, loxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_ta (const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64SIVU_TA, loxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_ta (const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64SIVU_TA, loxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_ta (const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64SIVU_TA, loxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_ta (const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8SUVU_TA, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_ta (const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8SUVU_TA, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_ta (const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8SUVU_TA, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_ta (const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8SUVU_TA, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_ta (const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16SUVU_TA, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_ta (const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16SUVU_TA, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_ta (const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16SUVU_TA, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_ta (const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16SUVU_TA, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_ta (const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32SUVU_TA, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_ta (const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32SUVU_TA, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_ta (const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32SUVU_TA, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_ta (const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32SUVU_TA, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_ta (const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64SUVU_TA, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_ta (const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64SUVU_TA, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_ta (const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64SUVU_TA, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_ta (const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64SUVU_TA, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_ta (const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16SFVU_TA, loxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_ta (const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16SFVU_TA, loxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_ta (const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16SFVU_TA, loxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_ta (const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16SFVU_TA, loxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_ta (const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32SFVU_TA, loxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_ta (const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32SFVU_TA, loxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_ta (const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32SFVU_TA, loxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_ta (const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32SFVU_TA, loxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_ta (const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64SFVU_TA, loxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_ta (const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64SFVU_TA, loxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_ta (const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64SFVU_TA, loxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_ta (const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64SFVU_TA, loxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_ta (const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8SIVU_TA, luxei8_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_ta (const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8SIVU_TA, luxei16_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_ta (const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8SIVU_TA, luxei32_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_ta (const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8SIVU_TA, luxei64_v, 8, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt8, 2, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_ta (const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16SIVU_TA, luxei8_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_ta (const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16SIVU_TA, luxei16_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_ta (const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16SIVU_TA, luxei32_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_ta (const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16SIVU_TA, luxei64_v, 16, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt16, 2, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_ta (const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32SIVU_TA, luxei8_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_ta (const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32SIVU_TA, luxei16_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_ta (const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32SIVU_TA, luxei32_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_ta (const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32SIVU_TA, luxei64_v, 32, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt32, 2, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_ta (const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64SIVU_TA, luxei8_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_ta (const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64SIVU_TA, luxei16_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_ta (const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64SIVU_TA, luxei32_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_ta (const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64SIVU_TA, luxei64_v, 64, SIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDInt64, 2, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_ta (const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8SUVU_TA, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_ta (const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8SUVU_TA, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_ta (const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8SUVU_TA, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_ta (const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8SUVU_TA, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt8, 2, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_ta (const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16SUVU_TA, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_ta (const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16SUVU_TA, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_ta (const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16SUVU_TA, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_ta (const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16SUVU_TA, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt16, 2, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_ta (const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32SUVU_TA, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_ta (const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32SUVU_TA, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_ta (const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32SUVU_TA, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_ta (const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32SUVU_TA, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt32, 2, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_ta (const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64SUVU_TA, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_ta (const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64SUVU_TA, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_ta (const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64SUVU_TA, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_ta (const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64SUVU_TA, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDUInt64, 2, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_ta (const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16SFVU_TA, luxei8_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_ta (const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16SFVU_TA, luxei16_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_ta (const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16SFVU_TA, luxei32_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_ta (const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16SFVU_TA, luxei64_v, 16, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat16, 2, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_ta (const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32SFVU_TA, luxei8_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_ta (const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32SFVU_TA, luxei16_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_ta (const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32SFVU_TA, luxei32_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_ta (const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32SFVU_TA, luxei64_v, 32, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat32, 2, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_ta (const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64SFVU_TA, luxei8_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_ta (const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64SFVU_TA, luxei16_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_ta (const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64SFVU_TA, luxei32_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_ta (const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64SFVU_TA, luxei64_v, 64, FLOAT, HaveVLParameter | NonmaskedOperation | LoadOperation | TailAgnostic, OneDFloat64, 2, OneDFloat64, OneDUInt64)
// vint8m1_t vloxei8_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8VBVISIVU_TUMA, loxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8VBVISIVU_TUMA, loxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8VBVISIVU_TUMA, loxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8VBVISIVU_TUMA, loxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16VBVISIVU_TUMA, loxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16VBVISIVU_TUMA, loxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16VBVISIVU_TUMA, loxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16VBVISIVU_TUMA, loxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32VBVISIVU_TUMA, loxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32VBVISIVU_TUMA, loxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32VBVISIVU_TUMA, loxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32VBVISIVU_TUMA, loxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64VBVISIVU_TUMA, loxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64VBVISIVU_TUMA, loxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64VBVISIVU_TUMA, loxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64VBVISIVU_TUMA, loxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VBVUSUVU_TUMA, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VBVUSUVU_TUMA, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VBVUSUVU_TUMA, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VBVUSUVU_TUMA, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VBVUSUVU_TUMA, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VBVUSUVU_TUMA, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VBVUSUVU_TUMA, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VBVUSUVU_TUMA, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VBVUSUVU_TUMA, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VBVUSUVU_TUMA, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VBVUSUVU_TUMA, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VBVUSUVU_TUMA, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VBVUSUVU_TUMA, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VBVUSUVU_TUMA, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VBVUSUVU_TUMA, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VBVUSUVU_TUMA, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VBVFSFVU_TUMA, loxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VBVFSFVU_TUMA, loxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VBVFSFVU_TUMA, loxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VBVFSFVU_TUMA, loxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VBVFSFVU_TUMA, loxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VBVFSFVU_TUMA, loxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VBVFSFVU_TUMA, loxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VBVFSFVU_TUMA, loxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VBVFSFVU_TUMA, loxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VBVFSFVU_TUMA, loxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VBVFSFVU_TUMA, loxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VBVFSFVU_TUMA, loxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8VBVISIVU_TUMA, luxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8VBVISIVU_TUMA, luxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8VBVISIVU_TUMA, luxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_tuma (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8VBVISIVU_TUMA, luxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16VBVISIVU_TUMA, luxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16VBVISIVU_TUMA, luxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16VBVISIVU_TUMA, luxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_tuma (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16VBVISIVU_TUMA, luxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32VBVISIVU_TUMA, luxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32VBVISIVU_TUMA, luxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32VBVISIVU_TUMA, luxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_tuma (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32VBVISIVU_TUMA, luxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64VBVISIVU_TUMA, luxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64VBVISIVU_TUMA, luxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64VBVISIVU_TUMA, luxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_tuma (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64VBVISIVU_TUMA, luxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VBVUSUVU_TUMA, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VBVUSUVU_TUMA, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VBVUSUVU_TUMA, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_tuma (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VBVUSUVU_TUMA, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VBVUSUVU_TUMA, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VBVUSUVU_TUMA, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VBVUSUVU_TUMA, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_tuma (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VBVUSUVU_TUMA, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VBVUSUVU_TUMA, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VBVUSUVU_TUMA, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VBVUSUVU_TUMA, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_tuma (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VBVUSUVU_TUMA, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VBVUSUVU_TUMA, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VBVUSUVU_TUMA, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VBVUSUVU_TUMA, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_tuma (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VBVUSUVU_TUMA, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VBVFSFVU_TUMA, luxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VBVFSFVU_TUMA, luxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VBVFSFVU_TUMA, luxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_tuma (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VBVFSFVU_TUMA, luxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VBVFSFVU_TUMA, luxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VBVFSFVU_TUMA, luxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VBVFSFVU_TUMA, luxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_tuma (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VBVFSFVU_TUMA, luxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VBVFSFVU_TUMA, luxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VBVFSFVU_TUMA, luxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VBVFSFVU_TUMA, luxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_tuma (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VBVFSFVU_TUMA, luxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskAgnostic, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vloxei8_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8VBVISIVU_TUMU, loxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8VBVISIVU_TUMU, loxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8VBVISIVU_TUMU, loxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8VBVISIVU_TUMU, loxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16VBVISIVU_TUMU, loxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16VBVISIVU_TUMU, loxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16VBVISIVU_TUMU, loxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16VBVISIVU_TUMU, loxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32VBVISIVU_TUMU, loxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32VBVISIVU_TUMU, loxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32VBVISIVU_TUMU, loxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32VBVISIVU_TUMU, loxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64VBVISIVU_TUMU, loxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64VBVISIVU_TUMU, loxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64VBVISIVU_TUMU, loxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64VBVISIVU_TUMU, loxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VBVUSUVU_TUMU, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VBVUSUVU_TUMU, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VBVUSUVU_TUMU, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VBVUSUVU_TUMU, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VBVUSUVU_TUMU, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VBVUSUVU_TUMU, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VBVUSUVU_TUMU, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VBVUSUVU_TUMU, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VBVUSUVU_TUMU, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VBVUSUVU_TUMU, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VBVUSUVU_TUMU, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VBVUSUVU_TUMU, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VBVUSUVU_TUMU, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VBVUSUVU_TUMU, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VBVUSUVU_TUMU, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VBVUSUVU_TUMU, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VBVFSFVU_TUMU, loxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VBVFSFVU_TUMU, loxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VBVFSFVU_TUMU, loxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VBVFSFVU_TUMU, loxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VBVFSFVU_TUMU, loxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VBVFSFVU_TUMU, loxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VBVFSFVU_TUMU, loxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VBVFSFVU_TUMU, loxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VBVFSFVU_TUMU, loxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VBVFSFVU_TUMU, loxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VBVFSFVU_TUMU, loxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VBVFSFVU_TUMU, loxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8VBVISIVU_TUMU, luxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8VBVISIVU_TUMU, luxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8VBVISIVU_TUMU, luxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_tumu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8VBVISIVU_TUMU, luxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16VBVISIVU_TUMU, luxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16VBVISIVU_TUMU, luxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16VBVISIVU_TUMU, luxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_tumu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16VBVISIVU_TUMU, luxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32VBVISIVU_TUMU, luxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32VBVISIVU_TUMU, luxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32VBVISIVU_TUMU, luxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_tumu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32VBVISIVU_TUMU, luxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64VBVISIVU_TUMU, luxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64VBVISIVU_TUMU, luxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64VBVISIVU_TUMU, luxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_tumu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64VBVISIVU_TUMU, luxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VBVUSUVU_TUMU, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VBVUSUVU_TUMU, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VBVUSUVU_TUMU, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_tumu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VBVUSUVU_TUMU, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VBVUSUVU_TUMU, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VBVUSUVU_TUMU, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VBVUSUVU_TUMU, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_tumu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VBVUSUVU_TUMU, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VBVUSUVU_TUMU, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VBVUSUVU_TUMU, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VBVUSUVU_TUMU, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_tumu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VBVUSUVU_TUMU, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VBVUSUVU_TUMU, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VBVUSUVU_TUMU, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VBVUSUVU_TUMU, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_tumu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VBVUSUVU_TUMU, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VBVFSFVU_TUMU, luxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VBVFSFVU_TUMU, luxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VBVFSFVU_TUMU, luxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_tumu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VBVFSFVU_TUMU, luxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VBVFSFVU_TUMU, luxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VBVFSFVU_TUMU, luxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VBVFSFVU_TUMU, luxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_tumu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VBVFSFVU_TUMU, luxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VBVFSFVU_TUMU, luxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VBVFSFVU_TUMU, luxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VBVFSFVU_TUMU, luxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_tumu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VBVFSFVU_TUMU, luxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailUndisturbed | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vloxei8_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8VBSIVU_TAMA, loxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8VBSIVU_TAMA, loxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8VBSIVU_TAMA, loxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8VBSIVU_TAMA, loxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16VBSIVU_TAMA, loxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16VBSIVU_TAMA, loxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16VBSIVU_TAMA, loxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16VBSIVU_TAMA, loxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32VBSIVU_TAMA, loxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32VBSIVU_TAMA, loxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32VBSIVU_TAMA, loxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32VBSIVU_TAMA, loxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64VBSIVU_TAMA, loxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64VBSIVU_TAMA, loxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64VBSIVU_TAMA, loxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64VBSIVU_TAMA, loxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VBSUVU_TAMA, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VBSUVU_TAMA, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VBSUVU_TAMA, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VBSUVU_TAMA, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VBSUVU_TAMA, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VBSUVU_TAMA, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VBSUVU_TAMA, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VBSUVU_TAMA, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VBSUVU_TAMA, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VBSUVU_TAMA, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VBSUVU_TAMA, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VBSUVU_TAMA, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VBSUVU_TAMA, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VBSUVU_TAMA, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VBSUVU_TAMA, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VBSUVU_TAMA, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VBSFVU_TAMA, loxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VBSFVU_TAMA, loxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VBSFVU_TAMA, loxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VBSFVU_TAMA, loxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VBSFVU_TAMA, loxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VBSFVU_TAMA, loxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VBSFVU_TAMA, loxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VBSFVU_TAMA, loxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VBSFVU_TAMA, loxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VBSFVU_TAMA, loxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VBSFVU_TAMA, loxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VBSFVU_TAMA, loxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8VBSIVU_TAMA, luxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8VBSIVU_TAMA, luxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8VBSIVU_TAMA, luxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_tama (vbool8_t mask, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8VBSIVU_TAMA, luxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt8, 3, OneDBool, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16VBSIVU_TAMA, luxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16VBSIVU_TAMA, luxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16VBSIVU_TAMA, luxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_tama (vbool16_t mask, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16VBSIVU_TAMA, luxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt16, 3, OneDBool, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32VBSIVU_TAMA, luxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32VBSIVU_TAMA, luxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32VBSIVU_TAMA, luxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_tama (vbool32_t mask, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32VBSIVU_TAMA, luxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt32, 3, OneDBool, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64VBSIVU_TAMA, luxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64VBSIVU_TAMA, luxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64VBSIVU_TAMA, luxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_tama (vbool64_t mask, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64VBSIVU_TAMA, luxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDInt64, 3, OneDBool, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VBSUVU_TAMA, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VBSUVU_TAMA, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VBSUVU_TAMA, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_tama (vbool8_t mask, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VBSUVU_TAMA, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt8, 3, OneDBool, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VBSUVU_TAMA, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VBSUVU_TAMA, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VBSUVU_TAMA, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_tama (vbool16_t mask, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VBSUVU_TAMA, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt16, 3, OneDBool, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VBSUVU_TAMA, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VBSUVU_TAMA, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VBSUVU_TAMA, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_tama (vbool32_t mask, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VBSUVU_TAMA, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt32, 3, OneDBool, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VBSUVU_TAMA, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VBSUVU_TAMA, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VBSUVU_TAMA, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_tama (vbool64_t mask, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VBSUVU_TAMA, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDUInt64, 3, OneDBool, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VBSFVU_TAMA, luxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VBSFVU_TAMA, luxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VBSFVU_TAMA, luxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_tama (vbool16_t mask, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VBSFVU_TAMA, luxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat16, 3, OneDBool, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VBSFVU_TAMA, luxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VBSFVU_TAMA, luxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VBSFVU_TAMA, luxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_tama (vbool32_t mask, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VBSFVU_TAMA, luxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat32, 3, OneDBool, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VBSFVU_TAMA, luxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VBSFVU_TAMA, luxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VBSFVU_TAMA, luxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_tama (vbool64_t mask, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VBSFVU_TAMA, luxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | NoMaskedOff | LoadOperation | TailAgnostic | MaskAgnostic, OneDFloat64, 3, OneDBool, OneDFloat64, OneDUInt64)
// vint8m1_t vloxei8_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VInt8VBVISIVU_TAMU, loxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vloxei16_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VInt8VBVISIVU_TAMU, loxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vloxei32_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VInt8VBVISIVU_TAMU, loxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vloxei64_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VInt8VBVISIVU_TAMU, loxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vloxei8_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VInt16VBVISIVU_TAMU, loxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vloxei16_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VInt16VBVISIVU_TAMU, loxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vloxei32_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VInt16VBVISIVU_TAMU, loxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vloxei64_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VInt16VBVISIVU_TAMU, loxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vloxei8_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VInt32VBVISIVU_TAMU, loxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vloxei16_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VInt32VBVISIVU_TAMU, loxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vloxei32_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VInt32VBVISIVU_TAMU, loxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vloxei64_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VInt32VBVISIVU_TAMU, loxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vloxei8_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VInt64VBVISIVU_TAMU, loxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vloxei16_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VInt64VBVISIVU_TAMU, loxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vloxei32_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VInt64VBVISIVU_TAMU, loxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vloxei64_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VInt64VBVISIVU_TAMU, loxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vloxei8_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V8VUInt8VBVUSUVU_TAMU, loxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vloxei16_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V8VUInt8VBVUSUVU_TAMU, loxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vloxei32_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V8VUInt8VBVUSUVU_TAMU, loxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vloxei64_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V8VUInt8VBVUSUVU_TAMU, loxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vloxei8_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VUInt16VBVUSUVU_TAMU, loxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vloxei16_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VUInt16VBVUSUVU_TAMU, loxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vloxei32_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VUInt16VBVUSUVU_TAMU, loxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vloxei64_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VUInt16VBVUSUVU_TAMU, loxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vloxei8_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VUInt32VBVUSUVU_TAMU, loxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vloxei16_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VUInt32VBVUSUVU_TAMU, loxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vloxei32_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VUInt32VBVUSUVU_TAMU, loxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vloxei64_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VUInt32VBVUSUVU_TAMU, loxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vloxei8_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VUInt64VBVUSUVU_TAMU, loxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vloxei16_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VUInt64VBVUSUVU_TAMU, loxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vloxei32_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VUInt64VBVUSUVU_TAMU, loxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vloxei64_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VUInt64VBVUSUVU_TAMU, loxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vloxei8_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V16VFloat16VBVFSFVU_TAMU, loxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vloxei16_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V16VFloat16VBVFSFVU_TAMU, loxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vloxei32_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V16VFloat16VBVFSFVU_TAMU, loxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vloxei64_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V16VFloat16VBVFSFVU_TAMU, loxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vloxei8_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V32VFloat32VBVFSFVU_TAMU, loxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vloxei16_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V32VFloat32VBVFSFVU_TAMU, loxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vloxei32_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V32VFloat32VBVFSFVU_TAMU, loxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vloxei64_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V32VFloat32VBVFSFVU_TAMU, loxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vloxei8_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei8V64VFloat64VBVFSFVU_TAMU, loxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vloxei16_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei16V64VFloat64VBVFSFVU_TAMU, loxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vloxei32_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei32V64VFloat64VBVFSFVU_TAMU, loxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vloxei64_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vloxei64V64VFloat64VBVFSFVU_TAMU, loxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
// vint8m1_t vluxei8_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VInt8VBVISIVU_TAMU, luxei8_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt8)
// vint8m1_t vluxei16_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VInt8VBVISIVU_TAMU, luxei16_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt16)
// vint8m1_t vluxei32_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VInt8VBVISIVU_TAMU, luxei32_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt32)
// vint8m1_t vluxei64_v_int8m1_tamu (vbool8_t mask, vint8m1_t merge, const int8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VInt8VBVISIVU_TAMU, luxei64_v, 8, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt8, 4, OneDBool, OneDInt8, OneDInt8, OneDUInt64)
// vint16m1_t vluxei8_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VInt16VBVISIVU_TAMU, luxei8_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt8)
// vint16m1_t vluxei16_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VInt16VBVISIVU_TAMU, luxei16_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt16)
// vint16m1_t vluxei32_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VInt16VBVISIVU_TAMU, luxei32_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt32)
// vint16m1_t vluxei64_v_int16m1_tamu (vbool16_t mask, vint16m1_t merge, const int16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VInt16VBVISIVU_TAMU, luxei64_v, 16, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt16, 4, OneDBool, OneDInt16, OneDInt16, OneDUInt64)
// vint32m1_t vluxei8_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VInt32VBVISIVU_TAMU, luxei8_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt8)
// vint32m1_t vluxei16_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VInt32VBVISIVU_TAMU, luxei16_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt16)
// vint32m1_t vluxei32_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VInt32VBVISIVU_TAMU, luxei32_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt32)
// vint32m1_t vluxei64_v_int32m1_tamu (vbool32_t mask, vint32m1_t merge, const int32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VInt32VBVISIVU_TAMU, luxei64_v, 32, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt32, 4, OneDBool, OneDInt32, OneDInt32, OneDUInt64)
// vint64m1_t vluxei8_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VInt64VBVISIVU_TAMU, luxei8_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt8)
// vint64m1_t vluxei16_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VInt64VBVISIVU_TAMU, luxei16_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt16)
// vint64m1_t vluxei32_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VInt64VBVISIVU_TAMU, luxei32_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt32)
// vint64m1_t vluxei64_v_int64m1_tamu (vbool64_t mask, vint64m1_t merge, const int64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VInt64VBVISIVU_TAMU, luxei64_v, 64, SIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDInt64, 4, OneDBool, OneDInt64, OneDInt64, OneDUInt64)
// vuint8m1_t vluxei8_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint8m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V8VUInt8VBVUSUVU_TAMU, luxei8_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt8)
// vuint8m1_t vluxei16_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint16m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V8VUInt8VBVUSUVU_TAMU, luxei16_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt16)
// vuint8m1_t vluxei32_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint32m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V8VUInt8VBVUSUVU_TAMU, luxei32_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt32)
// vuint8m1_t vluxei64_v_uint8m1_tamu (vbool8_t mask, vuint8m1_t merge, const uint8_t *base, vuint64m8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V8VUInt8VBVUSUVU_TAMU, luxei64_v, 8, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt8, 4, OneDBool, OneDUInt8, OneDUInt8, OneDUInt64)
// vuint16m1_t vluxei8_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VUInt16VBVUSUVU_TAMU, luxei8_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt8)
// vuint16m1_t vluxei16_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VUInt16VBVUSUVU_TAMU, luxei16_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt16)
// vuint16m1_t vluxei32_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VUInt16VBVUSUVU_TAMU, luxei32_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt32)
// vuint16m1_t vluxei64_v_uint16m1_tamu (vbool16_t mask, vuint16m1_t merge, const uint16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VUInt16VBVUSUVU_TAMU, luxei64_v, 16, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt16, 4, OneDBool, OneDUInt16, OneDUInt16, OneDUInt64)
// vuint32m1_t vluxei8_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VUInt32VBVUSUVU_TAMU, luxei8_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt8)
// vuint32m1_t vluxei16_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VUInt32VBVUSUVU_TAMU, luxei16_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt16)
// vuint32m1_t vluxei32_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VUInt32VBVUSUVU_TAMU, luxei32_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt32)
// vuint32m1_t vluxei64_v_uint32m1_tamu (vbool32_t mask, vuint32m1_t merge, const uint32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VUInt32VBVUSUVU_TAMU, luxei64_v, 32, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt32, 4, OneDBool, OneDUInt32, OneDUInt32, OneDUInt64)
// vuint64m1_t vluxei8_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VUInt64VBVUSUVU_TAMU, luxei8_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt8)
// vuint64m1_t vluxei16_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VUInt64VBVUSUVU_TAMU, luxei16_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt16)
// vuint64m1_t vluxei32_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VUInt64VBVUSUVU_TAMU, luxei32_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt32)
// vuint64m1_t vluxei64_v_uint64m1_tamu (vbool64_t mask, vuint64m1_t merge, const uint64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VUInt64VBVUSUVU_TAMU, luxei64_v, 64, UNSIGNED_INT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDUInt64, 4, OneDBool, OneDUInt64, OneDUInt64, OneDUInt64)
// vfloat16m1_t vluxei8_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint8mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V16VFloat16VBVFSFVU_TAMU, luxei8_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt8)
// vfloat16m1_t vluxei16_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint16m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V16VFloat16VBVFSFVU_TAMU, luxei16_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt16)
// vfloat16m1_t vluxei32_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint32m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V16VFloat16VBVFSFVU_TAMU, luxei32_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt32)
// vfloat16m1_t vluxei64_v_float16m1_tamu (vbool16_t mask, vfloat16m1_t merge, const float16_t *base, vuint64m4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V16VFloat16VBVFSFVU_TAMU, luxei64_v, 16, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat16, 4, OneDBool, OneDFloat16, OneDFloat16, OneDUInt64)
// vfloat32m1_t vluxei8_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint8mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V32VFloat32VBVFSFVU_TAMU, luxei8_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt8)
// vfloat32m1_t vluxei16_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint16mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V32VFloat32VBVFSFVU_TAMU, luxei16_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt16)
// vfloat32m1_t vluxei32_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint32m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V32VFloat32VBVFSFVU_TAMU, luxei32_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt32)
// vfloat32m1_t vluxei64_v_float32m1_tamu (vbool32_t mask, vfloat32m1_t merge, const float32_t *base, vuint64m2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V32VFloat32VBVFSFVU_TAMU, luxei64_v, 32, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat32, 4, OneDBool, OneDFloat32, OneDFloat32, OneDUInt64)
// vfloat64m1_t vluxei8_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint8mf8_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei8V64VFloat64VBVFSFVU_TAMU, luxei8_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt8)
// vfloat64m1_t vluxei16_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint16mf4_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei16V64VFloat64VBVFSFVU_TAMU, luxei16_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt16)
// vfloat64m1_t vluxei32_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint32mf2_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei32V64VFloat64VBVFSFVU_TAMU, luxei32_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt32)
// vfloat64m1_t vluxei64_v_float64m1_tamu (vbool64_t mask, vfloat64m1_t merge, const float64_t *base, vuint64m1_t bindex, size_t vl);
CUSTOM_OP_TYPE(Vluxei64V64VFloat64VBVFSFVU_TAMU, luxei64_v, 64, FLOAT, HaveVLParameter | MaskedOperation | LoadOperation | TailAgnostic | MaskUndisturbed, OneDFloat64, 4, OneDBool, OneDFloat64, OneDFloat64, OneDUInt64)
